--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v87=0;local v88;while true do if (v87==0) then v88=v2(v0(v30,16));if v19 then local v118=0;local v119;while true do if (v118==0) then v119=v5(v88,v19);v19=nil;v118=1;end if (v118==1) then return v119;end end else return v88;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v89=(v31/(2^(v32-(2 -1))))%((5 -(880 -(282 + 595)))^(((v33-(1 -0)) -(v32-(2 -1))) + (620 -((2192 -(1523 + 114)) + 64)))) ;return v89-(v89%(932 -(857 + 74))) ;else local v90=568 -(367 + 201) ;local v91;while true do if (v90==(927 -(214 + 713))) then v91=2^(v32-(1 + 0 + 0)) ;return (((v31%(v91 + v91))>=v91) and ((1 -0) + 0)) or 0 ;end end end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + (1067 -(68 + 997)) );v18=v18 + (1272 -(226 + 1044)) ;return (v36 * (1114 -858)) + v35 ;end local function v23() local v37,v38,v39,v40=v1(v16,v18,v18 + (120 -(32 + 85)) );v18=v18 + 4 ;return (v40 * (16441815 + 335401)) + (v39 * ((34668 -20135) + 51003)) + (v38 * (1213 -(892 + 65))) + v37 ;end local function v24() local v41=v23();local v42=v23();local v43=1 -0 ;local v44=(v20(v42,(1 + 0) -0 ,370 -(87 + 263) ) * ((182 -(67 + 113))^(24 + 8))) + v41 ;local v45=v20(v42,51 -(65 -35) ,23 + (13 -5) );local v46=((v20(v42,(126 + 1) -95 )==(953 -(802 + (941 -(368 + 423))))) and  -(2 -1)) or (1 -0) ;if (v45==(0 + 0)) then if (v44==(997 -((2875 -1960) + 82))) then return v46 * (0 -0) ;else v45=19 -(10 + 8) ;v43=0;end elseif (v45==(1193 + 854)) then return ((v44==0) and (v46 * (1/0))) or (v46 * NaN) ;end return v8(v46,v45-(1344 -321) ) * (v43 + (v44/((1189 -(1069 + 118))^(117 -65)))) ;end local function v25(v47) local v48=0 -0 ;local v49;local v50;while true do if (v48==(443 -(416 + 26))) then v49=v3(v16,v18,(v18 + v47) -(3 -2) );v18=v18 + v47 ;v48=(3 -2) + 1 ;end if (v48==(4 -1)) then return v6(v50);end if (v48==(440 -((1004 -(814 + 45)) + 293))) then v50={};for v110=1139 -(116 + 1022) , #v49 do v50[v110]=v2(v1(v3(v49,v110,v110)));end v48=7 -4 ;end if (v48==(430 -(3 + 41 + 386))) then v49=nil;if  not v47 then v47=v23();if (v47==(0 + 0)) then return "";end end v48=1487 -(998 + 488) ;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=(function() return function(v92,v93,v94,v95,v96,v97,v98,v99,v100) local v101=(function() return 0;end)();local v92=(function() return;end)();local v93=(function() return;end)();while true do if (v101~=1) then else local v116=(function() return 0 -0 ;end)();while true do if (v116==0) then while true do if (v92==(0 -0)) then v93=(function() return v94();end)();if (v95(v93, #"\\", #"\\")~=(241 -(187 + 54))) then else local v125=(function() return 780 -(162 + 618) ;end)();local v126=(function() return;end)();local v127=(function() return;end)();local v128=(function() return;end)();local v129=(function() return;end)();while true do if (2~=v125) then else while true do if (v126~=2) then else local v380=(function() return 0 + 0 ;end)();local v381=(function() return;end)();while true do if (v380==0) then v381=(function() return 0;end)();while true do if (v381==(0 + 0)) then if (v95(v128, #"!", #",")~= #"~") then else v129[3 -1 ]=(function() return v96[v129[2 -0 ]];end)();end if (v95(v128,2,1 + 1 )~= #"}") then else v129[ #"asd"]=(function() return v96[v129[ #"gha"]];end)();end v381=(function() return 1637 -(1373 + 263) ;end)();end if (v381==(1001 -(451 + 549))) then v126=(function() return  #"asd";end)();break;end end break;end end end if (v126==(0 + 0)) then local v382=(function() return 0 -0 ;end)();local v383=(function() return;end)();while true do if (v382==0) then v383=(function() return 0;end)();while true do if (v383~=(0 -0)) then else v127=(function() return v95(v93,1386 -(746 + 638) , #"asd");end)();v128=(function() return v95(v93, #"xnxx",6);end)();v383=(function() return 1 + 0 ;end)();end if (v383==(2 -1)) then v126=(function() return  #"|";end)();break;end end break;end end end if ( #"asd"~=v126) then else if (v95(v128, #"91(", #"xxx")== #"[") then v129[ #"0836"]=(function() return v96[v129[ #"?id="]];end)();end v97[v98]=(function() return v129;end)();break;end if (v126~= #">") then else local v385=(function() return 0 -0 ;end)();local v386=(function() return;end)();while true do if (v385==(341 -(218 + 123))) then v386=(function() return 1581 -(1535 + 46) ;end)();while true do if (v386==(1 + 0)) then v126=(function() return 2;end)();break;end if (v386~=0) then else v129=(function() return {v99(),v99(),nil,nil};end)();if (v127==(0 + 0)) then local v467=(function() return 0 -0 ;end)();local v468=(function() return;end)();while true do if (v467==(0 + 0)) then v468=(function() return 0;end)();while true do if (v468==0) then v129[ #"-19"]=(function() return v99();end)();v129[ #"?id="]=(function() return v99();end)();break;end end break;end end elseif (v127== #"\\") then v129[ #"19("]=(function() return v100();end)();elseif (v127==(562 -(306 + 254))) then v129[ #"19("]=(function() return v100() -(2^16) ;end)();elseif (v127~= #"xxx") then else local v473=(function() return 0;end)();local v474=(function() return;end)();while true do if (v473==0) then v474=(function() return 0;end)();while true do if (v474==(114 -(4 + 110))) then v129[ #"xnx"]=(function() return v100() -((1 + 1)^(1443 -(41 + 1386))) ;end)();v129[ #"http"]=(function() return v99();end)();break;end end break;end end end v386=(function() return 104 -(17 + 86) ;end)();end end break;end end end end break;end if ((0 -0)~=v125) then else local v138=(function() return 0;end)();while true do if (v138~=1) then else v125=(function() return 1;end)();break;end if ((1467 -(899 + 568))~=v138) then else v126=(function() return 0;end)();v127=(function() return nil;end)();v138=(function() return 1 + 0 ;end)();end end end if (v125==(1 -0)) then local v139=(function() return 0 -0 ;end)();while true do if (v139==0) then v128=(function() return nil;end)();v129=(function() return nil;end)();v139=(function() return 1;end)();end if (v139~=(1 + 0)) then else v125=(function() return 4 -2 ;end)();break;end end end end end break;end end return v92,v93,v94,v95,v96,v97,v98,v99,v100;end end end if (v101==0) then local v117=(function() return 603 -(268 + 335) ;end)();while true do if (1==v117) then v101=(function() return 3 -2 ;end)();break;end if (v117==(290 -(60 + 230))) then v92=(function() return 0 + 0 ;end)();v93=(function() return nil;end)();v117=(function() return 1;end)();end end end end end;end)();local v52=(function() return function(v102,v103,v104) local v105=(function() return 572 -(426 + 146) ;end)();local v106=(function() return;end)();while true do if (v105==(0 -0)) then v106=(function() return 0 + 0 ;end)();while true do if ((1456 -(282 + 1174))~=v106) then else local v123=(function() return 811 -(569 + 242) ;end)();while true do if (v123==(0 -0)) then v102[v103-#"}" ]=(function() return v104();end)();return v102,v103,v104;end end end end break;end end end;end)();local v53=(function() return {};end)();local v54=(function() return {};end)();local v55=(function() return {};end)();local v56=(function() return {v53,v54,nil,v55};end)();local v57=(function() return v23();end)();local v58=(function() return {};end)();for v66= #"|",v57 do local v67=(function() return 0;end)();local v68=(function() return;end)();local v69=(function() return;end)();local v70=(function() return;end)();while true do if (v67==(1 + 0)) then v70=(function() return nil;end)();while true do if (v68==(0 -0)) then local v120=(function() return 0;end)();local v121=(function() return;end)();while true do if (v120==0) then v121=(function() return 0;end)();while true do if ((1212 -(323 + 889))==v121) then local v130=(function() return 1024 -(706 + 318) ;end)();while true do if (v130~=(1251 -(721 + 530))) then else v69=(function() return v21();end)();v70=(function() return nil;end)();v130=(function() return 1272 -(945 + 326) ;end)();end if (v130~=(2 -1)) then else v121=(function() return 1 + 0 ;end)();break;end end end if (v121==(701 -(271 + 429))) then v68=(function() return 1 + 0 ;end)();break;end end break;end end end if (v68==(1 + 0)) then if (v69== #":") then v70=(function() return v21()~=(1500 -(1408 + 92)) ;end)();elseif (v69==(984 -(18 + 964))) then v70=(function() return v24();end)();elseif (v69~= #"xxx") then else v70=(function() return v25();end)();end v58[v66]=(function() return v70;end)();break;end end break;end if (v67==(1086 -(461 + 625))) then v68=(function() return 0 + 0 ;end)();v69=(function() return nil;end)();v67=(function() return 1289 -(993 + 295) ;end)();end end end v56[ #"-19"]=(function() return v21();end)();for v71= #",",v23() do FlatIdent_C460,Descriptor,v21,v20,v58,v53,v71,v22,v23=(function() return v51(FlatIdent_C460,Descriptor,v21,v20,v58,v53,v71,v22,v23);end)();end for v72= #"\\",v23() do v54,v72,v28=(function() return v52(v54,v72,v28);end)();end return v56;end local function v29(v60,v61,v62) local v63=v60[1 + 0 ];local v64=v60[852 -(20 + 830) ];local v65=v60[(1151 -(556 + 592)) + 0 ];return function(...) local v73=v63;local v74=v64;local v75=v65;local v76=v27;local v77=127 -(42 + 74 + 10) ;local v78= -(1 + 0);local v79={};local v80={...};local v81=v12("#",...) -(1 -0) ;local v82={};local v83={};for v107=0 + 0 ,v81 do if ((1122<=3910) and (v107>=v75)) then v79[v107-v75 ]=v80[v107 + 1 + 0 ];else v83[v107]=v80[v107 + 1 ];end end local v84=(v81-v75) + 1 ;local v85;local v86;while true do v85=v73[v77];v86=v85[1];if ((v86<=60) or (4322<3616)) then if (v86<=(11 + 18)) then if (v86<=(36 -22)) then if (v86<=(15 -9)) then if (v86<=(1553 -(1126 + 425))) then if (v86<=(405 -(118 + 287))) then v83[v85[7 -5 ]]=v83[v85[1124 -(118 + 1003) ]] -v83[v85[4]] ;elseif (v86==1) then v83[v85[5 -3 ]]=v85[380 -(142 + 235) ];elseif (v85[9 -7 ]<v83[v85[1 + 3 ]]) then v77=v85[3];else v77=v77 + (978 -(553 + 424)) ;end elseif (v86<=(7 -3)) then if (v86==(3 + 0)) then v83[v85[2 + 0 ]]=v83[v85[2 + 1 ]];else do return v83[v85[1 + 1 ]]();end end elseif (v86>(3 + 2)) then v83[v85[4 -2 ]]=v83[v85[7 -4 ]] + v83[v85[8 -4 ]] ;elseif (v83[v85[1 + 1 ]]<v83[v85[4]]) then v77=v77 + (4 -3) ;else v77=v85[756 -(239 + 514) ];end elseif (v86<=(4 + 6)) then if (v86<=8) then if ((12<4208) and (v86>(1336 -(797 + 532)))) then local v145=v85[2 + 0 ];local v146={v83[v145](v13(v83,v145 + (2 -1) ,v78))};local v147=1202 -((1227 -(174 + 680)) + 829) ;for v307=v145,v85[735 -(476 + 255) ] do v147=v147 + (3 -2) ;v83[v307]=v146[v147];end else local v148=v85[1132 -(369 + 761) ];do return v13(v83,v148,v148 + v85[2 + 1 ] );end end elseif (v86>(15 -6)) then v83[v85[3 -1 ]][v85[241 -((132 -68) + 174) ]]=v85[1 + 3 ];else local v151=v83[v85[5 -1 ]];if  not v151 then v77=v77 + (337 -(144 + 192)) ;else v83[v85[2 + 0 ]]=v151;v77=v85[219 -(42 + 174) ];end end elseif (v86<=(10 + 2)) then if (v86>11) then if ((v85[2]<v83[v85[4 + 0 ]]) or (2990<=2980)) then v77=v77 + 1 ;else v77=v85[(741 -(396 + 343)) + 1 ];end else local v152=0;local v153;while true do if ((v152==(1504 -(363 + 1141))) or (2575>=4275)) then v153=v85[(140 + 1442) -(1183 + (1874 -(29 + 1448))) ];v83[v153]=v83[v153](v83[v153 + (2 -1) ]);break;end end end elseif ((v86>13) or (3626<=1306)) then v83[v85[2 + 0 ]]=v83[v85[3 + 0 ]][v83[v85[1979 -(1913 + 62) ]]];else do return v83[v85[2 + (1389 -(135 + 1254)) ]];end end elseif (v86<=(55 -34)) then if (v86<=(1950 -(565 + 1368))) then if (v86<=(56 -41)) then v83[v85[1663 -(1477 + 184) ]]=v85[3 -0 ];elseif (v86==((56 -41) + 1)) then v83[v85[858 -(564 + 292) ]]=v83[v85[3]][v83[v85[6 -(9 -7) ]]];else local v158=v85[5 -3 ];local v159=v85[308 -(244 + 60) ];local v160=v158 + 2 + 0 + 0 ;local v161={v83[v158](v83[v158 + (1002 -(938 + 63)) ],v83[v160])};for v310=1 + 0 ,v159 do v83[v160 + v310 ]=v161[v310];end local v162=v161[1126 -(936 + 189) ];if ((1368<3780) and v162) then v83[v160]=v162;v77=v85[1 + 2 ];else v77=v77 + 1 ;end end elseif (v86<=(1632 -(1565 + 48))) then if (v86==(12 + 6)) then if ((v83[v85[1529 -(389 + 1138) ]]<=v83[v85[1142 -(782 + 356) ]]) or (3169==2273)) then v77=v77 + 1 ;else v77=v85[(844 -(102 + 472)) -(176 + 86 + 5) ];end else v83[v85[(3 + 1) -2 ]]=v85[3]^v83[v85[4]] ;end elseif (v86==(29 -(9 + 0))) then local v164=v85[1094 -((2520 -(320 + 1225)) + 117) ];local v165=v83[v164];local v166=v85[1878 -(157 + (3058 -1340)) ];for v313=1 + 0 ,v166 do v165[v313]=v83[v164 + v313 ];end else local v167=0;local v168;local v169;local v170;local v171;while true do if (v167==((2 + 1) -2)) then v78=(v170 + v168) -(3 -2) ;v171=1018 -(697 + 321) ;v167=5 -3 ;end if ((2481<=3279) and (v167==(3 -1))) then for v413=v168,v78 do v171=v171 + (2 -1) ;v83[v413]=v169[v171];end break;end if ((v167==(0 + 0)) or (1063<=877)) then v168=v85[3 -1 ];v169,v170=v76(v83[v168](v83[v168 + (2 -1) ]));v167=1228 -(322 + 905) ;end end end elseif ((2314==2314) and (v86<=(636 -(602 + 9)))) then if (v86<=((2676 -(157 + 1307)) -(449 + 740))) then if (v86==22) then v83[v85[874 -(826 + 46) ]]=v83[v85[3]] + v85[951 -(245 + 702) ] ;elseif ((924>=477) and (v83[v85[6 -4 ]]~=v85[2 + 2 ])) then v77=v77 + (1899 -(260 + 1638)) ;else v77=v85[443 -(382 + 58) ];end elseif (v86==(76 -52)) then v83[v85[2]]={};else local v174=v85[2 + 0 ];local v175=v83[v174];local v176=v85[3];for v316=1,v176 do v175[v316]=v83[v174 + v316 ];end end elseif (v86<=27) then if ((1813<=3778) and (v86>(53 -27))) then if (v83[v85[5 -3 ]]~=v83[v85[1209 -(902 + 303) ]]) then v77=v77 + ((1860 -(821 + 1038)) -0) ;else v77=v85[6 -3 ];end else local v177=v85[1 + 1 ];v83[v177](v83[v177 + (1691 -(1121 + 569)) ]);end elseif (v86>(242 -(22 + 192))) then v83[v85[(1709 -1024) -(483 + 22 + 178) ]][v83[v85[3]]]=v83[v85[1467 -(1404 + 59) ]];else v83[v85[5 -(4 -1) ]]=v61[v85[(2 + 1) -0 ]];end elseif ((4150==4150) and (v86<=(809 -(468 + 297)))) then if (v86<=(598 -(334 + 228))) then if (v86<=(107 -(185 -110))) then if (v86<=(69 -39)) then if ((432<=3007) and v83[v85[2 -0 ]]) then v77=v77 + 1 + (1026 -(834 + 192)) ;else v77=v85[239 -(141 + 95) ];end elseif (v86>(2 + 29 + 0)) then v83[v85[4 -2 ]]=v83[v85[6 -3 ]] -v83[v85[1 + 3 ]] ;else v62[v85[8 -5 ]]=v83[v85[2 + 0 ]];end elseif ((v86<=(18 + 16)) or (408>2721)) then if ((v86>33) or (3418<2497)) then v83[v85[2]][v83[v85[4 -1 ]]]=v83[v85[3 + 1 ]];else for v319=v85[165 -(24 + 68 + 71) ],v85[2 + 1 + 0 ] do v83[v319]=nil;end end elseif ((1735<2169) and (v86==(58 -23))) then if ((3890>=3262) and (v83[v85[(1187 -420) -(574 + (495 -(300 + 4))) ]]<v83[v85[4 + 0 ]])) then v77=v85[7 -4 ];else v77=v77 + 1 ;end else local v188=v85[1 + 1 ];local v189=v83[v188];for v321=v188 + (2 -1) + (362 -(112 + 250)) ,v85[(340 + 512) -(254 + (1490 -895)) ] do v7(v189,v83[v321]);end end elseif (v86<=(166 -(55 + 71))) then if (v86<=(49 -11)) then if (v86==(1827 -(573 + 1217))) then v83[v85[2]]=v85[8 -(3 + 2) ]~=(0 + 0) ;v77=v77 + (1 -0) ;else local v191=939 -(714 + 117 + 108) ;local v192;while true do if ((v191==(0 -0)) or (4356>=4649)) then v192=v85[2 -0 ];v83[v192]=v83[v192]();break;end end end elseif (v86==(5 + 34)) then v83[v85[(2 + 0) -0 ]]=v62[v85[809 -(118 + 688) ]];else do return v83[v85[50 -(25 + 23) ]];end end elseif (v86<=(5 + 4 + 33)) then if ((3904==3904) and (v86>(1927 -(689 + 238 + 959)))) then local v195=0;local v196;while true do if (v195==(0 -0)) then v196=v85[734 -(16 + 716) ];v83[v196]=v83[v196](v13(v83,v196 + 1 ,v85[3]));break;end end else v83[v85[3 -1 ]]=v83[v85[100 -(11 + 86) ]]/v85[4] ;end elseif ((v86>(104 -61)) or (2860>=3789)) then v62[v85[288 -(175 + (1524 -(1001 + 413))) ]]=v83[v85[4 -2 ]];else v83[v85[9 -(15 -8) ]]=v29(v74[v85[3]],nil,v62);end elseif (v86<=(1848 -(503 + 1293))) then if ((v86<=((1015 -(244 + 638)) -85)) or (1086>4449)) then if ((4981>546) and (v86<=46)) then if (v86==(33 + (705 -(627 + 66)))) then local v201=v85[1063 -(810 + 251) ];local v202,v203=v76(v83[v201](v83[v201 + 1 + 0 ]));v78=(v203 + v201) -(1 + (0 -0)) ;local v204=0 + 0 ;for v322=v201,v78 do v204=v204 + (534 -(43 + 490)) ;v83[v322]=v202[v204];end else local v205=0;local v206;while true do if ((v205==(733 -(711 + 22))) or (2366<=8)) then v206=v85[7 -(607 -(512 + 90)) ];v83[v206]=v83[v206](v13(v83,v206 + (860 -(240 + (2525 -(1665 + 241)))) ,v85[720 -(373 + 344) ]));break;end end end elseif (v86==(12 + 35)) then v83[v85[2 -0 ]]=v83[v85[1 + 1 + 1 ]] + v83[v85[4]] ;else v83[v85[1746 -(1344 + 106 + 294) ]]=v61[v85[408 -(255 + 150) ]];end elseif (v86<=(40 + (26 -16))) then if (v86==49) then v83[v85[2 + (0 -0) ]]=v83[v85[12 -9 ]]/v85[12 -8 ] ;else v83[v85[1741 -(404 + 1335) ]][v85[(1508 -(35 + 1064)) -(183 + 223) ]]=v83[v85[4 -0 ]];end elseif ((v86==(34 + 17)) or (2590==2864)) then local v213=v85[1 + 0 + 1 ];v83[v213]=v83[v213](v13(v83,v213 + (338 -(10 + 327)) ,v78));else v83[v85[2 + 0 ]][v85[341 -(118 + 220) ]]=v85[2 + 2 ];end elseif ((v86<=56) or (2624>4149)) then if (v86<=(503 -(108 + 341))) then if ((v86==(24 + 29)) or (2618>=4495)) then do return v83[v85[8 -6 ]]();end else local v217=1493 -(711 + (1672 -890)) ;local v218;while true do if (((0 -0)==v217) or (2485>=3131)) then v218=v85[471 -(270 + 199) ];do return v13(v83,v218,v78);end break;end end end elseif ((v86==(18 + 37)) or (2804<=2785)) then v83[v85[1821 -(580 + 1239) ]]();else v61[v85[8 -5 ]]=v83[v85[2 + 0 ]];end elseif (v86<=(3 + 55)) then if (v86==(25 + 32)) then local v221=v85[(1 + 3) -2 ];do return v83[v221](v13(v83,v221 + 1 + 0 ,v85[1170 -(645 + 522) ]));end else for v325=v85[2],v85[3] do v83[v325]=nil;end end elseif (v86>(1849 -(1010 + 780))) then local v222=v85[2];v83[v222]=v83[v222](v83[v222 + 1 + 0 ]);elseif ((v85[2]<=v83[v85[19 -(1251 -(298 + 938)) ]]) or (4571==3415)) then v77=v77 + (2 -(1260 -(233 + 1026))) ;else v77=v85[1839 -(1045 + 791) ];end elseif (v86<=(227 -137)) then if ((v86<=(114 -39)) or (4441>4787)) then if ((1920==1920) and (v86<=67)) then if (v86<=(568 -(351 + 154))) then if (v86<=(1635 -(1281 + (1959 -(636 + 1030))))) then local v134=266 -(28 + 238) ;local v135;while true do if ((0 -0)==v134) then v135=v85[1561 -(1381 + 178) ];do return v13(v83,v135,v78);end break;end end elseif (v86>(59 + 3)) then local v224=v85[2];local v225=v83[v85[3 + 0 ]];v83[v224 + 1 + 0 ]=v225;v83[v224]=v225[v85[4]];else v83[v85[6 -4 ]]=v85[2 + 1 ]^v83[v85[474 -(381 + 89) ]] ;end elseif (v86<=(58 + 7)) then if (v86==64) then local v230=v85[2];v83[v230](v83[v230 + 1 + 0 ]);else v83[v85[2 -0 ]]=v83[v85[3]] * v83[v85[4]] ;end elseif (v86==(1222 -(1074 + 82))) then if (v83[v85[2]]<v83[v85[(5 + 3) -4 ]]) then v77=v77 + (1785 -(214 + 1570)) ;else v77=v85[1458 -(990 + 455 + 10) ];end elseif ((v83[v85[1 + 1 ]]<v83[v85[2 + 2 ]]) or (647==4477)) then v77=v85[3 + 0 ];else v77=v77 + (3 -2) ;end elseif ((3819==3819) and (v86<=(1797 -(1668 + 58)))) then if ((v86<=(695 -(512 + 114))) or (1466>4360)) then if (v86>68) then v83[v85[2]]=v83[v85[7 -4 ]] * v83[v85[8 -4 ]] ;elseif (v85[6 -(2 + 2) ]==v83[v85[2 + 2 ]]) then v77=v77 + 1 + 0 ;else v77=v85[3 + 0 ];end elseif ((v86==(236 -166)) or (14>994)) then v77=v85[1997 -(109 + 1885) ];else v83[v85[2]]();end elseif (v86<=(1542 -(1269 + 200))) then if (v86>(137 -65)) then v77=v85[818 -(98 + 717) ];else local v235=v85[828 -(802 + 24) ];local v236={v83[v235](v83[v235 + (1 -0) ])};local v237=0 -0 ;for v328=v235,v85[4] do v237=v237 + 1 + 0 ;v83[v328]=v236[v237];end end elseif (v86>(57 + 2 + 15)) then local v238=0;local v239;while true do if ((401<=734) and (v238==0)) then v239=v83[v85[(222 -(55 + 166)) + 3 ]];if  not v239 then v77=v77 + 1 + 0 ;else v83[v85[5 -(1 + 2) ]]=v239;v77=v85[3];end break;end end elseif v83[v85[6 -4 ]] then v77=v77 + 1 + 0 ;else v77=v85[2 + 1 + 0 ];end elseif ((v86<=(68 + 14)) or (2167>=3426)) then if (v86<=(57 + 21)) then if (v86<=(36 + 40)) then if (v85[(5480 -4045) -(797 + 636) ]<=v83[v85[4]]) then v77=v77 + ((301 -(36 + 261)) -3) ;else v77=v85[(2836 -1214) -(1427 + 192) ];end elseif (v86>(27 + 50)) then if (v85[4 -2 ]<v83[v85[4]]) then v77=v85[3 + 0 ];else v77=v77 + 1 + 0 ;end else v83[v85[328 -(192 + (1502 -(34 + 1334))) ]]=v62[v85[3]];end elseif ((764<3285) and (v86<=(1356 -(316 + 960)))) then if ((2499==2499) and (v86>(17 + 27 + 35))) then v83[v85[2 + 0 ]][v85[3 + 0 + 0 ]]=v83[v85[15 -11 ]];else local v245=551 -(83 + 468) ;local v246;while true do if (v245==(1806 -(1202 + 604))) then v246=v85[(1292 -(1035 + 248)) -7 ];do return v83[v246](v13(v83,v246 + (1 -0) ,v85[8 -5 ]));end break;end end end elseif (v86>(406 -(45 + 280))) then v61[v85[3 + 0 ]]=v83[v85[2]];else local v249=0;local v250;local v251;local v252;while true do if (v249==(0 + 0)) then v250=v74[v85[3]];v251=nil;v249=1 + 0 ;end if (v249==1) then v252={};v251=v10({},{__index=function(v416,v417) local v418=v252[v417];return v418[1 + 0 ][v418[1 + 1 ]];end,__newindex=function(v419,v420,v421) local v422=0 -0 ;local v423;while true do if ((1911 -(340 + 1571))==v422) then v423=v252[v420];v423[1][v423[1 + 1 ]]=v421;break;end end end});v249=1774 -(1733 + 39) ;end if ((v249==(5 -(322 -(134 + 185)))) or (692>=4933)) then for v424=1,v85[1038 -(125 + 909) ] do v77=v77 + 1 ;local v425=v73[v77];if (v425[1949 -(1096 + 852) ]==(2 + 1)) then v252[v424-(1 -0) ]={v83,v425[239 -(46 + 190) ]};else v252[v424-(96 -(51 + 44)) ]={v61,v425[729 -(228 + 498) ]};end v82[ #v82 + 1 ]=v252;end v83[v85[1 + 1 ]]=v29(v250,v251,v62);break;end end end elseif ((v86<=(48 + 38)) or (3154<=2260)) then if (v86<=(747 -(174 + (1457 -(478 + 490))))) then if (v86==(216 -133)) then local v253=0;local v254;local v255;local v256;while true do if ((1906 -(440 + 390 + 1075))==v253) then v256={};v255=v10({},{__index=function(v427,v428) local v429=v256[v428];return v429[525 -(303 + 221) ][v429[1271 -(231 + 1038) ]];end,__newindex=function(v430,v431,v432) local v433=0 + 0 ;local v434;while true do if (v433==0) then v434=v256[v431];v434[1163 -(171 + 991) ][v434[8 -6 ]]=v432;break;end end end});v253=5 -3 ;end if ((0 -0)==v253) then v254=v74[v85[(9 -6) + 0 ]];v255=nil;v253=3 -2 ;end if (v253==(5 -(1382 -(1055 + 324)))) then for v435=1 -0 ,v85[12 -8 ] do local v436=1248 -(111 + 1137) ;local v437;while true do if (((159 -(91 + 67))==v436) or (2637>3149)) then if ((v437[2 -1 ]==(1 + (1342 -(1093 + 247)))) or (3992<2407)) then v256[v435-(524 -(423 + 100)) ]={v83,v437[2 + 1 ]};else v256[v435-(772 -(326 + 445)) ]={v61,v437[6 -3 ]};end v82[ #v82 + (712 -(530 + 181)) ]=v256;break;end if ((v436==(0 + 0)) or (2902>4859)) then v77=v77 + (882 -(614 + 267)) ;v437=v73[v77];v436=33 -(19 + 13) ;end end end v83[v85[2 -(0 + 0) ]]=v29(v254,v255,v62);break;end end elseif  not v83[v85[(15 -11) -2 ]] then v77=v77 + (2 -1) ;else v77=v85[1 + 2 ];end elseif (v86==85) then local v257=v85[3 -1 ];v83[v257](v13(v83,v257 + (1 -0) ,v85[1815 -(1293 + 519) ]));else v83[v85[6 -4 ]]=v83[v85[5 -2 ]] + v85[(25 -16) -5 ] ;end elseif ((1679<4359) and (v86<=((419 -252) -(29 + 50)))) then if (v86==(375 -288)) then local v259=v85[4 -(7 -5) ];local v260=v85[3 + 1 ];local v261=v259 + (3 -2) + 1 ;local v262={v83[v259](v83[v259 + 1 + 0 ],v83[v261])};for v331=1 + 0 ,v260 do v83[v261 + v331 ]=v262[v331];end local v263=v262[1];if v263 then v83[v261]=v263;v77=v85[2 + 1 ];else v77=v77 + (1097 -(709 + 387)) ;end elseif (v83[v85[1860 -(508 + 165 + 1185) ]]==v85[11 -7 ]) then v77=v77 + 1 ;else v77=v85[3];end elseif (v86>(285 -(501 -305))) then local v264=0 -0 ;local v265;local v266;while true do if (v264==1) then for v438=v265 + 1 + 0 ,v85[3 + 1 ] do v266=v266   .. v83[v438] ;end v83[v85[2 -0 ]]=v266;break;end if ((1913<4670) and (v264==0)) then v265=v85[3];v266=v83[v265];v264=(689 -(364 + 324)) + 0 ;end end else local v267=(0 -0) -(0 -0) ;local v268;while true do if (v267==((0 + 0) -0)) then v268=v85[(7874 -5992) -((713 -267) + 1434) ];v83[v268]=v83[v268]();break;end end end elseif (v86<=(1388 -(1040 + 243))) then if (v86<=(289 -192)) then if ((v86<=(1940 -(559 + 1288))) or (2846<879)) then if (v86<=(2022 -(609 + 1322))) then local v136=v85[456 -(13 + 441) ];v83[v136]=v83[v136](v13(v83,v136 + (3 -2) ,v78));elseif ((4588==4588) and (v86>((728 -488) -148))) then v83[v85[2]]=v83[v85[14 -11 ]] * v85[4] ;elseif (v85[1 + 1 ]<v83[v85[14 -10 ]]) then v77=v77 + 1 + 0 ;else v77=v85[2 + 1 ];end elseif (v86<=(281 -186)) then if (v86==(52 + 42)) then v83[v85[3 -1 ]]=v83[v85[2 + (1269 -(1249 + 19)) ]][v85[3 + 1 ]];else do return;end end elseif (v86>(69 + 27)) then if ((v83[v85[2 + 0 ]]~=v85[4 + 0 ]) or (347==2065)) then v77=v77 + (434 -(139 + 14 + 280)) ;else v77=v85[3];end elseif ((v83[v85[2]]~=v83[v85[4]]) or (1311>2697)) then v77=v77 + (2 -1) ;else v77=v85[(11 -8) + (1086 -(686 + 400)) ];end elseif (v86<=(40 + 61)) then if (v86<=(52 + 47)) then if (v86==(89 + 9)) then local v272=v85[2 + 0 ];local v273={};for v334=1 -0 , #v82 do local v335=v82[v334];for v367=0 + 0 , #v335 do local v368=v335[v367];local v369=v368[668 -(89 + 578) ];local v370=v368[2 + 0 + 0 ];if (((v369==v83) and (v370>=v272)) or (2717>3795)) then local v439=0 -0 ;while true do if ((v439==0) or (1081<391)) then v273[v370]=v369[v370];v368[(1279 -(73 + 156)) -(3 + 569 + 477) ]=v273;break;end end end end end else v83[v85[1 + 1 ]]= #v83[v85[3]];end elseif ((v86==100) or (121>3438)) then v83[v85[2 + 0 ]]=v85[1 + 2 ]~=(86 -((895 -(721 + 90)) + 2)) ;elseif (v85[2 -0 ]==v83[v85[3 + 1 ]]) then v77=v77 + (843 -(497 + 345)) ;else v77=v85[1 + 2 ];end elseif ((71<1949) and (v86<=(3 + 100))) then if ((4254==4254) and (v86>(18 + 84))) then v83[v85[1335 -(605 + 728) ]]=v85[3 + 0 ]~=(0 -0) ;v77=v77 + 1 + 0 ;else local v277=0;local v278;while true do if (v277==(0 -0)) then v278=v85[2];v83[v278](v13(v83,v278 + 1 + 0 ,v85[7 -4 ]));break;end end end elseif ((3196>=2550) and (v86==(79 + 25))) then v83[v85[491 -(457 + 32) ]]=v83[v85[3]] * v85[4] ;else local v280=v85[2];local v281={};for v336=1 + 0 , #v82 do local v337=v82[v336];for v372=1402 -(832 + (1850 -1280)) , #v337 do local v373=0;local v374;local v375;local v376;while true do if ((2456<4176) and (v373==(1 + 0))) then v376=v374[1 + 1 ];if (((v375==v83) and (v376>=v280)) or (1150==3452)) then v281[v376]=v375[v376];v374[3 -2 ]=v281;end break;end if ((1875<2258) and (v373==(0 + 0))) then v374=v337[v372];v375=v374[797 -(588 + 208) ];v373=471 -(224 + 246) ;end end end end end elseif (v86<=(304 -191)) then if (v86<=(1909 -(884 + 916))) then if (v86<=(223 -116)) then if (v86>(62 + 44)) then local v282=v85[655 -((375 -143) + 421) ];local v283={v83[v282](v83[v282 + 1 ])};local v284=0;for v338=v282,v85[4] do v284=v284 + 1 ;v83[v338]=v283[v284];end elseif (v83[v85[1 + 1 ]]==v85[1 + 3 ]) then v77=v77 + (3 -2) ;else v77=v85[608 -(316 + 289) ];end elseif ((1173>41) and (v86>(282 -174))) then local v285=0 + 0 ;local v286;local v287;while true do if (v285==((2676 -1222) -(666 + 787))) then for v440=v286 + (426 -(360 + 65)) ,v85[4 + 0 ] do v287=v287   .. v83[v440] ;end v83[v85[256 -(79 + 175) ]]=v287;break;end if (v285==(0 -0)) then v286=v85[3];v287=v83[v286];v285=1;end end else v83[v85[2 + 0 ]]= #v83[v85[8 -5 ]];end elseif (v86<=(213 -(19 + 83))) then if (v86>(1009 -(503 + 396))) then do return;end else v83[v85[183 -(92 + 89) ]]=v85[5 -2 ]~=(0 + 0) ;end elseif (v86==(67 + 45)) then v83[v85[7 -5 ]]={};elseif  not v83[v85[1 + 1 ]] then v77=v77 + (2 -1) ;else v77=v85[3 + 0 ];end elseif (v86<=(56 + 61)) then if (v86<=(350 -(6 + 229))) then if (v86>(12 + 3 + (196 -97))) then v83[v85[2 -0 ]]=v83[v85[1247 -(485 + 759) ]];else local v293=v85[4 -2 ];local v294=v83[v85[1192 -(442 + 747) ]];v83[v293 + 1 ]=v294;v83[v293]=v294[v85[1139 -(832 + 303) ]];end elseif ((v86==(1062 -(88 + 858))) or (56>=3208)) then v83[v85[1 + 1 ]]=v29(v74[v85[3 + 0 ]],nil,v62);else local v299=v85[1 + 1 ];local v300={v83[v299](v13(v83,v299 + 1 ,v78))};local v301=513 -(203 + 310) ;for v341=v299,v85[4] do local v342=789 -(766 + 23) ;while true do if (v342==0) then v301=v301 + (4 -3) ;v83[v341]=v300[v301];break;end end end end elseif (v86<=(162 -(2036 -(1238 + 755)))) then if (v86>((22 + 288) -192)) then if (v83[v85[6 -4 ]]<=v83[v85[1077 -(1036 + (1571 -(709 + 825))) ]]) then v77=v77 + (1 -0) + 0 ;else v77=v85[5 -2 ];end else local v302=0 + 0 ;local v303;while true do if (v302==(0 -0)) then v303=v85[2];v83[v303](v13(v83,v303 + (1481 -(641 + 839)) ,v78));break;end end end elseif ((4313>3373) and (v86==(1033 -(910 + 3)))) then v83[v85[4 -2 ]]=v83[v85[3]][v85[4]];else local v306=v85[2];v83[v306](v13(v83,v306 + (1685 -(1466 + 218)) ,v78));end v77=v77 + 1 + 0 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
