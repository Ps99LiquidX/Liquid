--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v78=0;while true do if (v78==0) then v19=v0(v3(v30,1,1));return "";end end else local v79=v2(v0(v30,16));if v19 then local v89=0;local v90;while true do if (v89==0) then v90=v5(v79,v19);v19=nil;v89=1;end if (v89==1) then return v90;end end else return v79;end end end);local function v20(v31,v32,v33) if v33 then local v80=0 -(1637 -(1523 + 114)) ;local v81;while true do if (v80==(0 -0)) then v81=(v31/((3 -1)^(v32-1)))%((4 -2)^(((v33-((883 -263) -(555 + 64))) -(v32-(932 -(857 + 74)))) + (569 -((1432 -(68 + 997)) + (1471 -(226 + 1044)))))) ;return v81-(v81%(928 -(193 + 21 + 713))) ;end end else local v82=(1 + 1)^(v32-1) ;return (((v31%(v82 + v82))>=v82) and (1 + 0)) or (877 -(282 + 595)) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + 2 );v18=v18 + (8 -6) ;return (v36 * (373 -(32 + 85))) + v35 ;end local function v23() local v37,v38,v39,v40=v1(v16,v18,v18 + 3 + 0 );v18=v18 + 1 + 3 ;return (v40 * ((31013381 -14235208) -(892 + 65))) + (v39 * (156337 -90801)) + (v38 * 256) + v37 ;end local function v24() local v41=v23();local v42=v23();local v43=1 -0 ;local v44=(v20(v42,351 -(87 + 263) ,200 -(67 + 113) ) * ((1 + 1)^(24 + 8))) + v41 ;local v45=v20(v42,51 -30 ,31 + 0 );local v46=((v20(v42,(99 -75) + 8 )==((2 + 1) -2)) and  -(19 -(10 + (29 -21)))) or (3 -2) ;if (v45==(952 -((2847 -2045) + 150))) then if (v44==(0 -0)) then return v46 * (0 -0) ;else local v91=0 + 0 ;while true do if (v91==0) then v45=1 -0 ;v43=438 -((1004 -(814 + 45)) + 293) ;break;end end end elseif (v45==2047) then return ((v44==(997 -(915 + 82))) and (v46 * ((1487 -(998 + 488))/(0 -0)))) or (v46 * NaN) ;end return v8(v46,v45-((1468 -872) + 427) ) * (v43 + (v44/(((42 + 732) -(201 + 571))^(68 -16)))) ;end local function v25(v47) local v48=0;local v49;local v50;while true do if (v48==(1 + 1)) then v50={};for v92=(2799 -(1789 + 124)) -(261 + 624) , #v49 do v50[v92]=v2(v1(v3(v49,v92,v92)));end v48=4 -1 ;end if (v48==(1081 -(1020 + (826 -(745 + 21))))) then v49=v3(v16,v18,(v18 + v47) -(1424 -(630 + 273 + 520)) );v18=v18 + v47 ;v48=(16 -10) -4 ;end if (v48==(14 -11)) then return v6(v50);end if (v48==(0 + 0)) then v49=nil;if  not v47 then v47=v23();if (v47==(0 -0)) then return "";end end v48=1748 -(760 + 987) ;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=(function() return 0;end)();local v52=(function() return;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();while true do if (v51== #"]") then local v85=(function() return 0 -0 ;end)();local v86=(function() return;end)();while true do if (v85==(1763 -(454 + 1309))) then v86=(function() return 0 + 0 ;end)();while true do if (2==v86) then v51=(function() return 2 -0 ;end)();break;end if (v86==0) then v56=(function() return v23();end)();v57=(function() return {};end)();v86=(function() return 1;end)();end if (v86~=(1 -0)) then else for v113= #"}",v56 do local v114=(function() return 0;end)();local v115=(function() return;end)();local v116=(function() return;end)();local v117=(function() return;end)();while true do if (v114~=(2 -1)) then else v117=(function() return nil;end)();while true do if (v115==(286 -(134 + 151))) then if (v116== #"/") then v117=(function() return v21()~=(1665 -(970 + 695)) ;end)();elseif (v116==(3 -1)) then v117=(function() return v24();end)();elseif (v116== #"91(") then v117=(function() return v25();end)();end v57[v113]=(function() return v117;end)();break;end if (v115==(1990 -(582 + 1408))) then local v124=(function() return 0;end)();while true do if (v124==(3 -2)) then v115=(function() return 1 -0 ;end)();break;end if (v124~=0) then else v116=(function() return v21();end)();v117=(function() return nil;end)();v124=(function() return 3 -2 ;end)();end end end end break;end if (v114~=(1824 -(1195 + 629))) then else v115=(function() return 0 -0 ;end)();v116=(function() return nil;end)();v114=(function() return 242 -(187 + 54) ;end)();end end end v55[ #"xnx"]=(function() return v21();end)();v86=(function() return 2;end)();end end break;end end end if ((782 -(162 + 618))~=v51) then else for v94= #"|",v23() do local v95=(function() return v21();end)();if (v20(v95, #" ", #"!")~=0) then else local v104=(function() return 0;end)();local v105=(function() return;end)();local v106=(function() return;end)();local v107=(function() return;end)();while true do if (0~=v104) then else local v109=(function() return 0;end)();local v110=(function() return;end)();while true do if (v109~=0) then else v110=(function() return 0;end)();while true do if (v110==0) then v105=(function() return v20(v95,2 + 0 , #"nil");end)();v106=(function() return v20(v95, #"xnxx",6);end)();v110=(function() return 1;end)();end if (v110==(1 + 0)) then v104=(function() return 1;end)();break;end end break;end end end if (v104==(3 -1)) then if (v20(v106, #":", #"[")== #"~") then v107[2]=(function() return v57[v107[2]];end)();end if (v20(v106,2,2 -0 )~= #"]") then else v107[ #"asd"]=(function() return v57[v107[ #"asd"]];end)();end v104=(function() return 1 + 2 ;end)();end if (v104==3) then if (v20(v106, #"19(", #"nil")~= #"}") then else v107[ #"0313"]=(function() return v57[v107[ #".com"]];end)();end v52[v94]=(function() return v107;end)();break;end if (v104==(1637 -(1373 + 263))) then local v112=(function() return 0;end)();while true do if (v112~=(1001 -(451 + 549))) then else v104=(function() return 1 + 1 ;end)();break;end if (v112~=0) then else v107=(function() return {v22(),v22(),nil,nil};end)();if (v105==(0 -0)) then local v121=(function() return 0;end)();local v122=(function() return;end)();while true do if (v121==0) then v122=(function() return 0;end)();while true do if (v122~=(1384 -(746 + 638))) then else v107[ #"19("]=(function() return v22();end)();v107[ #"0836"]=(function() return v22();end)();break;end end break;end end elseif (v105== #",") then v107[ #"nil"]=(function() return v23();end)();elseif (v105==(1 + 1)) then v107[ #"-19"]=(function() return v23() -(2^(23 -7)) ;end)();elseif (v105~= #"xnx") then else local v308=(function() return 0;end)();local v309=(function() return;end)();while true do if (v308==0) then v309=(function() return 0;end)();while true do if (0~=v309) then else v107[ #"asd"]=(function() return v23() -(2^(357 -(218 + 123))) ;end)();v107[ #"?id="]=(function() return v22();end)();break;end end break;end end end v112=(function() return 1;end)();end end end end end end for v96= #" ",v23() do v53[v96-#">" ]=(function() return v28();end)();end return v55;end if (v51==(1581 -(1535 + 46))) then local v87=(function() return 0;end)();local v88=(function() return;end)();while true do if (v87~=(0 + 0)) then else v88=(function() return 0 + 0 ;end)();while true do if (v88==2) then v51=(function() return  #"/";end)();break;end if (v88~=1) then else v54=(function() return {};end)();v55=(function() return {v52,v53,nil,v54};end)();v88=(function() return 2;end)();end if (v88==0) then v52=(function() return {};end)();v53=(function() return {};end)();v88=(function() return 1 + 0 ;end)();end end break;end end end end end local function v29(v58,v59,v60) local v61=v58[1 -0 ];local v62=v58[(3349 -1880) -(899 + 568) ];local v63=v58[2 + 1 ];return function(...) local v64=v61;local v65=v62;local v66=v63;local v67=v27;local v68=2 -1 ;local v69= -(604 -(234 + 34 + 161 + 174));local v70={};local v71={...};local v72=v12("#",...) -(573 -(426 + (444 -298))) ;local v73={};local v74={};for v83=0 + 0 ,v72 do if (v83>=v66) then v70[v83-v66 ]=v71[v83 + (1457 -(282 + 147 + 1027)) ];else v74[v83]=v71[v83 + (812 -(569 + (368 -126))) ];end end local v75=(v72-v66) + (2 -1) ;local v76;local v77;while true do local v84=0 + 0 ;while true do if (v84==1) then if (v77<=(1089 -(706 + (1562 -(485 + 759))))) then if (v77<=(1283 -((1668 -947) + 530))) then if ((v77<=(1286 -((2134 -(442 + 747)) + 326))) or (56==3616)) then if ((v77<=7) or (2421<622)) then if (v77<=(7 -4)) then if (v77<=(1 + 0)) then if (v77>(700 -((1406 -(832 + 303)) + 429))) then local v127=0 + 0 ;local v128;while true do if ((1009<=1130) and (v127==(1500 -(1408 + 92)))) then v128=v76[2];v74[v128](v74[v128 + ((2033 -(88 + 858)) -(461 + 625)) ]);break;end end elseif (v74[v76[2]]<v74[v76[1292 -(993 + 90 + 205) ]]) then v68=v68 + 1 + 0 ;else v68=v76[1174 -(346 + 72 + 32 + 721) ];end elseif ((2758<2980) and (v77==(1 + 1))) then v74[v76[1 + 1 ]]=v74[v76[1 + 2 ]] -v74[v76[4]] ;else local v130=v76[1 + 1 ];v69=(v130 + v75) -(530 -(406 + 123)) ;for v310=v130,v69 do local v311=v70[v310-v130 ];v74[v310]=v311;end end elseif (v77<=(1774 -(1749 + 20))) then if (v77>4) then v74[v76[1 + 1 ]][v74[v76[3]]]=v74[v76[4]];else do return v74[v76[2]]();end end elseif (v77>(1328 -(1249 + 73))) then local v133=v76[1 + 1 ];do return v13(v74,v133,v133 + v76[3] );end elseif (v74[v76[1147 -(466 + 679) ]]==v76[9 -5 ]) then v68=v68 + (2 -(790 -(766 + 23))) ;else v68=v76[3];end elseif ((v77<=((9434 -7523) -(106 + 1794))) or (86>=3626)) then if (v77<=9) then if (v77>8) then v74[v76[2]]=v74[v76[(1 -0) + 2 ]] * v76[2 + 2 ] ;elseif  not v74[v76[5 -3 ]] then v68=v68 + 1 ;else v68=v76[7 -4 ];end elseif (v77==(124 -(4 + 110))) then v59[v76[587 -(57 + 527) ]]=v74[v76[2]];else local v137=v76[1429 -(41 + 1386) ];v74[v137]=v74[v137](v74[v137 + (104 -(17 + 86)) ]);end elseif (v77<=(9 + 4)) then if (v77>(26 -14)) then if (v76[5 -3 ]<v74[v76[170 -(122 + 44) ]]) then v68=v76[7 -4 ];else v68=v68 + 1 ;end else v74[v76[2 -0 ]]=v60[v76[9 -6 ]];end elseif (v77>(12 + 2)) then v59[v76[1 + 2 ]]=v74[v76[2]];else v60[v76[(16 -11) -2 ]]=v74[v76[67 -(30 + 35) ]];end elseif (v77<=(16 + (1080 -(1036 + 37)))) then if (v77<=19) then if ((2395==2395) and (v77<=(1274 -(740 + 303 + 214)))) then if ((3780>2709) and (v77==(60 -44))) then v74[v76[2]]();else for v313=v76[2],v76[3] do v74[v313]=nil;end end elseif (v77==(1230 -(323 + 889))) then if v74[v76[5 -3 ]] then v68=v68 + 1 ;else v68=v76[583 -(361 + 219) ];end else v74[v76[(626 -304) -(53 + 267) ]]=v74[v76[1 + 2 ]] + v74[v76[417 -(15 + 398) ]] ;end elseif (v77<=(17 + 4)) then if ((v77>(1002 -(18 + 964))) or (237>=2273)) then local v146=0 -0 ;local v147;while true do if ((v146==(0 + 0)) or (2040<=703)) then v147=v76[2 + 0 ];v74[v147](v13(v74,v147 + (851 -(20 + (2310 -(641 + 839)))) ,v69));break;end end else v74[v76[2]]=v74[v76[3 + 0 ]] + v76[4] ;end elseif ((3279<=3967) and (v77>(148 -(116 + 10)))) then v74[v76[1 + 1 ]]=v74[v76[741 -(542 + 196) ]] * v74[v76[8 -4 ]] ;else v74[v76[1 + 1 ]][v76[3]]=v74[v76[3 + 1 ]];end elseif ((v77<=((923 -(910 + 3)) + 17)) or (1988==877)) then if (v77<=(65 -40)) then if (v77>((155 -94) -37)) then if (v74[v76[2]]<v74[v76[1555 -(1126 + 425) ]]) then v68=v76[408 -(118 + 287) ];else v68=v68 + (3 -(1686 -(1466 + 218))) ;end else v74[v76[1123 -(118 + 1003) ]][v74[v76[8 -5 ]]]=v74[v76[381 -(142 + 235) ]];end elseif (v77==(12 + 14)) then local v154=(1148 -(556 + 592)) -0 ;local v155;local v156;local v157;local v158;while true do if (v154==(0 + 0)) then v155=v76[2];v156,v157=v67(v74[v155](v74[v155 + (978 -(553 + 424)) ]));v154=1 -0 ;end if (v154==(1 + 0)) then v69=(v157 + v155) -(1 + 0) ;v158=0 + 0 ;v154=1 + 1 ;end if (v154==(2 + 0)) then for v433=v155,v69 do v158=v158 + 1 ;v74[v433]=v156[v158];end break;end end else do return v74[v76[(2 + 2) -2 ]]();end end elseif (v77<=((888 -(329 + 479)) -51)) then if (v77>(62 -34)) then v60[v76[3]]=v74[v76[1 + 1 ]];elseif (v76[9 -7 ]==v74[v76[757 -((1093 -(174 + 680)) + 514) ]]) then v68=v68 + 1 + 0 ;else v68=v76[1332 -(797 + 532) ];end elseif ((4291>1912) and (v77<=(22 + 8))) then local v161=v76[1 + 1 ];v74[v161]=v74[v161](v13(v74,v161 + (2 -1) ,v69));elseif (v77>(1233 -(373 + 829))) then v74[v76[733 -(476 + 255) ]]=v74[v76[1133 -((1267 -898) + 761) ]][v76[3 + 1 ]];else local v372=v76[2];local v373={v74[v372](v13(v74,v372 + (1 -0) ,v76[241 -(64 + 174) ]))};local v374=0 + 0 + 0 ;for v410=v372,v76[5 -(740 -(396 + 343)) ] do v374=v374 + (337 -(144 + 192)) ;v74[v410]=v373[v374];end end elseif (v77<=((24 + 240) -(42 + 174))) then if (v77<=(31 + 9)) then if (v77<=(30 + 6)) then if (v77<=34) then if (v77>(15 + (1495 -(29 + 1448)))) then v74[v76[1506 -(363 + 1141) ]]=v74[v76[3]] -v74[v76[1584 -((2572 -(135 + 1254)) + (1495 -1098)) ]] ;else local v164=v76[5 -3 ];local v165=v76[3 + 1 ];local v166=v164 + 2 + (0 -0) ;local v167={v74[v164](v74[v164 + 1 + 0 ],v74[v166])};for v315=2 -1 ,v165 do v74[v166 + v315 ]=v167[v315];end local v168=v167[1934 -(565 + 1368) ];if ((2003<2339) and v168) then v74[v166]=v168;v68=v76[11 -(6 + 2) ];else v68=v68 + (1662 -(1477 + 184)) ;end end elseif (v77>35) then if ((432==432) and (v74[v76[2]]~=v76[5 -1 ])) then v68=v68 + 1 ;else v68=v76[3 + 0 ];end else v74[v76[858 -(564 + 292) ]]=v76[3]^v74[v76[4]] ;end elseif (v77<=(65 -27)) then if ((v77==((1638 -(389 + 1138)) -74)) or (1145>=1253)) then local v170=v76[306 -(244 + 60) ];local v171={};for v318=1 + 0 , #v73 do local v319=476 -(41 + 435) ;local v320;while true do if ((3418>2118) and (v319==(1001 -(938 + 63)))) then v320=v73[v318];for v463=0, #v320 do local v464=v320[v463];local v465=v464[1 + 0 ];local v466=v464[2];if ((3066<=3890) and (v465==v74) and (v466>=v170)) then local v481=1125 -(936 + 189) ;while true do if (v481==(0 + 0)) then v171[v466]=v465[v466];v464[1614 -(1565 + 48) ]=v171;break;end end end end break;end end end else v68=v76[2 + 1 ];end elseif ((v77==(1177 -(782 + 356))) or (2998>=3281)) then if (v76[269 -((750 -(102 + 472)) + 91) ]<=v74[v76[4]]) then v68=v68 + (2 -1) ;else v68=v76[4 -1 ];end else v74[v76[1094 -(975 + 117) ]]=v74[v76[1878 -(157 + 1718) ]][v74[v76[4]]];end elseif (v77<=(36 + 8)) then if ((v77<=(148 -106)) or (4649<=2632)) then if (v77==(140 -99)) then local v175=1018 -(697 + 321) ;local v176;while true do if (v175==(0 -0)) then v176=v76[3 -1 ];v74[v176](v74[v176 + 1 ]);break;end end elseif (v76[4 -2 ]==v74[v76[2 + 2 ]]) then v68=v68 + (1 -0) ;else v68=v76[7 -4 ];end elseif (v77>(1270 -(322 + 905))) then if v74[v76[613 -(602 + 9) ]] then v68=v68 + (1190 -(449 + 740)) ;else v68=v76[875 -(826 + 46) ];end else local v177=(894 + 53) -(245 + 702) ;local v178;local v179;local v180;while true do if (v177==((2 + 1) -2)) then v180=0 + 0 ;for v437=v178,v76[1902 -(260 + 1638) ] do v180=v180 + (441 -(357 + 25 + 58)) ;v74[v437]=v179[v180];end break;end if (v177==(0 -0)) then v178=v76[2 + 0 ];v179={v74[v178](v74[v178 + (2 -1) ])};v177=1206 -(902 + 303) ;end end end elseif (v77<=46) then if ((v77>45) or (3860>4872)) then local v181=v76[2];v74[v181](v13(v74,v181 + (1 -0) ,v76[6 -(1548 -(320 + 1225)) ]));else v74[v76[1 + (1 -0) ]]=v74[v76[3]];end elseif (v77>((1063 + 674) -(1121 + 569))) then v74[v76[216 -(22 + 192) ]]=v76[686 -(483 + (1664 -(157 + 1307))) ];else local v186=v76[2];v74[v186]=v74[v186](v13(v74,v186 + (1860 -(821 + 1038)) ,v76[3]));end elseif (v77<=(1519 -(1404 + 59))) then if (v77<=(142 -(224 -134))) then if (v77<=(67 -(2 + 15))) then if (v77>(814 -(468 + 297))) then v74[v76[(1001 -437) -(334 + 228) ]]=v76[3]~=(0 -0) ;elseif ((v76[4 -2 ]<v74[v76[6 -2 ]]) or (3998==2298)) then v68=v76[1 + 2 ];else v68=v68 + (237 -(141 + 95)) ;end elseif ((v77>(51 + 0)) or (8>=2739)) then local v189=v76[7 -4 ];local v190=v74[v189];for v321=v189 + ((1 + 1) -1) ,v76[4] do v190=v190   .. v74[v321] ;end v74[v76[1 + 1 ]]=v190;else local v192=v76[2];local v193=v74[v76[8 -5 ]];v74[v192 + 1 ]=v193;v74[v192]=v193[v76[3 + 1 ]];end elseif (v77<=54) then if (v77==53) then v74[v76[2]]=v74[v76[2 + 1 ]] + v74[v76[5 -(2 -1) ]] ;else local v198=0 + 0 ;local v199;while true do if (v198==(163 -(92 + 71))) then v199=v76[2];do return v74[v199](v13(v74,v199 + 1 + 0 ,v76[4 -1 ]));end break;end end end elseif (v77==(820 -(574 + 191))) then v74[v76[1028 -(834 + 192) ]]=v76[3];elseif ((2590==2590) and (v76[2]<=v74[v76[4 + 0 ]])) then v68=v68 + 1 + 0 ;else v68=v76[7 -4 ];end elseif ((v77<=(31 + 29)) or (82>=1870)) then if ((2624<4557) and (v77<=(907 -(66 + 188 + 595)))) then if ((v77==(183 -(55 + 71))) or (3131>3542)) then v74[v76[2 -0 ]]= #v74[v76[1793 -(573 + 27 + 1190) ]];else do return v74[v76[5 -3 ]];end end elseif (v77>(5 + 54)) then v74[v76[2 -(0 -0) ]][v76[(1246 -(300 + 4)) -(191 + 523 + 225) ]]=v76[11 -7 ];else local v205=v76[2 -0 ];local v206=v74[v205];local v207=v76[1 + (5 -3) ];for v322=1,v207 do v206[v322]=v74[v205 + v322 ];end end elseif ((2577>=1578) and (v77<=(89 -27))) then if (v77==((1229 -(112 + 250)) -(118 + 688))) then local v208=v76[50 -(25 + 23) ];v74[v208]=v74[v208](v74[v208 + 1 + 0 ]);elseif ((4103<=4571) and (v74[v76[(753 + 1135) -(927 + 959) ]]<v74[v76[13 -9 ]])) then v68=v76[735 -(16 + 716) ];else v68=v68 + 1 ;end elseif ((v77<=63) or (1495==4787)) then v74[v76[3 -(2 -1) ]]=v76[3]~=((56 + 41) -(11 + 86)) ;elseif (v77==(155 -91)) then if  not v74[v76[(149 + 138) -(175 + 110) ]] then v68=v68 + (2 -1) ;else v68=v76[14 -11 ];end else local v384=v76[1799 -(503 + 1293) ];local v385=v74[v384];for v416=v384 + (2 -1) ,v76[3 + 1 ] do v385=v385   .. v74[v416] ;end v74[v76[1063 -(810 + 251) ]]=v385;end elseif (v77<=(52 + 17 + 29)) then if ((v77<=(25 + 56)) or (310>4434)) then if (v77<=(66 + 4 + 3)) then if (v77<=(602 -(43 + 490))) then if ((2168<=4360) and (v77<=(800 -(711 + 22)))) then if (v77>(255 -189)) then v74[v76[861 -(179 + 61 + 619) ]]=v74[v76[1 + 2 ]]/v76[5 -1 ] ;else v74[v76[2]]={};end elseif ((994==994) and (v77>(5 + 63))) then local v213=1744 -(1344 + 400) ;local v214;while true do if (v213==0) then v214=v74[v76[409 -(255 + 150) ]];if  not v214 then v68=v68 + 1 + 0 ;else v74[v76[2 + 0 ]]=v214;v68=v76[3];end break;end end else v74[v76[8 -6 ]]=v74[v76[3]] * v74[v76[12 -8 ]] ;end elseif ((1655>401) and (v77<=((3224 -(1001 + 413)) -(404 + 1335)))) then if (v77>(476 -(183 + 223))) then for v325=v76[2 -0 ],v76[2 + 1 ] do v74[v325]=nil;end else local v216=v76[1 + 1 ];v74[v216]=v74[v216](v13(v74,v216 + 1 ,v76[6 -3 ]));end elseif (v77>(409 -(10 + 327))) then local v218=v76[2 + 0 ];local v219=v74[v218];local v220=v76[341 -(118 + 220) ];for v327=1 + 0 ,v220 do v219[v327]=v74[v218 + v327 ];end else local v221=v76[451 -(108 + 341) ];do return v74[v221](v13(v74,v221 + 1 ,v76[2 + 1 ]));end end elseif (v77<=(325 -248)) then if ((3063<=3426) and (v77<=((2450 -(244 + 638)) -(711 + 782)))) then if ((1459>764) and (v77>(141 -67))) then do return;end else v74[v76[2]]=v59[v76[472 -(270 + 199) ]];end elseif (v77>(25 + 51)) then v68=v76[1822 -(580 + 1239) ];else v74[v76[5 -3 ]]=v74[v76[3 + 0 ]][v76[4]];end elseif (v77<=(3 + 76)) then if (v77>(34 + 44)) then local v227=v76[(697 -(627 + 66)) -2 ];v74[v227](v13(v74,v227 + 1 + 0 ,v76[(3486 -2316) -(645 + 522) ]));else local v228=0;local v229;local v230;local v231;local v232;while true do if ((v228==(1790 -(1010 + 780))) or (641>4334)) then v229=v76[2 + 0 ];v230,v231=v67(v74[v229](v13(v74,v229 + (4 -3) ,v76[8 -5 ])));v228=1837 -(1045 + (1393 -(512 + 90))) ;end if ((4 -2)==v228) then for v441=v229,v69 do v232=v232 + (1 -0) ;v74[v441]=v230[v232];end break;end if ((506 -(351 + 154))==v228) then v69=(v231 + v229) -(1575 -((3187 -(1665 + 241)) + (1010 -(373 + 344)))) ;v232=(120 + 146) -(8 + 20 + 238) ;v228=4 -2 ;end end end elseif ((3399>=2260) and (v77==(1639 -((3642 -2261) + 178)))) then local v233=v76[2 -0 ];do return v13(v74,v233,v69);end else do return v74[v76[2 + 0 ]];end end elseif (v77<=89) then if (v77<=((1168 -(35 + 1064)) + 16)) then if ((v77<=83) or (393>=4242)) then if ((989<4859) and (v77>82)) then if (v74[v76[1 + 1 + 0 ]]<=v74[v76[13 -9 ]]) then v68=v68 + 1 + 0 ;else v68=v76[473 -(381 + 89) ];end else v74[v76[2 + 0 ]]=v60[v76[3 + 0 ]];end elseif (v77>(143 -59)) then local v236=v76[1158 -((2297 -1223) + 82) ];local v237,v238=v67(v74[v236](v13(v74,v236 + (1 -0) ,v76[(8 + 1779) -(214 + 1570) ])));v69=(v238 + v236) -(1456 -(990 + 465)) ;local v239=0 + 0 ;for v330=v236,v69 do v239=v239 + 1 + 0 ;v74[v330]=v237[v239];end else v74[v76[(1238 -(298 + 938)) + 0 ]][v76[(1270 -(233 + 1026)) -8 ]]=v76[1730 -(1668 + 58) ];end elseif ((v77<=(713 -(512 + 114))) or (4795<949)) then if ((3842==3842) and (v77>86)) then local v242=0 -0 ;local v243;local v244;while true do if (v242==0) then v243=v76[2];v244=v74[v243];v242=1 -0 ;end if ((1747<=3601) and (v242==(3 -2))) then for v444=v243 + 1 + (1666 -(636 + 1030)) ,v76[1 + 0 + 2 + 0 ] do v7(v244,v74[v444]);end break;end end else v74[v76[2 + 0 ]]={};end elseif ((v77>(296 -208)) or (804>4359)) then local v246=v65[v76[3]];local v247;local v248={};v247=v10({},{__index=function(v333,v334) local v335=v248[v334];return v335[1995 -(109 + 1885) ][v335[1471 -(1269 + 200) ]];end,__newindex=function(v336,v337,v338) local v339=v248[v337];v339[1 -0 ][v339[817 -(98 + 717) ]]=v338;end});for v341=827 -(802 + 24) ,v76[6 -2 ] do local v342=0 + 0 ;local v343;while true do if ((4670>=3623) and (v342==((222 -(55 + 166)) -0))) then if ((2065<2544) and (v343[1 + 0 ]==112)) then v248[v341-1 ]={v74,v343[3]};else v248[v341-(1 + 0) ]={v59,v343[8 -5 ]};end v73[ #v73 + (3 -2) ]=v248;break;end if (v342==(0 + 0 + 0)) then v68=v68 + 1 + 0 ;v343=v64[v68];v342=1 + 0 ;end end end v74[v76[2 + 0 ]]=v29(v246,v247,v60);else v74[v76[1 + (3 -2) ]][v76[1436 -(797 + 636) ]]=v74[v76[(316 -(36 + 261)) -15 ]];end elseif ((1311<=3359) and (v77<=(1712 -(1427 + 192)))) then if (v77<=91) then if (v77==(32 + 58)) then local v252=v76[2];local v253={v74[v252](v74[v252 + 1 + 0 ])};local v254=0 + 0 ;for v344=v252,v76[330 -(192 + 134) ] do v254=v254 + ((2645 -(34 + 1334)) -(316 + 960)) ;v74[v344]=v253[v254];end else local v255=0 + 0 ;local v256;while true do if (v255==(0 + 0)) then v256=v76[2];do return v74[v256](v13(v74,v256 + 1 + 0 ,v69));end break;end end end elseif (v77>92) then local v257=v76[7 -5 ];local v258={v74[v257](v13(v74,v257 + 1 ,v69))};local v259=0;for v347=v257,v76[1810 -(1202 + 604) ] do v259=v259 + 1 ;v74[v347]=v258[v259];end else local v260=v76[9 -7 ];local v261={};for v350=1 -(0 + 0) , #v73 do local v351=v73[v350];for v388=0, #v351 do local v389=v351[v388];local v390=v389[1];local v391=v389[(1288 -(1035 + 248)) -3 ];if ((2717<=3156) and (v390==v74) and (v391>=v260)) then local v447=325 -(45 + 280) ;while true do if (v447==(0 + 0)) then v261[v391]=v390[v391];v389[1 + 0 ]=v261;break;end end end end end end elseif (v77<=(35 + (81 -(20 + 1)))) then if ((1081<4524) and (v77==(53 + 41))) then local v262=0 + 0 + 0 ;local v263;while true do if (v262==(0 -0)) then v263=v74[v76[1915 -((659 -(134 + 185)) + 1571) ]];if ((440>=71) and  not v263) then v68=v68 + 1 + 0 ;else v74[v76[1774 -(1733 + 39) ]]=v263;v68=v76[8 -5 ];end break;end end else v74[v76[2]]=v29(v65[v76[(2170 -(549 + 584)) -(125 + 909) ]],nil,v60);end elseif (v77<=(2044 -(1096 + 852))) then local v265=v76[1 + 1 ];v69=(v265 + v75) -(1 -0) ;for v352=v265,v69 do local v353=v70[v352-v265 ];v74[v352]=v353;end elseif (v77==(95 + 2)) then if ((4934>2607) and (v74[v76[2]]~=v74[v76[516 -(409 + 103) ]])) then v68=v68 + (237 -((731 -(314 + 371)) + 190)) ;else v68=v76[98 -(51 + 44) ];end else v74[v76[1 + 1 ]]=v74[v76[1320 -(1114 + 203) ]][v74[v76[730 -(228 + 498) ]]];end elseif (v77<=(25 + 89)) then if (v77<=(59 + 47)) then if ((v77<=(765 -((597 -423) + 489))) or (1400>3116)) then if (v77<=(260 -(1128 -(478 + 490)))) then if (v77==(53 + 46)) then local v266=v76[1907 -(830 + 1075) ];local v267={v74[v266](v13(v74,v266 + (1270 -(231 + 1038)) ,v76[3 + 0 ]))};local v268=1162 -(171 + 991) ;for v355=v266,v76[(51 -35) -12 ] do v268=v268 + (2 -1) ;v74[v355]=v267[v268];end else local v269=v76[4 -2 ];v74[v269]=v74[v269]();end elseif (v77>(81 + 20)) then v74[v76[(1385 -(1055 + 324)) -4 ]]=v76[8 -(1345 -(1093 + 247)) ]~=0 ;v68=v68 + (1 -0) ;else v74[v76[6 -4 ]]=v76[1251 -(111 + 1137) ]^v74[v76[162 -(91 + 60 + 7) ]] ;end elseif (v77<=(309 -(22 + 183))) then if (v77>((103 -77) + (261 -184))) then if (v76[525 -(423 + 100) ]<v74[v76[1 + 3 ]]) then v68=v68 + (2 -1) ;else v68=v76[2 + 1 ];end else local v273=v76[773 -(326 + 445) ];v74[v273]=v74[v273]();end elseif (v77==(458 -353)) then if ((525<1662) and (v74[v76[4 -2 ]]<v74[v76[9 -5 ]])) then v68=v68 + (712 -(530 + (514 -333))) ;else v68=v76[884 -(614 + 267) ];end else local v275=32 -(19 + 13) ;local v276;local v277;local v278;while true do if ((2==v275) or (876>2550)) then for v449=1,v76[6 -2 ] do v68=v68 + 1 ;local v450=v64[v68];if (v450[2 -1 ]==(319 -207)) then v278[v449-1 ]={v74,v450[6 -3 ]};else v278[v449-(1813 -(1293 + 519)) ]={v59,v450[7 -4 ]};end v73[ #v73 + (1 -0) ]=v278;end v74[v76[2]]=v29(v276,v277,v60);break;end if (v275==(0 -0)) then v276=v65[v76[6 -3 ]];v277=nil;v275=1 + (0 -0) ;end if (v275==1) then v278={};v277=v10({},{__index=function(v452,v453) local v454=v278[v453];return v454[1 + 0 ][v454[2]];end,__newindex=function(v455,v456,v457) local v458=0;local v459;while true do if ((219<=2456) and (v458==(0 -0))) then v459=v278[v456];v459[1 + 0 ][v459[1 + 1 ]]=v457;break;end end end});v275=2 + (688 -(364 + 324)) ;end end end elseif (v77<=(1206 -(709 + 387))) then if (v77<=(1966 -(673 + 1185))) then if (v77==107) then v74[v76[5 -3 ]]=v74[v76[3]] + v76[4] ;else local v280=v76[6 -4 ];v74[v280]=v74[v280](v13(v74,v280 + (1 -(0 -0)) ,v69));end elseif ((v77==(78 + 31)) or (4219==1150)) then if (v74[v76[2 + 0 ]]<=v74[v76[5 -1 ]]) then v68=v68 + 1 + 0 ;else v68=v76[3];end else v74[v76[3 -1 ]]= #v74[v76[5 -2 ]];end elseif (v77<=112) then if (v77>(1991 -(446 + 1434))) then v74[v76[1285 -(1040 + 243) ]]=v74[v76[8 -5 ]];else local v285=v76[1849 -(559 + 1288) ];do return v13(v74,v285,v69);end end elseif ((v77>(2044 -(609 + 1322))) or (2989<=222)) then if ((2258>1241) and (v76[456 -((30 -17) + 441) ]<v74[v76[(5 + 9) -10 ]])) then v68=v68 + (2 -1) ;else v68=v76[12 -9 ];end else v74[v76[9 -7 ]]=v74[v76[(1 -0) + 2 ]]/v76[14 -10 ] ;end elseif (v77<=(44 + 78)) then if ((41<4259) and (v77<=(52 + 66))) then if ((v77<=((1044 -700) -228)) or (1930<56)) then if ((3333==3333) and (v77>(1383 -(1249 + 19)))) then local v287=v76[2 + 0 ];local v288=v76[3 + 1 ];local v289=v287 + (3 -1) ;local v290={v74[v287](v74[v287 + 1 + 0 ],v74[v289])};for v358=1 + 0 ,v288 do v74[v289 + v358 ]=v290[v358];end local v291=v290[(3 -2) + 0 ];if (v291 or (2225==20)) then local v398=(1086 -(686 + 400)) + 0 ;while true do if (v398==0) then v74[v289]=v291;v68=v76[436 -(153 + 220 + 60) ];break;end end else v68=v68 + 1 ;end else v74[v76[2]]=v74[v76[8 -5 ]] * v76[4 + 0 ] ;end elseif (v77==(47 + 70)) then local v293=0 + 0 ;local v294;local v295;while true do if ((v293==((229 -(73 + 156)) + 0)) or (872>=3092)) then v294=v76[2 + 0 ];v295=v74[v76[4 -(1 + 0) ]];v293=1 + 0 ;end if (v293==(668 -(89 + 578))) then v74[v294 + 1 + 0 ]=v295;v74[v294]=v295[v76[8 -(815 -(721 + 90)) ]];break;end end else v74[v76[(12 + 1039) -(572 + 477) ]]=v59[v76[1 + 2 ]];end elseif (v77<=120) then if (v77>((233 -161) + 47)) then if (v74[v76[1 + 1 ]]==v74[v76[90 -(84 + 2) ]]) then v68=v68 + (1 -0) ;else v68=v76[3 + 0 ];end elseif ((4404>=3252) and (v74[v76[2]]~=v74[v76[846 -(497 + 345) ]])) then v68=v68 + 1 + 0 ;else v68=v76[1 + 2 ];end elseif (v77==121) then local v298=1333 -(605 + (1198 -(224 + 246))) ;local v299;while true do if (v298==0) then v299=v76[(2 -0) + 0 ];do return v74[v299](v13(v74,v299 + (1 -0) ,v69));end break;end end else local v300=v76[1 + 1 ];v74[v300](v13(v74,v300 + 1 ,v69));end elseif ((1107>796) and (v77<=126)) then if (v77<=(458 -334)) then if (v77>(111 + (21 -9))) then v74[v76[5 -3 ]]();else local v301=v76[2 + 0 ];local v302={v74[v301](v13(v74,v301 + 1 ,v69))};local v303=0 + 0 ;for v361=v301,v76[1406 -(832 + 104 + 466) ] do local v362=0 + 0 + 0 ;while true do if ((959==959) and (v362==(0 + 0))) then v303=v303 + (3 -2) ;v74[v361]=v302[v303];break;end end end end elseif ((v77>(61 + 64)) or (245>=2204)) then v74[v76[798 -(588 + 208) ]]=v29(v65[v76[8 -5 ]],nil,v60);elseif ((3162>=2069) and (v74[v76[1802 -(884 + 916) ]]==v74[v76[(6 + 2) -4 ]])) then v68=v68 + 1 ;else v68=v76[2 + 1 ];end elseif (v77<=((1552 -771) -(232 + 421))) then if (v77==(2016 -(1569 + 320))) then do return;end elseif ((v74[v76[1 + 1 ]]~=v76[12 -8 ]) or (306>3081)) then v68=v68 + 1 + 0 ;else v68=v76[9 -(519 -(203 + 310)) ];end elseif (v77<=129) then v74[v76[607 -((2309 -(1238 + 755)) + 289) ]]=v76[(1 + 6) -4 ]~=0 ;v68=v68 + 1 + 0 ;elseif (v77==130) then if (v74[v76[1455 -(666 + 787) ]]==v76[429 -((1894 -(709 + 825)) + 65) ]) then v68=v68 + 1 + 0 ;else v68=v76[257 -(79 + 175) ];end else local v403=v76[2 -(0 -0) ];local v404,v405=v67(v74[v403](v74[v403 + (1 -0) + 0 ]));v69=(v405 + v403) -(2 -(865 -(196 + 668))) ;local v406=0 -0 ;for v431=v403,v69 do local v432=899 -(503 + 396) ;while true do if ((v432==(181 -(92 + 89))) or (3513<2706)) then v406=v406 + (1 -0) ;v74[v431]=v404[v406];break;end end end end v68=v68 + 1 + 0 ;break;end if (v84==(0 + 0)) then v76=v64[v68];v77=v76[3 -2 ];v84=1 + 0 ;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
