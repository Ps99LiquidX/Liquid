--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v91=0;while true do if (v91==0) then v19=v0(v3(v30,1,1));return "";end end else local v92=v2(v0(v30,16));if v19 then local v114=v5(v92,v19);v19=nil;return v114;else return v92;end end end);local function v20(v31,v32,v33) if v33 then local v93=0 -0 ;local v94;while true do if (v93==0) then v94=(v31/((5 -3)^(v32-1)))%(2^(((v33-(1 -0)) -(v32-(2 -1))) + (620 -(555 + 64)))) ;return v94-(v94%1) ;end end else local v95=931 -((1734 -(282 + 595)) + 74) ;local v96;while true do if ((568 -(367 + 201))==v95) then v96=(1639 -(1523 + 114))^(v32-(928 -(214 + 713))) ;return (((v31%(v96 + v96))>=v96) and (1 + 0)) or (0 + 0 + 0) ;end end end end local function v21() local v34=0 -0 ;local v35;while true do if (v34==1) then return v35;end if (v34==(1065 -(68 + 997))) then v35=v1(v16,v18,v18);v18=v18 + (1271 -(226 + 1044)) ;v34=4 -3 ;end end end local function v22() local v36,v37=v1(v16,v18,v18 + 2 );v18=v18 + (119 -(32 + 85)) ;return (v37 * (251 + 5)) + v36 ;end local function v23() local v38=0 + 0 ;local v39;local v40;local v41;local v42;while true do if (v38==(958 -(892 + 65))) then return (v42 * (12302277 + 4474939)) + (v41 * ((383832 -227495) -(66780 + 24021))) + (v40 * (472 -216)) + v39 ;end if (v38==(0 -0)) then v39,v40,v41,v42=v1(v16,v18,v18 + 3 );v18=v18 + (354 -(87 + 263)) ;v38=181 -(67 + 113) ;end end end local function v24() local v43=0 -(0 -0) ;local v44;local v45;local v46;local v47;local v48;local v49;while true do if (v43==1) then v46=1;v47=(v20(v45,1,972 -(802 + 150) ) * (((3 + 2) -3)^(57 -25))) + v44 ;v43=2 + 0 ;end if (v43==(999 -(915 + (299 -217)))) then v48=v20(v45,59 -38 ,19 + 12 );v49=((v20(v45,41 -9 )==(1188 -(1069 + 118))) and  -(2 -1)) or ((1 + 0) -0) ;v43=1 + 2 ;end if (v43==(0 -0)) then v44=v23();v45=v23();v43=1 + 0 ;end if (v43==(794 -(368 + (1195 -(201 + 571))))) then if (v48==(0 -0)) then if (v47==((63 -45) -((869 -(814 + 45)) + (19 -11)))) then return v49 * 0 ;else local v122=0 -0 ;while true do if (v122==0) then v48=443 -(416 + 26) ;v46=0 -0 ;break;end end end elseif (v48==2047) then return ((v47==(0 + 0)) and (v49 * ((1 -0)/((24 + 414) -(145 + (1431 -(116 + 1022))))))) or (v49 * NaN) ;end return v8(v49,v48-(1453 -(44 + 386)) ) * (v46 + (v47/((1488 -(998 + 488))^(17 + 35)))) ;end end end local function v25(v50) local v51;if  not v50 then v50=v23();if (v50==(0 + 0)) then return "";end end v51=v3(v16,v18,(v18 + v50) -(886 -(261 + 624)) );v18=v18 + v50 ;local v52={};for v68=1, #v51 do v52[v68]=v2(v1(v3(v51,v68,v68)));end return v6(v52);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v53=(function() return function(v97,v98,v99,v100,v101,v102,v103,v104,v105) local v106=(function() return 1941 -(550 + 1391) ;end)();local v97=(function() return;end)();local v98=(function() return;end)();while true do if (v106==0) then local v120=(function() return 0;end)();while true do if (v120==(1 -0)) then v106=(function() return 1;end)();break;end if (v120~=0) then else v97=(function() return 0 -0 ;end)();v98=(function() return nil;end)();v120=(function() return 1785 -(599 + 1185) ;end)();end end end if (v106~=(1 + 0)) then else while true do if (v97==0) then v98=(function() return v99();end)();if (v100(v98, #"}", #"~")~=(0 + 0)) then else local v126=(function() return 574 -(507 + 67) ;end)();local v127=(function() return;end)();local v128=(function() return;end)();local v129=(function() return;end)();while true do if (v126==(1750 -(1013 + 736))) then local v130=(function() return 0 + 0 ;end)();local v131=(function() return;end)();while true do if (v130==(0 -0)) then v131=(function() return 0;end)();while true do if (v131==1) then v126=(function() return 7 -5 ;end)();break;end if (v131~=0) then else v129=(function() return {v101(),v101(),nil,nil};end)();if (v127==0) then local v446=(function() return 867 -(550 + 317) ;end)();local v447=(function() return;end)();while true do if (0==v446) then v447=(function() return 0 -0 ;end)();while true do if (v447~=0) then else v129[ #"asd"]=(function() return v101();end)();v129[ #"asd1"]=(function() return v101();end)();break;end end break;end end elseif (v127== #",") then v129[ #"91("]=(function() return v102();end)();elseif (v127==(2 -0)) then v129[ #"19("]=(function() return v102() -(2^16) ;end)();elseif (v127~= #"xxx") then else local v471=(function() return 0 -0 ;end)();local v472=(function() return;end)();while true do if (v471==0) then v472=(function() return 0;end)();while true do if (v472~=0) then else v129[ #"xnx"]=(function() return v102() -(2^16) ;end)();v129[ #"0313"]=(function() return v101();end)();break;end end break;end end end v131=(function() return 286 -(134 + 151) ;end)();end end break;end end end if (v126==3) then if (v100(v128, #"19(", #"xxx")== #">") then v129[ #"http"]=(function() return v103[v129[ #"0836"]];end)();end v104[v105]=(function() return v129;end)();break;end if (v126~=(1667 -(970 + 695))) then else if (v100(v128, #"}", #"{")== #"}") then v129[3 -1 ]=(function() return v103[v129[1992 -(582 + 1408) ]];end)();end if (v100(v128,2,6 -4 )== #",") then v129[ #"xnx"]=(function() return v103[v129[ #"19("]];end)();end v126=(function() return 3;end)();end if ((0 -0)==v126) then local v133=(function() return 0;end)();while true do if (v133==0) then v127=(function() return v100(v98,7 -5 , #"gha");end)();v128=(function() return v100(v98, #".dev",1830 -(1195 + 629) );end)();v133=(function() return 1 -0 ;end)();end if (v133~=1) then else v126=(function() return 242 -(187 + 54) ;end)();break;end end end end end break;end end return v97,v98,v99,v100,v101,v102,v103,v104,v105;end end end;end)();local v54=(function() return function(v107,v108,v109) local v110=(function() return 0;end)();while true do if ((780 -(162 + 618))==v110) then local v121=(function() return 0;end)();while true do if ((0 + 0)~=v121) then else v107[v108-#"," ]=(function() return v109();end)();return v107,v108,v109;end end end end end;end)();local v55=(function() return {};end)();local v56=(function() return {};end)();local v57=(function() return {};end)();local v58=(function() return {v55,v56,nil,v57};end)();local v59=(function() return v23();end)();local v60=(function() return {};end)();for v70= #":",v59 do local v71=(function() return 0 -0 ;end)();local v72=(function() return;end)();local v73=(function() return;end)();local v74=(function() return;end)();while true do if (v71~=1) then else v74=(function() return nil;end)();while true do if (v72~=(0 -0)) then else local v123=(function() return 0;end)();while true do if (v123==1) then v72=(function() return 1;end)();break;end if (v123==0) then v73=(function() return v21();end)();v74=(function() return nil;end)();v123=(function() return 1;end)();end end end if (v72==1) then if (v73== #" ") then v74=(function() return v21()~=(0 + 0) ;end)();elseif (v73==(1638 -(1373 + 263))) then v74=(function() return v24();end)();elseif (v73== #"-19") then v74=(function() return v25();end)();end v60[v70]=(function() return v74;end)();break;end end break;end if (v71==(1000 -(451 + 549))) then local v115=(function() return 0 + 0 ;end)();while true do if (v115~=0) then else v72=(function() return 0 -0 ;end)();v73=(function() return nil;end)();v115=(function() return 1 -0 ;end)();end if (v115~=(1385 -(746 + 638))) then else v71=(function() return 1 + 0 ;end)();break;end end end end end v58[ #"xxx"]=(function() return v21();end)();for v75= #"\\",v23() do FlatIdent_8BC55,Descriptor,v21,v20,v22,v23,v60,v55,v75=(function() return v53(FlatIdent_8BC55,Descriptor,v21,v20,v22,v23,v60,v55,v75);end)();end for v76= #"|",v23() do v56,v76,v28=(function() return v54(v56,v76,v28);end)();end return v58;end local function v29(v62,v63,v64) local v65=v62[1 -(0 -0) ];local v66=v62[343 -(145 + 73 + 123) ];local v67=v62[3];return function(...) local v77=v65;local v78=v66;local v79=v67;local v80=v27;local v81=(880 + 702) -(1535 + 46) ;local v82= -(1 + 0);local v83={};local v84={...};local v85=v12("#",...) -(561 -(306 + 254)) ;local v86={};local v87={};for v111=0 + 0 ,v85 do if (v111>=v79) then v83[v111-v79 ]=v84[v111 + (1 -0) ];else v87[v111]=v84[v111 + (1468 -(899 + 568)) ];end end local v88=(v85-v79) + 1 ;local v89;local v90;while true do v89=v77[v81];v90=v89[1 + 0 + 0 ];if (v90<=(142 -83)) then if (v90<=29) then if ((v90<=(617 -(268 + 335))) or (2136>=2946)) then if ((2165<=2521) and (v90<=6)) then if ((2861>661) and (v90<=(292 -(60 + 230)))) then if (v90<=((481 + 91) -(426 + 146))) then local v134=v87[v89[1 + 3 ]];if  not v134 then v81=v81 + 1 ;else local v142=1456 -(282 + 1174) ;while true do if (v142==(811 -(569 + 242))) then v87[v89[5 -3 ]]=v134;v81=v89[3];break;end end end elseif (v90>(1 + 0)) then v63[v89[(1005 + 22) -(706 + 318) ]]=v87[v89[1253 -(721 + 530) ]];else v87[v89[1273 -(945 + 326) ]][v87[v89[7 -(437 -(153 + 280)) ]]]=v87[v89[11 -7 ]];end elseif ((4525>4519) and (v90<=(4 + 0 + 0))) then if (v90>(703 -(108 + 163 + 429))) then v87[v89[2 + 0 ]][v89[3]]=v89[(788 + 716) -(1408 + 92) ];else v87[v89[1088 -(461 + 568 + 57) ]]=v87[v89[1291 -(993 + 295) ]] * v89[1 + 3 ] ;end elseif (v90==5) then if (v87[v89[2]]<v87[v89[4]]) then v81=v81 + 1 ;else v81=v89[1174 -(418 + 753) ];end elseif (v87[v89[1 + 1 ]]~=v87[v89[1 + 0 + 3 ]]) then v81=v81 + 1 + 0 ;else v81=v89[3];end elseif ((3178>972) and (v90<=(3 + 7))) then if (v90<=8) then if (v90>(536 -(406 + (187 -64)))) then v87[v89[1771 -(1081 + 668 + 20) ]]=v87[v89[1 + 2 ]][v89[1326 -(1249 + 73) ]];else v87[v89[1 + 1 ]]=v89[1148 -(466 + (1346 -(89 + 578))) ]~=(0 -0) ;end elseif (v90==(25 -16)) then if ((4766==4766) and (v87[v89[1902 -(76 + 30 + 1794) ]]<=v87[v89[2 + 2 ]])) then v81=v81 + 1 + 0 ;else v81=v89[8 -5 ];end else local v153=v89[5 -3 ];v87[v153](v13(v87,v153 + (115 -(4 + 110)) ,v89[587 -(57 + 527) ]));end elseif (v90<=12) then if (v90==(1438 -(41 + 1386))) then if (v87[v89[105 -(17 + 86) ]]<v87[v89[3 + 1 ]]) then v81=v81 + (1 -(0 -0)) ;else v81=v89[3];end else local v154=v89[5 -3 ];v87[v154](v87[v154 + (167 -((1171 -(572 + 477)) + 44)) ]);end elseif ((v90==(2 + 11)) or (2745>3128)) then v87[v89[2 -0 ]]=v87[v89[9 -6 ]] + v87[v89[4 + 0 ]] ;else local v156=v89[1 + 1 + 0 ];local v157,v158=v80(v87[v156](v87[v156 + (1 -0) ]));v82=(v158 + v156) -(66 -(30 + 35)) ;local v159=0;for v313=v156,v82 do local v314=0 + 0 ;while true do if ((v314==(1257 -(1043 + 214))) or (1144>=4606)) then v159=v159 + (3 -2) ;v87[v313]=v157[v159];break;end end end end elseif ((3338>=277) and (v90<=21)) then if (v90<=((147 + 1082) -(323 + (975 -(84 + 2))))) then if ((2610>2560) and (v90<=(40 -25))) then v87[v89[582 -(361 + 219) ]][v87[v89[323 -(53 + 267) ]]]=v87[v89[1 + 3 ]];elseif (v90>(429 -(15 + (655 -257)))) then local v160=v89[2];v87[v160](v13(v87,v160 + (983 -(18 + 964)) ,v82));else v87[v89[2]]=v87[v89[(8 + 3) -8 ]] + v89[3 + 1 ] ;end elseif (v90<=(12 + 7)) then if (v90>(868 -(20 + 830))) then do return;end else v87[v89[2]][v89[3 + 0 ]]=v87[v89[130 -(116 + 10) ]];end elseif (v90==20) then if (v87[v89[1 + 1 ]]~=v89[742 -(542 + 196) ]) then v81=v81 + 1 ;else v81=v89[6 -3 ];end else do return v87[v89[1 + 1 ]];end end elseif ((v90<=(13 + 12)) or (1194>3083)) then if ((916>=747) and (v90<=(9 + 14))) then if (v90>(57 -35)) then v87[v89[4 -2 ]]=v63[v89[1554 -(1126 + 425) ]];else for v315=v89[407 -(118 + 287) ],v89[11 -8 ] do v87[v315]=nil;end end elseif (v90>(1145 -(118 + 1003))) then v87[v89[5 -3 ]]=v89[380 -(142 + 235) ];elseif ((v87[v89[9 -7 ]]==v89[1 + 3 ]) or (2444>2954)) then v81=v81 + (978 -(553 + 424)) ;else v81=v89[3];end elseif (v90<=27) then if ((2892<3514) and (v90>(48 -22))) then local v168=0 + 0 ;local v169;while true do if ((533==533) and (v168==(0 + 0))) then v169=v89[2 + 0 ];v87[v169]=v87[v169]();break;end end else local v170=0;local v171;while true do if (v170==(0 + 0)) then v171=v89[2];do return v13(v87,v171,v82);end break;end end end elseif (v90>28) then v63[v89[3]]=v87[v89[2 + 0 ]];else local v174=v89[4 -2 ];v87[v174]=v87[v174]();end elseif (v90<=44) then if (v90<=((941 -(497 + 345)) -63)) then if (v90<=(71 -39)) then if (v90<=(9 + 21)) then do return v87[v89[9 -7 ]]();end elseif (v90>(784 -(239 + 514))) then local v176=0 + 0 ;while true do if ((595<=3413) and (v176==(1329 -(797 + 532)))) then v87[v89[2 + 0 ]]=v89[2 + 1 + 0 ]~=((0 + 0) -0) ;v81=v81 + ((2536 -(605 + 728)) -(373 + 829)) ;break;end end else v87[v89[733 -(476 + 255) ]]=v89[1133 -(369 + 761) ]^v87[v89[3 + 1 ]] ;end elseif (v90<=34) then if ((3078>=2591) and (v90==(59 -26))) then local v178=0;local v179;local v180;local v181;while true do if (v178==(0 -0)) then v179=v89[240 -(64 + 174) ];v180=v87[v179];v178=1 + 0 ;end if (v178==(1 -0)) then v181=v89[339 -(144 + 192) ];for v426=217 -(42 + 174) ,v181 do v180[v426]=v87[v179 + v426 ];end break;end end else local v182=0 + 0 ;local v183;local v184;while true do if ((3199<4030) and (v182==(0 + 0))) then v183=v89[1 + 1 ];v184={};v182=1;end if (v182==(1505 -(363 + 815 + 326))) then for v429=1581 -(1183 + 397) , #v86 do local v430=v86[v429];for v448=0 -0 , #v430 do local v449=0 -0 ;local v450;local v451;local v452;while true do if (v449==(1 + 0)) then v452=v450[2 + 0 ];if ((v451==v87) and (v452>=v183)) then local v467=1975 -(1913 + 62) ;while true do if ((777<2078) and (v467==(0 + 0))) then v184[v452]=v451[v452];v450[2 -1 ]=v184;break;end end end break;end if ((1696<=2282) and (v449==0)) then v450=v430[v448];v451=v450[(89 + 1845) -(565 + 1368) ];v449=1;end end end end break;end end end elseif ((v90==(131 -96)) or (1761>=2462)) then if (v89[2]==v87[v89[(6155 -4490) -(1477 + 184) ]]) then v81=v81 + (1 -0) ;else v81=v89[3 + 0 ];end else do return v87[v89[858 -(564 + 292) ]]();end end elseif (v90<=((63 + 6) -29)) then if (v90<=(114 -76)) then if ((4551>2328) and (v90==(341 -(244 + 60)))) then v87[v89[2 + 0 ]]=v87[v89[479 -(41 + 435) ]];else local v187=1001 -(938 + 63) ;local v188;local v189;while true do if (v187==(0 + 0)) then v188=v89[1128 -(936 + 189) ];v189=v87[v188];v187=1 + (0 -0) ;end if (v187==1) then for v431=v188 + (1614 -(1565 + 48)) ,v89[3 + 1 ] do v189=v189   .. v87[v431] ;end v87[v89[1140 -(591 + 191 + 356) ]]=v189;break;end end end elseif ((3825>=467) and (v90==39)) then local v190=v89[269 -(176 + 91) ];local v191={v87[v190](v13(v87,v190 + (1 -0) ,v82))};local v192=0;for v317=v190,v89[4] do local v318=(1581 -(457 + 32)) -(975 + 117) ;while true do if ((v318==(1875 -(157 + 1718))) or (2890==557)) then v192=v192 + 1 ;v87[v317]=v191[v192];break;end end end else v87[v89[2 + 0 ]]=v87[v89[10 -7 ]];end elseif ((v90<=(143 -101)) or (4770==2904)) then if (v90==(1059 -(697 + 321))) then if ((v87[v89[5 -3 ]]<v87[v89[(4 + 4) -4 ]]) or (3903==4536)) then v81=v89[(1408 -(832 + 570)) -3 ];else v81=v81 + 1 + 0 ;end else v87[v89[3 -1 ]]=v87[v89[7 -4 ]]/v89[1231 -(322 + 905) ] ;end elseif ((4093<=4845) and (v90==(654 -(602 + 9)))) then if (v89[(1123 + 68) -(449 + 740) ]<=v87[v89[876 -(826 + 12 + 34) ]]) then v81=v81 + (948 -(245 + (2483 -1781))) ;else v81=v89[9 -6 ];end else local v196=v89[1 + 1 ];v87[v196]=v87[v196](v87[v196 + (797 -(588 + 208)) + (0 -0) ]);end elseif (v90<=(1949 -(260 + 1638))) then if (v90<=(487 -((2182 -(884 + 916)) + 58))) then if ((1569<=3647) and (v90<=45)) then if (v89[6 -4 ]<v87[v89[4 + 0 ]]) then v81=v81 + (1 -0) ;else v81=v89[8 -5 ];end elseif (v90>46) then local v199=0;local v200;while true do if ((v199==(1205 -(902 + 303))) or (4046>=4927)) then v200=v89[3 -(1 -0) ];v87[v200]=v87[v200](v87[v200 + ((2 + 0) -1) ]);break;end end else do return;end end elseif (v90<=(5 + 44)) then if (v90>(1738 -(1121 + (1222 -(232 + 421))))) then v87[v89[2]]=v29(v78[v89[3]],nil,v64);else v64[v89[217 -(22 + 192) ]]=v87[v89[685 -(483 + 200) ]];end elseif (v90==(1513 -(1404 + 59))) then if ((4623>=2787) and (v87[v89[5 -(1892 -(1569 + 320)) ]]~=v87[v89[4]])) then v81=v81 + (1 -0) ;else v81=v89[768 -(468 + 297) ];end else local v204=562 -(334 + 228) ;local v205;while true do if (v204==(0 -0)) then v205=v89[2];do return v87[v205](v13(v87,v205 + (2 -1) ,v89[5 -2 ]));end break;end end end elseif ((2234>=1230) and (v90<=(16 + 39))) then if (v90<=53) then if ((v90>(288 -(141 + 95))) or (343==1786)) then local v206=v89[2];v87[v206]=v87[v206](v13(v87,v206 + 1 ,v89[3 + 0 ]));else local v208=v89[4 -2 ];local v209=v87[v208];for v319=v208 + ((1 + 1) -(1 + 0)) ,v89[3] do v7(v209,v87[v319]);end end elseif ((2570>2409) and (v90>((43 -30) + 41))) then local v210=0 -0 ;local v211;while true do if (v210==0) then v211=v89[(607 -(316 + 289)) + 0 ];v87[v211](v13(v87,v211 + 1 + 0 ,v89[3]));break;end end else local v212=(0 -0) -0 ;local v213;local v214;while true do if ((v212==(1 + 0)) or (2609>=3234)) then for v434=164 -(92 + 71) , #v86 do local v435=0 + 0 + 0 ;local v436;while true do if (v435==(0 -0)) then v436=v86[v434];for v462=765 -(574 + 191) , #v436 do local v463=v436[v462];local v464=v463[1];local v465=v463[2];if (((v464==v87) and (v465>=v213)) or (3033>=4031)) then local v468=0;while true do if (v468==(0 + 0)) then v214[v465]=v464[v465];v463[2 -1 ]=v214;break;end end end end break;end end end break;end if (v212==(0 + (1453 -(666 + 787)))) then v213=v89[2];v214={};v212=1;end end end elseif (v90<=(906 -(254 + 595))) then if (v90>56) then for v320=v89[2],v89[3] do v87[v320]=nil;end elseif (v89[2]==v87[v89[4]]) then v81=v81 + (127 -(55 + 71)) ;else v81=v89[3 -0 ];end elseif (v90>(1848 -(573 + 1217))) then local v215=v89[5 -3 ];local v216=v89[4];local v217=v215 + 1 + 1 ;local v218={v87[v215](v87[v215 + (1 -0) ],v87[v217])};for v322=1,v216 do v87[v217 + v322 ]=v218[v322];end local v219=v218[1];if v219 then v87[v217]=v219;v81=v89[942 -(714 + 225) ];else v81=v81 + (426 -(360 + 65)) ;end else v87[v89[5 -3 ]]={};end elseif ((v90<=(84 + 5)) or (1401==4668)) then if (v90<=(102 -28)) then if (v90<=(8 + 58)) then if (v90<=(89 -27)) then if (v90<=(866 -(118 + 688))) then local v137=48 -(25 + 23) ;while true do if (v137==(0 + (254 -(79 + 175)))) then v87[v89[2]]=v89[1889 -(927 + 959) ]~=(0 -(0 -0)) ;v81=v81 + (733 -(16 + 716)) ;break;end end elseif (v90>(117 -56)) then v87[v89[99 -(11 + 86) ]]=v87[v89[6 -3 ]]/v89[(226 + 63) -(175 + 110) ] ;else v87[v89[2]]=v87[v89[6 -3 ]] -v87[v89[19 -15 ]] ;end elseif (v90<=((5701 -3841) -(503 + 1293))) then if (v90==(175 -112)) then if ((2776>=1321) and (v89[2]<v87[v89[(5 -2) + (900 -(503 + 396)) ]])) then v81=v89[184 -(92 + 89) ];else v81=v81 + ((2059 -997) -(810 + 251)) ;end else v87[v89[2 + 0 + 0 ]]=v87[v89[2 + 1 ]][v89[2 + (7 -5) ]];end elseif (v90>(9 + 56)) then v81=v89[3 + 0 ];else local v226=v87[v89[537 -((97 -54) + 490) ]];if ( not v226 or (487>2303)) then v81=v81 + (734 -(711 + 20 + 2)) ;else local v378=0;while true do if (((0 -(0 + 0))==v378) or (4503==3462)) then v87[v89[(2622 -1761) -(240 + 619) ]]=v226;v81=v89[1 + 2 ];break;end end end end elseif (v90<=70) then if (v90<=(107 -39)) then if (v90>67) then local v227=v78[v89[3]];local v228;local v229={};v228=v10({},{__index=function(v326,v327) local v328=0;local v329;while true do if ((553<=1543) and (v328==(0 + 0))) then v329=v229[v327];return v329[1745 -(1344 + 400) ][v329[407 -(255 + 150) ]];end end end,__newindex=function(v330,v331,v332) local v333=v229[v331];v333[1 + 0 ][v333[2]]=v332;end});for v335=1,v89[3 + 1 ] do v81=v81 + ((1 + 3) -3) ;local v336=v77[v81];if (v336[1]==(119 -82)) then v229[v335-((2653 -913) -((1648 -(485 + 759)) + 1335)) ]={v87,v336[3]};else v229[v335-(1 + 0) ]={v63,v336[2 + 1 ]};end v86[ #v86 + (338 -(10 + 327)) ]=v229;end v87[v89[2 + 0 ]]=v29(v227,v228,v64);else local v231=338 -(118 + 220) ;local v232;while true do if ((2015==2015) and (v231==(0 + 0))) then v232=v89[451 -(108 + 341) ];do return v87[v232](v13(v87,v232 + (1190 -(442 + 747)) + 0 ,v89[(1147 -(832 + 303)) -9 ]));end break;end end end elseif ((v90==69) or (4241<=2332)) then v87[v89[2]]=v89[1496 -(711 + 782) ];elseif (v87[v89[3 -1 ]]~=v89[473 -(270 + 199) ]) then v81=v81 + 1 + 0 ;else v81=v89[1822 -(580 + 1239) ];end elseif (v90<=72) then if ((v90>(210 -139)) or (2364<1157)) then local v235=v89[2 + 0 ];local v236=v87[v89[3]];v87[v235 + 1 ]=v236;v87[v235]=v236[v89[(947 -(88 + 858)) + 3 ]];else local v240=0 + 0 ;local v241;local v242;while true do if ((v240==(2 -1)) or (1167>1278)) then for v438=v241 + 1 ,v89[3 + 1 + 0 ] do v242=v242   .. v87[v438] ;end v87[v89[1169 -(645 + 522) ]]=v242;break;end if ((v240==(1790 -(1010 + 780))) or (1145<=1082)) then v241=v89[3 + 0 ];v242=v87[v241];v240=4 -3 ;end end end elseif (v90==(213 -140)) then v81=v89[(1522 + 317) -(1045 + 791) ];elseif (v89[4 -2 ]<v87[v89[4]]) then v81=v89[3];else v81=v81 + (1 -0) ;end elseif (v90<=((25 + 561) -(351 + 154))) then if (v90<=(1651 -(1281 + 293))) then if (v90<=(341 -(28 + 238))) then local v138=v89[4 -2 ];do return v13(v87,v138,v138 + v89[3] );end elseif (v90>76) then if (v87[v89[2]]<=v87[v89[4]]) then v81=v81 + (1560 -(1381 + 178)) ;else v81=v89[3];end else v87[v89[2]]=v87[v89[3 + 0 ]] + v89[4 + 0 ] ;end elseif (v90<=(34 + 45)) then if ((v90==(268 -(979 -(766 + 23)))) or (3105==4881)) then if (v87[v89[2 + 0 ]] or (1887>4878)) then v81=v81 + 1 ;else v81=v89[473 -(381 + 89) ];end else v87[v89[2 + 0 ]]=v87[v89[3]] * v89[3 + 1 ] ;end elseif (v90>(137 -57)) then local v246=1156 -((5302 -4228) + 82) ;local v247;while true do if ((v246==((0 -0) -0)) or (4087>4116)) then v247=v89[1786 -((563 -349) + 1570) ];v87[v247](v13(v87,v247 + 1 ,v82));break;end end elseif ((1106<=1266) and  not v87[v89[1457 -(990 + (1578 -1113)) ]]) then v81=v81 + 1 + 0 ;else v81=v89[3];end elseif ((3155<4650) and (v90<=(37 + 48))) then if (v90<=(81 + 2)) then if ((3774>=1839) and (v90==(322 -240))) then local v248=1073 -(1036 + 37) ;local v249;while true do if (v248==(1726 -(1668 + 58))) then v249=v89[628 -(512 + 114) ];v87[v249]=v87[v249](v13(v87,v249 + (2 -1) ,v82));break;end end else local v250=v89[3 -1 ];v87[v250]=v87[v250](v13(v87,v250 + (3 -2) ,v89[2 + 1 ]));end elseif (v90>(16 + 68)) then if ((2811==2811) and (v89[2 + 0 ]<v87[v89[13 -(7 + 2) ]])) then v81=v81 + 1 ;else v81=v89[1997 -(109 + 1885) ];end else do return v87[v89[(2864 -1393) -(1269 + 200) ]];end end elseif ((2146>1122) and (v90<=(166 -(63 + 16)))) then if (v90==(901 -(98 + 717))) then local v252=v89[2];do return v13(v87,v252,v82);end else local v253=v89[828 -((2282 -(641 + 839)) + 24) ];local v254={v87[v253](v87[v253 + (1 -0) ])};local v255=0 -0 ;for v338=v253,v89[1 + 3 ] do v255=v255 + (914 -(910 + 3)) ;v87[v338]=v254[v255];end end elseif ((v90==(68 + 20)) or (56==3616)) then v87[v89[1 + 1 ]]=v63[v89[(2 -1) + 2 ]];elseif v87[v89[2]] then v81=v81 + ((1686 -(1466 + 218)) -1) ;else v81=v89[9 -6 ];end elseif (v90<=104) then if (v90<=(35 + 61)) then if ((v90<=(38 + 54)) or (2421<622)) then if ((1009<=1130) and (v90<=(42 + 48))) then if  not v87[v89[2 + 0 ]] then v81=v81 + 1 ;else v81=v89[3 + 0 ];end elseif (v90>91) then v87[v89[2]]=v89[2 + 1 ]^v87[v89[4]] ;else v64[v89[1436 -(797 + 636) ]]=v87[v89[9 -7 ]];end elseif (v90<=94) then if ((2758<2980) and (v90>(1712 -(1427 + 192)))) then local v262=0 + 0 ;local v263;local v264;local v265;while true do if (v262==(0 -0)) then v263=v89[2 + 0 ];v264={v87[v263](v87[v263 + (327 -(192 + 134)) ])};v262=(2425 -(556 + 592)) -(113 + 203 + 960) ;end if (v262==1) then v265=0 + 0 ;for v439=v263,v89[4 + 0 ] do v265=v265 + (809 -(329 + 479)) + 0 ;v87[v439]=v264[v265];end break;end end else v87[v89[7 -5 ]]=v29(v78[v89[554 -(83 + 468) ]],nil,v64);end elseif (v90>95) then v87[v89[2]]=v87[v89[(2663 -(174 + 680)) -(1202 + 604) ]] -v87[v89[18 -(47 -33) ]] ;else v87[v89[(3 -1) -0 ]]=v64[v89[8 -5 ]];end elseif (v90<=(425 -(45 + 280))) then if (v90<=(95 + 3)) then if (v90==(85 + 12)) then local v270=v89[1 + 1 ];local v271,v272=v80(v87[v270](v87[v270 + 1 + 0 ]));v82=(v272 + v270) -(1 + 0) ;local v273=0;for v341=v270,v82 do v273=v273 + (1 -0) ;v87[v341]=v271[v273];end else v87[v89[2]]=v89[3]~=0 ;end elseif ((v90==(2010 -(340 + 1571))) or (86>=3626)) then v87[v89[1 + 1 ]]();else local v275=0;local v276;while true do if (v275==0) then v276=v89[1774 -(1238 + 495 + (778 -(396 + 343))) ];v87[v276](v87[v276 + (2 -1) ]);break;end end end elseif ((2395==2395) and (v90<=((101 + 1035) -((1602 -(29 + 1448)) + 909)))) then if ((3780>2709) and (v90==(2049 -(1096 + 852)))) then v87[v89[2]]={};else local v278=0 + 0 ;local v279;local v280;while true do if (v278==(0 -0)) then v279=v89[2 + 0 ];v280=v87[v89[515 -(409 + 103) ]];v278=237 -(46 + 190) ;end if (v278==1) then v87[v279 + (96 -(51 + 44)) ]=v280;v87[v279]=v280[v89[2 + 2 ]];break;end end end elseif (v90>(1420 -(1114 + 203))) then v87[v89[728 -((1617 -(135 + 1254)) + 498) ]]= #v87[v89[3]];else v87[v89[1 + 1 ]]=v87[v89[2 + 1 ]][v87[v89[667 -((655 -481) + 489) ]]];end elseif (v90<=(291 -(835 -656))) then if ((v90<=((1342 + 671) -(830 + (2602 -(389 + 1138))))) or (237>=2273)) then if ((v90<=(630 -(303 + 221))) or (2040<=703)) then if (v90>(1374 -(231 + 1038))) then v87[v89[2 + 0 ]][v89[1165 -(171 + 991) ]]=v89[4];else v87[v89[(582 -(102 + 472)) -6 ]][v89[7 -4 ]]=v87[v89[4]];end elseif (v90==(266 -159)) then v87[v89[2 + 0 ]]=v87[v89[10 -7 ]] * v87[v89[11 -7 ]] ;else local v289=v78[v89[3]];local v290;local v291={};v290=v10({},{__index=function(v344,v345) local v346=v291[v345];return v346[1][v346[2 -0 ]];end,__newindex=function(v347,v348,v349) local v350=0 -0 ;local v351;while true do if (v350==(1248 -(111 + 1137))) then v351=v291[v348];v351[159 -(91 + 67) ][v351[2]]=v349;break;end end end});for v352=1 + 0 ,v89[4] do local v353=0 -(0 + 0) ;local v354;while true do if (v353==(0 + 0 + 0)) then v81=v81 + ((2069 -(320 + 1225)) -(423 + 100)) ;v354=v77[v81];v353=1 + 0 ;end if (v353==(2 -1)) then if (v354[1]==(20 + (29 -12))) then v291[v352-(772 -(326 + 445)) ]={v87,v354[6 -3 ]};else v291[v352-(2 -(1465 -(157 + 1307))) ]={v63,v354[35 -(19 + 13) ]};end v86[ #v86 + (1 -0) ]=v291;break;end end end v87[v89[4 -2 ]]=v29(v289,v290,v64);end elseif (v90<=(314 -204)) then if ((3279<=3967) and (v90==(29 + (1939 -(821 + 1038))))) then local v293=v89[3 -1 ];local v294=v87[v293];local v295=v89[6 -3 ];for v355=1813 -(1293 + 519) ,v295 do v294[v355]=v87[v293 + v355 ];end else v87[v89[3 -1 ]]=v64[v89[(17 -10) -4 ]];end elseif (v90==(212 -101)) then v87[v89[8 -6 ]]=v87[v89[6 -3 ]][v87[v89[1 + 2 + 1 ]]];else v87[v89[(1 -0) + 1 ]]= #v87[v89[(3 + 3) -3 ]];end elseif (v90<=(27 + 89)) then if (v90<=114) then if (v90>(38 + (185 -110))) then local v301=v89[(1028 -(834 + 192)) + 0 ];local v302={v87[v301](v13(v87,v301 + (1859 -(673 + 1185)) ,v82))};local v303=(0 + 0) -0 ;for v358=v301,v89[12 -(3 + 5) ] do v303=v303 + 1 ;v87[v358]=v302[v303];end else v87[v89[2 -0 ]]();end elseif (v90==115) then v87[v89[2]]=v87[v89[3 + 0 ]] * v87[v89[3 + 1 ]] ;else local v305=v89[2 -(0 + 0) ];local v306=v89[1 + 3 ];local v307=v305 + (3 -(1 -0)) ;local v308={v87[v305](v87[v305 + (1881 -(446 + 1434)) ],v87[v307])};for v361=1284 -(1040 + 243) ,v306 do v87[v307 + v361 ]=v308[v361];end local v309=v308[1];if v309 then v87[v307]=v309;v81=v89[8 -5 ];else v81=v81 + (1848 -(559 + 1288)) ;end end elseif (v90<=(2049 -(609 + (1626 -(300 + 4))))) then if (v90>117) then if ((v87[v89[456 -(13 + 441) ]]==v89[4]) or (1988==877)) then v81=v81 + (3 -(1 + 1)) ;else v81=v89[7 -4 ];end elseif (v87[v89[2]]<v87[v89[366 -(112 + 250) ]]) then v81=v89[7 -4 ];else v81=v81 + (4 -3) ;end elseif (v90>(5 + 114)) then v87[v89[7 -5 ]]=v87[v89[2 + 1 ]] + v87[v89[2 + 2 ]] ;else local v311=v89[5 -3 ];v87[v311]=v87[v311](v13(v87,v311 + 1 ,v82));end v81=v81 + 1 + 0 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
