--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v90=0;while true do if (v90==0) then v19=v0(v3(v30,1,1));return "";end end else local v91=v2(v0(v30,16));if v19 then local v113=v5(v91,v19);v19=nil;return v113;else return v91;end end end);local function v20(v31,v32,v33) if v33 then local v92=0 -0 ;local v93;while true do if (v92==0) then v93=(v31/((5 -3)^(v32-(1 -(877 -(282 + 595))))))%((4 -(1639 -(1523 + 114)))^(((v33-(620 -(555 + 64))) -(v32-((838 + 94) -(857 + 74)))) + (569 -(367 + (286 -85))))) ;return v93-(v93%1) ;end end else local v94=(929 -(214 + 713))^(v32-1) ;return (((v31%(v94 + v94))>=v94) and (1 + 0)) or (0 + 0) ;end end local function v21() local v34=0;local v35;while true do if (v34==(1066 -(68 + 997))) then return v35;end if (v34==(1270 -(226 + 1044))) then v35=v1(v16,v18,v18);v18=v18 + (118 -(32 + 85)) ;v34=4 -3 ;end end end local function v22() local v36=0 + 0 ;local v37;local v38;while true do if (v36==(0 + 0)) then v37,v38=v1(v16,v18,v18 + (959 -(892 + 65)) );v18=v18 + (4 -2) ;v36=(351 -(87 + 263)) -0 ;end if (v36==(1 -0)) then return (v38 * 256) + v37 ;end end end local function v23() local v39=0;local v40;local v41;local v42;local v43;while true do if (v39==(180 -(67 + 113))) then v40,v41,v42,v43=v1(v16,v18,v18 + 3 + 0 );v18=v18 + (9 -(4 + 1)) ;v39=1 + 0 ;end if (v39==(3 -2)) then return (v43 * (16778168 -(802 + 150))) + (v42 * (176444 -110908)) + (v41 * (464 -208)) + v40 ;end end end local function v24() local v44=v23();local v45=v23();local v46=(818 + 180) -((1687 -(201 + 571)) + 82) ;local v47=(v20(v45,2 -1 ,12 + 8 ) * ((2 -0)^(1219 -(1069 + (1256 -(116 + 1022)))))) + v44 ;local v48=v20(v45,(195 -148) -26 ,67 -36 );local v49=((v20(v45,6 + 26 )==(1 -0)) and  -(1 + 0)) or (792 -(368 + 423)) ;if (v48==(0 -0)) then if (v47==(18 -(10 + 8))) then return v49 * (0 -0) ;else local v114=442 -(245 + 171 + 26) ;while true do if ((0 -0)==v114) then v48=(10 -7) -2 ;v46=0;break;end end end elseif (v48==(879 + 1168)) then return ((v47==0) and (v49 * ((1 -0)/(438 -(145 + 293))))) or (v49 * NaN) ;end return v8(v49,v48-(1453 -(44 + 386)) ) * (v46 + (v47/((1488 -((1857 -(814 + 45)) + 488))^((41 -24) + 35)))) ;end local function v25(v50) local v51=(0 -0) + 0 ;local v52;local v53;while true do if ((1 + 1 + 0)==v51) then v53={};for v115=(3050 -2164) -((2008 -(760 + 987)) + 624) , #v52 do v53[v115]=v2(v1(v3(v52,v115,v115)));end v51=3;end if (v51==(1 -0)) then v52=v3(v16,v18,(v18 + v50) -1 );v18=v18 + v50 ;v51=1082 -(1020 + 60) ;end if (v51==3) then return v6(v53);end if (v51==(1423 -((2543 -(1789 + 124)) + (1559 -(745 + 21))))) then v52=nil;if  not v50 then v50=v23();if (v50==(0 -0)) then return "";end end v51=1;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v54=(function() return function(v95,v96,v97,v98,v99,v100,v101,v102,v103) local v104=(function() return 0 -0 ;end)();local v95=(function() return;end)();local v96=(function() return;end)();while true do if (v104==0) then local v121=(function() return 1665 -(970 + 695) ;end)();while true do if (v121==1) then v104=(function() return 1 -0 ;end)();break;end if (v121==(1990 -(582 + 1408))) then v95=(function() return 0;end)();v96=(function() return nil;end)();v121=(function() return 3 -2 ;end)();end end end if (v104==(1 -0)) then local v122=(function() return 0 -0 ;end)();while true do if ((1824 -(1195 + 629))==v122) then local v126=(function() return 0 -0 ;end)();while true do if (0==v126) then while true do if (v95==0) then v96=(function() return v97();end)();if (v98(v96, #",", #"\\")~=0) then else local v131=(function() return 241 -(187 + 54) ;end)();local v132=(function() return;end)();local v133=(function() return;end)();local v134=(function() return;end)();while true do if (v131~=(783 -(162 + 618))) then else if (v98(v133, #"xxx", #"nil")== #"}") then v134[ #"xnxx"]=(function() return v101[v134[ #".dev"]];end)();end v102[v103]=(function() return v134;end)();break;end if ((1 + 0)~=v131) then else local v397=(function() return 0;end)();while true do if (v397==(0 + 0)) then v134=(function() return {v99(),v99(),nil,nil};end)();if (v132==0) then local v503=(function() return 0;end)();local v504=(function() return;end)();while true do if (v503==(0 -0)) then v504=(function() return 0;end)();while true do if (v504~=0) then else v134[ #"-19"]=(function() return v99();end)();v134[ #"http"]=(function() return v99();end)();break;end end break;end end elseif (v132== #"[") then v134[ #"xnx"]=(function() return v100();end)();elseif (v132==(2 -0)) then v134[ #"-19"]=(function() return v100() -(2^16) ;end)();elseif (v132~= #"xxx") then else local v523=(function() return 0 + 0 ;end)();while true do if (v523~=(1636 -(1373 + 263))) then else v134[ #"gha"]=(function() return v100() -((1002 -(451 + 549))^(6 + 10)) ;end)();v134[ #"http"]=(function() return v99();end)();break;end end end v397=(function() return 1;end)();end if (v397~=(1 -0)) then else v131=(function() return 2;end)();break;end end end if (v131==(2 -0)) then if (v98(v133, #"<", #":")== #"]") then v134[1386 -(746 + 638) ]=(function() return v101[v134[1 + 1 ]];end)();end if (v98(v133,2,2 -0 )~= #"[") then else v134[ #"19("]=(function() return v101[v134[ #"19("]];end)();end v131=(function() return 344 -(218 + 123) ;end)();end if (0~=v131) then else local v398=(function() return 0;end)();while true do if (v398==0) then v132=(function() return v98(v96,2, #"-19");end)();v133=(function() return v98(v96, #"asd1",1587 -(1535 + 46) );end)();v398=(function() return 1;end)();end if (v398==(1 + 0)) then v131=(function() return 1 + 0 ;end)();break;end end end end end break;end end return v95,v96,v97,v98,v99,v100,v101,v102,v103;end end end end end end end;end)();local v55=(function() return function(v105,v106,v107) local v108=(function() return 560 -(306 + 254) ;end)();local v109=(function() return;end)();while true do if (v108==(0 + 0)) then v109=(function() return 0 -0 ;end)();while true do if (v109~=0) then else local v127=(function() return 0;end)();local v128=(function() return;end)();while true do if ((1467 -(899 + 568))~=v127) then else v128=(function() return 0;end)();while true do if ((0 + 0)~=v128) then else local v130=(function() return 0;end)();while true do if (v130==0) then v105[v106-#" " ]=(function() return v107();end)();return v105,v106,v107;end end end end break;end end end end break;end end end;end)();local v56=(function() return {};end)();local v57=(function() return {};end)();local v58=(function() return {};end)();local v59=(function() return {v56,v57,nil,v58};end)();local v60=(function() return v23();end)();local v61=(function() return {};end)();for v69= #"]",v60 do local v70=(function() return 0;end)();local v71=(function() return;end)();local v72=(function() return;end)();local v73=(function() return;end)();while true do if (v70==(603 -(268 + 335))) then v71=(function() return 0;end)();v72=(function() return nil;end)();v70=(function() return 291 -(60 + 230) ;end)();end if (v70~=1) then else v73=(function() return nil;end)();while true do if (v71==(572 -(426 + 146))) then local v123=(function() return 0;end)();local v124=(function() return;end)();while true do if (v123~=0) then else v124=(function() return 0;end)();while true do if (v124==1) then v71=(function() return 1 + 0 ;end)();break;end if (v124==0) then local v129=(function() return 1456 -(282 + 1174) ;end)();while true do if (v129~=(811 -(569 + 242))) then else v72=(function() return v21();end)();v73=(function() return nil;end)();v129=(function() return 1;end)();end if (1==v129) then v124=(function() return 2 -1 ;end)();break;end end end end break;end end end if (v71~=1) then else if (v72== #"~") then v73=(function() return v21()~=(0 + 0) ;end)();elseif (v72==2) then v73=(function() return v24();end)();elseif (v72~= #"asd") then else v73=(function() return v25();end)();end v61[v69]=(function() return v73;end)();break;end end break;end end end v59[ #"19("]=(function() return v21();end)();for v74= #"/",v23() do FlatIdent_7F35E,Descriptor,v21,v20,v22,v23,v61,v56,v74=(function() return v54(FlatIdent_7F35E,Descriptor,v21,v20,v22,v23,v61,v56,v74);end)();end for v75= #"}",v23() do v57,v75,v28=(function() return v55(v57,v75,v28);end)();end return v59;end local function v29(v63,v64,v65) local v66=v63[1025 -(706 + 318) ];local v67=v63[1253 -(721 + 530) ];local v68=v63[3];return function(...) local v76=v66;local v77=v67;local v78=v68;local v79=v27;local v80=1272 -(945 + (1272 -(88 + 858))) ;local v81= -(2 -1);local v82={};local v83={...};local v84=v12("#",...) -(701 -(271 + 429)) ;local v85={};local v86={};for v110=0 + 0 ,v84 do if ((4934>2607) and ((v110>=v78) or (1355==2800))) then v82[v110-v78 ]=v83[v110 + (1501 -(1408 + 92)) ];else v86[v110]=v83[v110 + 1 ];end end local v87=(v84-v78) + (1087 -(461 + 625)) ;local v88;local v89;while true do v88=v76[v80];v89=v88[1289 -(993 + 295) ];if (v89<=(4 + 61)) then if ((1959>262) and (v89<=32)) then if ((v89<=(1186 -(418 + 753))) or (1839>=3774)) then if (v89<=(3 + 4)) then if ((v89<=(1 + 0 + 2 + 0)) or (1400>3116)) then if ((525<1662) and (2811==2811) and (v89<=1)) then if (v89>(0 + 0)) then local v135=v88[2];v86[v135](v86[v135 + 1 ]);elseif (v88[1 + 1 ]<v86[v88[2 + 2 ]]) then v80=v88[532 -(406 + 123) ];else v80=v80 + 1 ;end elseif ((v89>(1771 -(1749 + 20))) or (876>2550)) then v86[v88[1 + 1 ]]=v64[v88[1325 -(1249 + 73) ]];else local v138=v88[1 + 1 ];do return v13(v86,v138,v81);end end elseif (v89<=(1150 -(466 + 679))) then if (v89>(9 -5)) then for v313=v88[5 -3 ],v88[3] do v86[v313]=nil;end else local v139=1900 -(106 + (2583 -(766 + 23))) ;local v140;while true do if ((219<=2456) and (v139==(0 + 0))) then v140=v86[v88[4]];if ((2146>1122) and  not v140) then v80=v80 + 1 ;else v86[v88[2]]=v140;v80=v88[1 + 2 ];end break;end end end elseif ((v89>(17 -11)) or (56==3616) or (4219==1150)) then local v141=v88[5 -3 ];local v142={v86[v141](v13(v86,v141 + 1 ,v81))};local v143=584 -(57 + 527) ;for v315=v141,v88[1431 -(41 + 1386) ] do v143=v143 + (104 -(17 + 86)) ;v86[v315]=v142[v143];end else local v144=v88[9 -7 ];v86[v144]=v86[v144](v13(v86,v144 + 1 ,v88[3 + 0 ]));end elseif (v89<=(24 -13)) then if ((v89<=(26 -17)) or (2421<622)) then if (v89>8) then local v146=v88[168 -(122 + 44) ];v81=(v146 + v87) -1 ;for v318=v146,v81 do local v319=0;local v320;while true do if (((1009<=1130) and (v319==0)) or (2989<=222)) then v320=v82[v318-v146 ];v86[v318]=v320;break;end end end else local v147=0;while true do if (v147==(0 -0)) then v86[v88[6 -4 ]]=v88[(3 -0) + 0 ]~=(0 + 0) ;v80=v80 + (1 -0) ;break;end end end elseif ((2258>1241) and (v89==((197 -122) -(30 + 35)))) then v64[v88[3 + 0 ]]=v86[v88[1259 -(1043 + 214) ]];else v86[v88[7 -(16 -11) ]]=v88[3]~=(1212 -(323 + 889)) ;end elseif (v89<=(34 -21)) then if (v89>((1665 -(1036 + 37)) -(361 + 219))) then local v151=0;local v152;while true do if ((2758<2980) and (v151==((227 + 93) -(53 + 267)))) then v152=v88[1 + (1 -0) ];v86[v152]=v86[v152](v13(v86,v152 + (414 -(15 + 398)) ,v81));break;end end else local v153=v88[984 -(18 + 964) ];local v154={v86[v153](v86[v153 + (3 -2) ])};local v155=0 + 0 + 0 ;for v321=v153,v88[3 + 1 ] do v155=v155 + 1 ;v86[v321]=v154[v155];end end elseif ((v89==(1494 -(641 + 839))) or (86>=3626)) then if ((2395==2395) and (v88[2]<v86[v88[854 -(20 + 830) ]])) then v80=v88[3 + 0 ];else v80=v80 + (127 -(116 + 10)) ;end else v86[v88[1 + 1 ]]= #v86[v88[3]];end elseif ((3780>2709) and (v89<=(761 -(542 + 196)))) then if ((41<4259) and ((v89<=(932 -(910 + 3))) or (237>=2273))) then if (v89<=(35 -18)) then if (v89>((12 -7) + 11)) then if  not v86[v88[2 + (1684 -(1466 + 218)) ]] then v80=v80 + 1 + 0 ;else v80=v88[(4 + 3) -4 ];end elseif (v86[v88[4 -(1150 -(556 + 592)) ]]~=v86[v88[1555 -(1126 + 425) ]]) then v80=v80 + (406 -(118 + 287)) ;else v80=v88[11 -8 ];end elseif ((v89==(1139 -(118 + 1003))) or (1930<56)) then local v157=0 -0 ;local v158;local v159;while true do if (v157==(378 -(142 + 235))) then for v430=v158 + (4 -3) ,v88[1 + 2 + 1 ] do v159=v159   .. v86[v430] ;end v86[v88[979 -(553 + 424) ]]=v159;break;end if (v157==(0 -0)) then v158=v88[3 + 0 ];v159=v86[v158];v157=1 + 0 ;end end else local v160=v88[(810 -(329 + 479)) + 0 ];do return v86[v160](v13(v86,v160 + (855 -(174 + 680)) + 0 ,v88[2 + 1 ]));end end elseif ((v89<=(45 -24)) or (2040<=703)) then if (v89==((188 -133) -35)) then local v161=0 -0 ;local v162;local v163;local v164;while true do if (v161==(0 + 0)) then v162=v88[(18 -9) -7 ];v163=v86[v162];v161=(539 + 215) -(239 + 514) ;end if (v161==((740 -(396 + 343)) + 0)) then v164=v88[1332 -(797 + 48 + 484) ];for v431=1 + 0 ,v164 do v163[v431]=v86[v162 + v431 ];end break;end end else local v165=v88[1 + 1 ];v86[v165](v13(v86,v165 + 1 ,v81));end elseif (v89>(51 -29)) then if ((3279<=3967) and (v86[v88[1204 -(373 + 829) ]]<=v86[v88[735 -(476 + 255) ]])) then v80=v80 + (1131 -(369 + 761)) ;else v80=v88[3];end else v86[v88[2 + (1477 -(29 + 1448)) ]]=v88[5 -2 ]^v86[v88[7 -3 ]] ;end elseif (v89<=27) then if ((v89<=(263 -((1453 -(135 + 1254)) + 174))) or (1988==877)) then if (v89==(4 + 20)) then v86[v88[2]]=v88[3 -0 ]~=(336 -(144 + 192)) ;v80=v80 + 1 ;else local v168=v88[218 -(42 + 174) ];local v169=v88[4 + 0 ];local v170=v168 + 2 + 0 ;local v171={v86[v168](v86[v168 + (1505 -(363 + 1141)) ],v86[v170])};for v324=1,v169 do v86[v170 + v324 ]=v171[v324];end local v172=v171[1581 -(1183 + 397) ];if v172 then v86[v170]=v172;v80=v88[8 -5 ];else v80=v80 + 1 + 0 ;end end elseif (v89==(20 + 6)) then local v173=(7440 -5465) -((8932 -7019) + 62) ;local v174;while true do if (v173==(0 + 0)) then v174=v88[5 -3 ];do return v86[v174](v13(v86,v174 + (1934 -(565 + 1368)) ,v81));end break;end end elseif (v86[v88[(5 + 2) -5 ]]~=v88[1665 -(1477 + 184) ]) then v80=v80 + (1 -0) ;else v80=v88[3 + 0 ];end elseif ((3333==3333) and (v89<=(885 -((2091 -(389 + 1138)) + 292)))) then if (v89==(47 -19)) then v80=v88[8 -5 ];elseif ((v88[306 -(244 + 60) ]<v86[v88[4 + 0 ]]) or (2225==20)) then v80=v80 + (477 -(41 + (1009 -(102 + 472)))) ;else v80=v88[1004 -(938 + 63) ];end elseif (v89<=(24 + 6)) then local v176=1125 -(936 + 179 + 10) ;local v177;while true do if (v176==(0 + 0)) then v177=v88[1615 -(868 + 697 + 48) ];v86[v177](v86[v177 + 1 + 0 + 0 ]);break;end end elseif ((v89==(1169 -(782 + 356))) or (872>=3092)) then v86[v88[269 -(176 + 91) ]]=v88[7 -4 ]~=((1545 -(320 + 1225)) -0) ;else local v359=v88[2];local v360=v86[v359];for v411=v359 + (1093 -(975 + (207 -90))) ,v88[1878 -(157 + 1718) ] do v7(v360,v86[v411]);end end elseif ((4404>=3252) and (v89<=48)) then if (v89<=(33 + 5 + 2)) then if (v89<=36) then if (v89<=(120 -86)) then if ((4291>1912) and (v89>(112 -79))) then v86[v88[1020 -(697 + 321) ]]={};else v86[v88[2]]=v86[v88[7 -4 ]] * v88[8 -4 ] ;end elseif ((1107>796) and (v89>(80 -45))) then local v180=v88[1 + 1 ];v86[v180]=v86[v180](v13(v86,v180 + (1 -0) ,v81));else local v182=0 -0 ;local v183;while true do if (v182==0) then v183=v88[2];do return v86[v183](v13(v86,v183 + ((2692 -(157 + 1307)) -(322 + 905)) ,v88[614 -(602 + 9) ]));end break;end end end elseif ((959==959) and (v89<=(1227 -(449 + 740)))) then if (v89>(909 -(826 + 46))) then v86[v88[949 -(245 + 702) ]]=v88[(1868 -(821 + 1038)) -(14 -8) ];else local v186=v88[1 + 2 ];local v187=v86[v186];for v327=v186 + (1899 -(260 + 1638)) ,v88[444 -(382 + 7 + 51) ] do v187=v187   .. v86[v327] ;end v86[v88[6 -4 ]]=v187;end elseif ((2003<2339) and (v89==(33 + 6))) then v64[v88[5 -2 ]]=v86[v88[2]];else v86[v88[2]]=v86[v88[8 -5 ]][v86[v88[(2147 -938) -(902 + 113 + 190) ]]];end elseif (v89<=((237 -141) -52)) then if (v89<=42) then if (v89==((1124 -(834 + 192)) -57)) then v86[v88[2]]=v86[v88[1 + 2 ]][v86[v88[4]]];else v86[v88[1692 -(72 + 1049 + 569) ]]=v86[v88[217 -(6 + 16 + 192) ]] + v86[v88[(15 + 672) -(483 + 200) ]] ;end elseif ((432==432) and (v89>((2332 -826) -(1404 + 59)))) then local v196=v88[5 -3 ];do return v86[v196](v13(v86,v196 + (1 -0) ,v81));end else local v197=v88[2];v86[v197]=v86[v197](v86[v197 + (766 -(468 + 297)) ]);end elseif (v89<=(608 -(334 + 228))) then if (v89>45) then v86[v88[6 -4 ]]=v86[v88[6 -3 ]] + v88[6 -(306 -(300 + 4)) ] ;else local v200=v88[1 + 1 ];local v201=v86[v88[(64 + 175) -(141 + (248 -153)) ]];v86[v200 + 1 + 0 ]=v201;v86[v200]=v201[v88[9 -5 ]];end elseif ((v89>(112 -65)) or (1145>=1253)) then v86[v88[2]]=v86[v88[(363 -(112 + 250)) + 2 ]] + v88[10 -6 ] ;else local v206=v88[2 + 0 ];do return v13(v86,v206,v206 + v88[2 + 1 ] );end end elseif ((v89<=56) or (245>=2204)) then if ((3418>2118) and (v89<=(72 -20))) then if (v89<=(30 + 20)) then if ((3066<=3890) and (v89==(212 -(92 + 71)))) then if (v86[v88[1 + 1 + 0 ]] or (2998>=3281)) then v80=v80 + ((2 -1) -0) ;else v80=v88[768 -(574 + 191) ];end else local v207=v88[2 + 0 ];v86[v207]=v86[v207](v13(v86,v207 + (2 -1) ,v88[2 + 1 + 0 ]));end elseif ((v89>(900 -(254 + 308 + 287))) or (4649<=2632)) then local v209=126 -(55 + 71) ;local v210;local v211;while true do if ((3162>=2069) and (v209==(0 -0))) then v210=v88[(1341 + 451) -(285 + 288 + 1217) ];v211={};v209=1;end if ((v209==(2 -1)) or (306>3081)) then for v434=1 + 0 + 0 , #v85 do local v435=v85[v434];for v471=0 -0 , #v435 do local v472=v435[v471];local v473=v472[1];local v474=v472[2];if (((v473==v86) and (v474>=v210)) or (3860>4872)) then v211[v474]=v473[v474];v472[1]=v211;end end end break;end end else v86[v88[941 -(714 + 225) ]][v88[8 -5 ]]=v86[v88[5 -1 ]];end elseif ((v89<=((1420 -(1001 + 413)) + 48)) or (3998==2298) or (3513<2706)) then if (v89>((167 -92) -22)) then do return v86[v88[884 -(244 + 638) ]]();end else v86[v88[2]]=v86[v88[809 -(118 + 688) ]]/v88[52 -(25 + 23) ] ;end elseif ((2978<3639) and ((v89>(11 + (737 -(627 + 66)))) or (8>=2739))) then local v215=v88[2];v86[v215](v13(v86,v215 + (1887 -(927 + 959)) ,v88[10 -7 ]));else local v216=v88[734 -((47 -31) + 716) ];v86[v216](v13(v86,v216 + (1 -(602 -(512 + 90))) ,v88[100 -(11 + 86) ]));end elseif (v89<=60) then if ((3682>=2888) and (v89<=(141 -83))) then if ((2590==2590) and (v89>(342 -(175 + 110)))) then v86[v88[2]][v86[v88[(1912 -(1665 + 241)) -3 ]]]=v86[v88[19 -15 ]];else v86[v88[2]][v88[1799 -(503 + (2010 -(373 + 344))) ]]=v86[v88[11 -7 ]];end elseif (v89>(43 + 16)) then local v221=v88[1063 -(810 + 251) ];v81=(v221 + v87) -1 ;for v328=v221,v81 do local v329=v82[v328-v221 ];v86[v328]=v329;end elseif ((149<479) and ((v86[v88[2 + 0 ]]==v86[v88[2 + 2 ]]) or (82>=1870))) then v80=v80 + 1 + 0 ;else v80=v88[3];end elseif (v89<=((269 + 326) -(43 + 490))) then if (v89==(794 -(711 + 6 + 16))) then v86[v88[7 -5 ]]=v86[v88[(2273 -1411) -(240 + 619) ]] * v88[4] ;else v86[v88[1 + 1 ]]=v86[v88[4 -1 ]] * v86[v88[1 + 3 ]] ;end elseif (v89<=63) then if (v86[v88[1746 -(1344 + 400) ]]==v86[v88[409 -((431 -176) + 150) ]]) then v80=v80 + 1 + 0 ;else v80=v88[2 + 1 ];end elseif (v89==64) then v86[v88[1101 -(35 + 1064) ]]=v64[v88[3]];else v86[v88[8 -6 ]]=v29(v77[v88[9 -(5 + 1) ]],nil,v65);end elseif ((2624<4557) and (v89<=(1837 -(404 + (2856 -1521))))) then if (v89<=81) then if (v89<=(479 -(183 + 223))) then if ((1020>=567) and (v89<=69)) then if ((v89<=(1 + 66)) or (733>2469)) then if (v89==(80 -14)) then v86[v88[2 + 0 ]]();else v86[v88[2]]=v65[v88[1239 -(298 + 938) ]];end elseif (v89==(25 + 43)) then local v226=v88[339 -(10 + (1586 -(233 + 1026))) ];v86[v226]=v86[v226](v86[v226 + 1 + 0 ]);elseif (v88[340 -(118 + 220) ]==v86[v88[2 + 2 ]]) then v80=v80 + (450 -(108 + 341)) ;else v80=v88[2 + 1 ];end elseif (v89<=(300 -229)) then if (v89>(1563 -(711 + 782))) then if v86[v88[3 -1 ]] then v80=v80 + (470 -(270 + 199)) ;else v80=v88[1 + 2 ];end else local v228=v88[1821 -(580 + 1239) ];local v229={v86[v228](v13(v86,v228 + 1 + 0 ,v81))};local v230=0 + 0 ;for v331=v228,v88[2 + 0 + 2 ] do local v332=0;while true do if ((2497==2497) and (0==v332)) then v230=v230 + 1 ;v86[v331]=v229[v230];break;end end end end elseif (v89==(187 -115)) then v86[v88[2 + 0 + 0 ]]();elseif ((3901==3901) and (v86[v88[(348 + 821) -(645 + 522) ]]<v86[v88[4]])) then v80=v80 + 1 ;else v80=v88[1793 -(1010 + 780) ];end elseif (v89<=(77 + 0)) then if ((201<415) and (v89<=(357 -282))) then if (v89>(216 -142)) then v80=v88[1839 -(71 + 974 + (1012 -(55 + 166))) ];else v86[v88[4 -2 ]]=v86[v88[4 -1 ]] * v86[v88[4]] ;end elseif ((v89>76) or (133==1784)) then local v233=v88[507 -(351 + 154) ];local v234=v88[1578 -(1281 + 57 + 236) ];local v235=v233 + (268 -(28 + 238)) ;local v236={v86[v233](v86[v233 + (1560 -(1381 + 178)) ],v86[v235])};for v333=1 + 0 ,v234 do v86[v235 + v333 ]=v236[v333];end local v237=v236[1 + 0 ];if v237 then v86[v235]=v237;v80=v88[3];else v80=v80 + (3 -2) ;end else do return;end end elseif (v89<=(34 + 45)) then if ((v89>(268 -190)) or (7>=310)) then do return v86[v88[2]];end else local v238=v88[2 + 0 ];local v239,v240=v79(v86[v238](v13(v86,v238 + (471 -(381 + 89)) ,v88[3 + 0 ])));v81=(v240 + v238) -(1 + 0) ;local v241=(297 -(36 + 261)) -0 ;for v336=v238,v81 do local v337=1156 -(1074 + 82) ;while true do if ((4992>286) and (v337==(0 -0))) then v241=v241 + ((3121 -1336) -(214 + 1570)) ;v86[v336]=v239[v241];break;end end end end elseif (v89==(1535 -(990 + 465))) then local v242=v88[2];local v243={v86[v242](v86[v242 + 1 ])};local v244=0 + 0 ;for v338=v242,v88[4] do local v339=0 + 0 ;while true do if (v339==(0 -0)) then v244=v244 + (1727 -(1668 + 58)) ;v86[v338]=v243[v244];break;end end end else local v245=v88[(1996 -(34 + 1334)) -(512 + 114) ];local v246={v86[v245](v13(v86,v245 + (1 -0) ,v88[10 -7 ]))};local v247=0 + 0 ;for v340=v245,v88[1 + 3 + 0 ] do local v341=0 + 0 ;while true do if (v341==(0 -0)) then v247=v247 + (1995 -(109 + 1885)) ;v86[v340]=v246[v247];break;end end end end elseif ((v89<=(1558 -((2552 -(1035 + 248)) + 200))) or (3131>3542) or (2561==3893)) then if ((4362>=1421) and (v89<=85)) then if (v89<=(158 -75)) then if ((75<=3546) and (v89==82)) then if (v86[v88[2]]==v88[819 -(98 + 717) ]) then v80=v80 + 1 ;else v80=v88[829 -(802 + 24) ];end else v86[v88[2 -0 ]]=v88[3 -0 ]^v86[v88[1 + 3 ]] ;end elseif ((2577>=1578) and (v89==((86 -(20 + 1)) + 19))) then v86[v88[1 + 1 + 0 ]][v88[1 + 2 ]]=v88[11 -(326 -(134 + 185)) ];else local v251=v88[6 -(1137 -(549 + 584)) ];do return v13(v86,v251,v81);end end elseif (v89<=(32 + 55)) then if (v89>(36 + 50)) then do return v86[v88[2 + (685 -(314 + 371)) ]];end else local v252=v88[2];local v253,v254=v79(v86[v252](v86[v252 + 1 ]));v81=(v254 + v252) -1 ;local v255=(0 -0) + 0 ;for v342=v252,v81 do local v343=(968 -(478 + 490)) + 0 ;while true do if ((2680<=3418) and ((1433 -(797 + 636))==v343)) then v255=v255 + (4 -3) ;v86[v342]=v253[v255];break;end end end end elseif (v89>(1707 -(1427 + 192))) then do return v86[v88[1 + 1 ]]();end elseif ( not v86[v88[2]] or (4288<2876)) then v80=v80 + (2 -1) ;else v80=v88[3 + 0 ];end elseif ((2462>=1147) and (v89<=(43 + 50))) then if ((v89<=(417 -(192 + 134))) or (4914<2480)) then if ((v89==(1366 -(316 + 960))) or (1559==1240)) then if (v88[2 + 0 ]<v86[v88[4]]) then v80=v80 + 1 + 0 ;else v80=v88[3 + 0 ];end else v86[v88[2]]=v86[v88[3 + 0 ]] -v86[v88[1176 -(786 + 386) ]] ;end elseif ((566==566) and (v89==92)) then if (v86[v88[2]]<v86[v88[15 -11 ]]) then v80=v80 + 1 ;else v80=v88[554 -(83 + 468) ];end else v86[v88[2]]=v86[v88[1809 -(1202 + 604) ]] + v86[v88[18 -(45 -31) ]] ;end elseif ((3921>=3009) and (v89<=(157 -62))) then if ((2063>=1648) and (v89>((1639 -(1055 + 324)) -(1506 -(1093 + 247))))) then v65[v88[328 -(45 + 280) ]]=v86[v88[2 + 0 ]];else v65[v88[3 + 0 ]]=v86[v88[1 + 1 ]];end elseif (v89<=(54 + 42)) then if ((4103<=4571) and (v88[1 + 1 ]<=v86[v88[4]])) then v80=v80 + 1 ;else v80=v88[3];end elseif ((1066>=452) and (v89>((160 + 19) -82))) then local v377=v88[1913 -(36 + 304 + 1571) ];local v378={v86[v377](v13(v86,v377 + (1773 -(1733 + 39)) ,v88[8 -5 ]))};local v379=1034 -(125 + 909) ;for v414=v377,v88[1952 -(1096 + 852) ] do v379=v379 + 1 + 0 ;v86[v414]=v378[v379];end else local v380=0 -0 ;local v381;local v382;local v383;while true do if (v380==1) then v383={};v382=v10({},{__index=function(v484,v485) local v486=0 + 0 ;local v487;while true do if ((4974>=2655) and (v486==(512 -(409 + 103)))) then v487=v383[v485];return v487[2 -1 ][v487[4 -2 ]];end end end,__newindex=function(v488,v489,v490) local v491=v383[v489];v491[237 -(46 + 190) ][v491[97 -(51 + 44) ]]=v490;end});v380=1 + 1 ;end if ((v380==(1319 -(1114 + 203))) or (2721<=907)) then for v493=1,v88[730 -(228 + 498) ] do local v494=0 + 0 ;local v495;while true do if (((0 + 0 + 0)==v494) or (1495==4787)) then v80=v80 + (664 -(174 + 489)) ;v495=v76[v80];v494=2 -1 ;end if ((4437>=3031) and ((1906 -(830 + 1075))==v494)) then if ((v495[525 -(303 + 221) ]==(1399 -(231 + 1038))) or (310>4434)) then v383[v493-(1 + 0) ]={v86,v495[7 -4 ]};else v383[v493-1 ]={v64,v495[10 -7 ]};end v85[ #v85 + (2 -1) ]=v383;break;end end end v86[v88[2 -0 ]]=v29(v381,v382,v65);break;end if (v380==(0 -0)) then v381=v77[v88[1251 -(111 + 1137) ]];v382=nil;v380=159 -(91 + (171 -104)) ;end end end elseif (v89<=(339 -225)) then if (v89<=(27 + 79)) then if ((v89<=102) or (4470<2949)) then if ((v89<=100) or (1580==2426)) then if (((2168<=4360) and (v89==(622 -(423 + 100)))) or (3711==503)) then v86[v88[1 + 1 ]]=v86[v88[3]]/v88[4] ;else local v263=0;local v264;local v265;local v266;local v267;while true do if ((994==994) and (1==v263)) then v81=(v266 + v264) -1 ;v267=0 -0 ;v263=2;end if (v263==0) then v264=v88[2 + 0 ];v265,v266=v79(v86[v264](v86[v264 + 1 ]));v263=772 -(326 + 445) ;end if (v263==(8 -6)) then for v446=v264,v81 do local v447=0;while true do if ((v447==(0 -0)) or (420==4318)) then v267=v267 + (2 -1) ;v86[v446]=v265[v267];break;end end end break;end end end elseif ((1655>401) and (v89==101)) then local v268=711 -(530 + 181) ;local v269;while true do if ((3063<=3426) and (v268==(881 -(614 + 267)))) then v269=v86[v88[36 -(19 + 13) ]];if  not v269 then v80=v80 + 1 ;else v86[v88[2 -0 ]]=v269;v80=v88[6 -3 ];end break;end end elseif ((1459>764) and (v86[v88[5 -(691 -(364 + 324)) ]]<v86[v88[4]])) then v80=v88[1 + 2 ];else v80=v80 + ((2 -1) -0) ;end elseif (v89<=(215 -111)) then if ((v89>(1915 -(1293 + 519))) or (641>4334)) then if (v86[v88[3 -1 ]]~=v86[v88[9 -5 ]]) then v80=v80 + (2 -1) ;else v80=v88[5 -2 ];end else local v270=0;local v271;local v272;local v273;while true do if ((v270==(8 -6)) or (4158<=33)) then for v448=2 -1 ,v88[3 + 1 ] do local v449=0 + 0 ;local v450;while true do if (v449==(0 -0)) then v80=v80 + 1 ;v450=v76[v80];v449=1 + 0 ;end if (v449==(1 + 0)) then if (v450[1 + 0 ]==((407 + 819) -(709 + 387))) then v273[v448-(1859 -(673 + 1185)) ]={v86,v450[4 -1 ]};else v273[v448-1 ]={v64,v450[3]};end v85[ #v85 + (1 -0) + 0 ]=v273;break;end end end v86[v88[2 -0 ]]=v29(v271,v272,v65);break;end if ((v270==(0 + 0)) or (99>4744)) then v271=v77[v88[5 -(5 -3) ]];v272=nil;v270=1 -0 ;end if ((4341==4341) and (3399>=2260) and (v270==(1881 -(446 + 1434)))) then v273={};v272=v10({},{__index=function(v451,v452) local v453=v273[v452];return v453[1284 -(1040 + 243) ][v453[2]];end,__newindex=function(v454,v455,v456) local v457=v273[v455];v457[2 -1 ][v457[1849 -(559 + 1288) ]]=v456;end});v270=2;end end end elseif (v89==105) then v86[v88[1933 -(609 + 1322) ]]={};else v86[v88[456 -(13 + 441) ]][v86[v88[10 -7 ]]]=v86[v88[10 -6 ]];end elseif ((v89<=(547 -437)) or (393>=4242)) then if ((255<=1596) and (989<4859) and (v89<=108)) then if (v89==(4 + 103)) then local v277=v88[2];local v278={};for v344=1, #v85 do local v345=0 -0 ;local v346;while true do if (v345==(0 + 0)) then v346=v85[v344];for v479=0 + 0 , #v346 do local v480=0;local v481;local v482;local v483;while true do if ((v480==0) or (4795<949) or (4433<1635)) then v481=v346[v479];v482=v481[2 -1 ];v480=(1269 -(1249 + 19)) + 0 ;end if (v480==(1 -0)) then v483=v481[2 + 0 ];if (((3842==3842) and (v482==v86) and (v483>=v277)) or (4300<3244)) then local v514=0 + 0 ;while true do if ((v514==(0 + 0)) or (3534>4677)) then v278[v483]=v482[v483];v481[1 + 0 ]=v278;break;end end end break;end end end break;end end end else for v347=v88[2 + 0 ],v88[436 -(153 + 280) ] do v86[v347]=nil;end end elseif ((v89>109) or (4859<2999)) then if (v86[v88[5 -3 ]]<v86[v88[4 + 0 + 0 ]]) then v80=v88[2 + (3 -2) ];else v80=v80 + 1 ;end else local v279=0 + 0 ;local v280;while true do if ((1747<=3601) and (v279==0)) then v280=v88[2 + 0 ];v86[v280]=v86[v280]();break;end end end elseif ((4726>2407) and ((v89<=(82 + 30)) or (804>4359))) then if (v89>(168 -57)) then v86[v88[(1088 -(686 + 400)) + 0 ]]=v65[v88[670 -(89 + 578) ]];elseif ((v86[v88[2 + 0 ]]==v88[8 -4 ]) or (1284>3669)) then v80=v80 + 1 ;else v80=v88[3];end elseif (v89==(1162 -(572 + 477))) then if (v88[1 + 1 ]<=v86[v88[4]]) then v80=v80 + 1 + 0 ;else v80=v88[1 + 2 ];end else local v283=v88[88 -(84 + 2) ];v86[v283]=v86[v283]();end elseif ((1117<2549) and (v89<=(200 -78))) then if ((v89<=(86 + 32)) or (2851>4774)) then if ((1031<3848) and (v89<=116)) then if (v89==(957 -(497 + 345))) then v86[v88[2]]=v86[v88[1 + 2 ]];elseif ((4670>=3623) and (v86[v88[1 + 1 ]]~=v88[4])) then v80=v80 + (1334 -(605 + 728)) ;else v80=v88[3 + 0 + 0 ];end elseif ((1854>903) and (v89==(259 -142))) then v86[v88[(230 -(73 + 156)) + 1 ]]= #v86[v88[10 -7 ]];else local v288=0;local v289;local v290;local v291;while true do if ((4663>1860) and (v288==(1 + 0))) then v291=v88[(1 + 6) -4 ];for v460=1 + (811 -(721 + 90)) ,v291 do v290[v460]=v86[v289 + v460 ];end break;end if (v288==(489 -(457 + 32))) then v289=v88[1 + 1 ];v290=v86[v289];v288=1;end end end elseif (v89<=(1522 -(832 + 570))) then if (v89>(113 + 6)) then v86[v88[1 + 1 ]]=v29(v77[v88[10 -7 ]],nil,v65);elseif (((2065<2544) and (v88[1 + 1 ]==v86[v88[800 -(588 + 208) ]])) or (3053<=469)) then v80=v80 + (2 -(1 + 0)) ;else v80=v88[1803 -(884 + 916) ];end elseif (v89==(253 -132)) then if ((v86[v88[2 + 0 ]]<=v86[v88[4]]) or (540>=1869)) then v80=v80 + (654 -(232 + 421)) ;else v80=v88[3];end else do return;end end elseif ((3292==3292) and (1311<=3359) and (v89<=(2015 -(1569 + 320)))) then if (v89<=(31 + 93)) then if ((2717<=3156) and (v89==(24 + 99))) then v86[v88[(19 -13) -4 ]]=v86[v88[608 -(316 + 289) ]][v88[4]];else local v295=v88[2];local v296=v86[v88[7 -4 ]];v86[v295 + 1 ]=v296;v86[v295]=v296[v88[(471 -(224 + 246)) + 3 ]];end elseif (v89>125) then v86[v88[1455 -(666 + 787) ]][v88[3]]=v88[(694 -265) -(360 + 65) ];else local v302=0 + 0 ;local v303;while true do if ((1038<=2645) and (v302==(254 -(79 + (322 -147))))) then v303=v88[(1 + 1) -0 ];v86[v303](v13(v86,v303 + 1 + 0 ,v81));break;end end end elseif (((1081<4524) and (v89<=((10 + 382) -264))) or (3230<2525)) then if ((440>=71) and (v89==(244 -117))) then v86[v88[2]]=v86[v88[3]] -v86[v88[4]] ;else v86[v88[901 -(503 + 291 + 105) ]]=v88[184 -(92 + 89) ];end elseif (v89<=129) then local v307=0;local v308;local v309;local v310;local v311;while true do if (v307==(1 -0)) then v81=(v310 + v308) -(1 + 0) ;v311=0 + 0 ;v307=7 -5 ;end if (v307==(0 + 0)) then v308=v88[4 -2 ];v309,v310=v79(v86[v308](v13(v86,v308 + (1 -0) + 0 ,v88[3])));v307=1 + 0 ;end if (v307==(5 -3)) then for v463=v308,v81 do v311=v311 + 1 + 0 ;v86[v463]=v309[v311];end break;end end elseif ((v89>130) or (2400>4083)) then v86[v88[2 -0 ]]=v86[v88[1247 -(485 + 759) ]][v88[8 -4 ]];else v86[v88[2]]=v86[v88[1192 -(442 + 747) ]];end v80=v80 + (1136 -(832 + 303)) ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
