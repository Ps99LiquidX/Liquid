--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v82=0;while true do if (v82==0) then v19=v0(v3(v30,1,1));return "";end end else local v83=v2(v0(v30,16));if v19 then local v95=v5(v83,v19);v19=nil;return v95;else return v83;end end end);local function v20(v31,v32,v33) if v33 then local v84=0;local v85;while true do if (v84==(0 -(1637 -(1523 + 114)))) then v85=(v31/((5 -3)^(v32-((1 + 0) -0))))%((4 -2)^(((v33-(620 -(555 + 64))) -(v32-(932 -((1221 -364) + 74)))) + (569 -(367 + 201)))) ;return v85-(v85%(928 -(214 + 713))) ;end end else local v86=0;local v87;while true do if (v86==(0 + 0)) then v87=2^(v32-(1 + 0)) ;return (((v31%(v87 + v87))>=v87) and 1) or (877 -(282 + 595)) ;end end end end local function v21() local v34=1065 -(68 + 997) ;local v35;while true do if (((1388 -(32 + 85)) -(226 + 1044))==v34) then return v35;end if (v34==0) then v35=v1(v16,v18,v18);v18=v18 + (4 -3) ;v34=1;end end end local function v22() local v36,v37=v1(v16,v18,v18 + 2 + 0 );v18=v18 + 1 + 1 ;return (v37 * (1213 -(892 + 65))) + v36 ;end local function v23() local v38=(0 -0) -(0 + 0) ;local v39;local v40;local v41;local v42;while true do if (v38==(1 -0)) then return (v42 * (30800116 -14022900)) + (v41 * (260471 -194935)) + (v40 * (606 -((1039 -(802 + 150)) + 263))) + v39 ;end if (v38==(180 -(67 + 113))) then v39,v40,v41,v42=v1(v16,v18,v18 + 3 + 0 );v18=v18 + 4 ;v38=1;end end end local function v24() local v43=0 -(1138 -(116 + 1022)) ;local v44;local v45;local v46;local v47;local v48;local v49;while true do if (((1 + 0) -0)==v43) then v46=1 + 0 ;v47=(v20(v45,998 -((1687 -(201 + 571)) + 82) ,20) * (2^(90 -58))) + v44 ;v43=2 + 0 ;end if (v43==(0 -0)) then v44=v23();v45=v23();v43=1188 -(1069 + 118) ;end if (v43==(4 -2)) then v48=v20(v45,21,31);v49=((v20(v45,69 -37 )==((4 -3) + 0)) and  -1) or (1 -0) ;v43=3 + 0 ;end if (v43==(794 -(368 + 423))) then if (v48==((0 + 0) -0)) then if (v47==0) then return v49 * 0 ;else local v111=18 -(10 + 8) ;while true do if ((0 -(0 -0))==v111) then v48=443 -(416 + 26) ;v46=0 -0 ;break;end end end elseif (v48==2047) then return ((v47==(0 + 0)) and (v49 * ((1 -0)/(438 -(145 + 293))))) or (v49 * NaN) ;end return v8(v49,v48-((5159 -3706) -(44 + 386)) ) * (v46 + (v47/((1488 -(998 + 488))^(17 + (894 -(814 + 45)))))) ;end end end local function v25(v50) local v51;if  not v50 then local v88=0 -0 ;while true do if (v88==((0 -0) + 0)) then v50=v23();if (v50==0) then return "";end break;end end end v51=v3(v16,v18,(v18 + v50) -(1 + 0) );v18=v18 + v50 ;local v52={};for v66=886 -(261 + (1704 -(1020 + 60))) , #v51 do v52[v66]=v2(v1(v3(v51,v66,v66)));end return v6(v52);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v53=(function() return 0 -0 ;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();local v59=(function() return;end)();while true do if (v53~=2) then else for v96= #"~",v23() do local v97=(function() return v21();end)();if (v20(v97, #"[", #",")~=(0 -0)) then else local v106=(function() return 0;end)();local v107=(function() return;end)();local v108=(function() return;end)();local v109=(function() return;end)();local v110=(function() return;end)();while true do if (1~=v106) then else local v112=(function() return 0;end)();while true do if (v112==(3 -2)) then v106=(function() return 1826 -(1195 + 629) ;end)();break;end if (v112==0) then v109=(function() return nil;end)();v110=(function() return nil;end)();v112=(function() return 1;end)();end end end if (v106==(2 -0)) then while true do if (v107== #"[") then local v120=(function() return 241 -(187 + 54) ;end)();local v121=(function() return;end)();while true do if (0==v120) then v121=(function() return 0;end)();while true do if (0~=v121) then else v110=(function() return {v22(),v22(),nil,nil};end)();if (v108==0) then local v320=(function() return 0 + 0 ;end)();local v321=(function() return;end)();while true do if (v320==(0 + 0)) then v321=(function() return 0;end)();while true do if (0~=v321) then else v110[ #"-19"]=(function() return v22();end)();v110[ #"0836"]=(function() return v22();end)();break;end end break;end end elseif (v108== #"{") then v110[ #"-19"]=(function() return v23();end)();elseif (v108==2) then v110[ #"xxx"]=(function() return v23() -(2^(33 -17)) ;end)();elseif (v108~= #"xnx") then else local v520=(function() return 0;end)();local v521=(function() return;end)();while true do if (v520~=0) then else v521=(function() return 0 -0 ;end)();while true do if (v521==(0 + 0)) then v110[ #"19("]=(function() return v23() -((1638 -(1373 + 263))^16) ;end)();v110[ #"0836"]=(function() return v22();end)();break;end end break;end end end v121=(function() return 1001 -(451 + 549) ;end)();end if (v121~=1) then else v107=(function() return 2;end)();break;end end break;end end end if (v107==0) then local v122=(function() return 0 + 0 ;end)();local v123=(function() return;end)();while true do if (v122==(0 -0)) then v123=(function() return 0 -0 ;end)();while true do if (v123==1) then v107=(function() return  #"/";end)();break;end if (v123==0) then v108=(function() return v20(v97,2, #"xxx");end)();v109=(function() return v20(v97, #"xnxx",6);end)();v123=(function() return 1385 -(746 + 638) ;end)();end end break;end end end if (v107~= #"19(") then else if (v20(v109, #"xxx", #"gha")~= #"|") then else v110[ #"0313"]=(function() return v59[v110[ #".com"]];end)();end v54[v96]=(function() return v110;end)();break;end if (v107~=2) then else local v125=(function() return 0 + 0 ;end)();local v126=(function() return;end)();while true do if (v125==(0 -0)) then v126=(function() return 0;end)();while true do if (v126==0) then if (v20(v109, #" ", #"|")~= #",") then else v110[2]=(function() return v59[v110[343 -(218 + 123) ]];end)();end if (v20(v109,1583 -(1535 + 46) ,2 + 0 )== #"\\") then v110[ #"-19"]=(function() return v59[v110[ #"91("]];end)();end v126=(function() return 1;end)();end if (v126==(1 + 0)) then v107=(function() return  #"xnx";end)();break;end end break;end end end end break;end if (v106==(560 -(306 + 254))) then local v113=(function() return 0 + 0 ;end)();while true do if (v113~=(0 -0)) then else v107=(function() return 1467 -(899 + 568) ;end)();v108=(function() return nil;end)();v113=(function() return 1;end)();end if (1~=v113) then else v106=(function() return 1;end)();break;end end end end end end for v98= #" ",v23() do v55[v98-#"]" ]=(function() return v28();end)();end return v57;end if (v53==(0 + 0)) then local v91=(function() return 0;end)();local v92=(function() return;end)();while true do if (v91==(0 -0)) then v92=(function() return 0;end)();while true do if (v92==(603 -(268 + 335))) then v54=(function() return {};end)();v55=(function() return {};end)();v92=(function() return 1;end)();end if (v92==(291 -(60 + 230))) then v56=(function() return {};end)();v57=(function() return {v54,v55,nil,v56};end)();v92=(function() return 1 + 1 ;end)();end if (v92==2) then v53=(function() return  #"<";end)();break;end end break;end end end if ( #"|"==v53) then local v93=(function() return 1456 -(282 + 1174) ;end)();local v94=(function() return;end)();while true do if ((811 -(569 + 242))==v93) then v94=(function() return 0 -0 ;end)();while true do if (1==v94) then for v115= #" ",v58 do local v116=(function() return 0;end)();local v117=(function() return;end)();local v118=(function() return;end)();local v119=(function() return;end)();while true do if (v116==1) then v119=(function() return nil;end)();while true do if (v117==(1 + 0)) then if (v118== #"!") then v119=(function() return v21()~=(1024 -(706 + 318)) ;end)();elseif (v118==(1253 -(721 + 530))) then v119=(function() return v24();end)();elseif (v118== #"nil") then v119=(function() return v25();end)();end v59[v115]=(function() return v119;end)();break;end if (v117==(1271 -(945 + 326))) then local v129=(function() return 0 -0 ;end)();while true do if (v129~=1) then else v117=(function() return 1 + 0 ;end)();break;end if (v129~=(700 -(271 + 429))) then else v118=(function() return v21();end)();v119=(function() return nil;end)();v129=(function() return 1 + 0 ;end)();end end end end break;end if (v116~=0) then else v117=(function() return 1500 -(1408 + 92) ;end)();v118=(function() return nil;end)();v116=(function() return 1;end)();end end end v57[ #"xnx"]=(function() return v21();end)();v94=(function() return 2;end)();end if (v94==(1088 -(461 + 625))) then v53=(function() return 1290 -(993 + 295) ;end)();break;end if (v94==(0 + 0)) then v58=(function() return v23();end)();v59=(function() return {};end)();v94=(function() return 1;end)();end end break;end end end end end local function v29(v60,v61,v62) local v63=v60[1172 -(418 + 753) ];local v64=v60[(2 -1) + 1 ];local v65=v60[1 + 2 ];return function(...) local v68=v63;local v69=v64;local v70=v65;local v71=v27;local v72=1 + 0 ;local v73= -(1 + 0);local v74={};local v75={...};local v76=v12("#",...) -(1770 -(1749 + 20)) ;local v77={};local v78={};for v89=0 + 0 ,v76 do if (v89>=v70) then v74[v89-v70 ]=v75[v89 + (1323 -(1249 + 73)) ];else v78[v89]=v75[v89 + 1 ];end end local v79=(v76-v70) + 1 ;local v80;local v81;while true do local v90=0 + 0 ;while true do if (v90==(1145 -(466 + 679))) then v80=v68[v72];v81=v80[2 -1 ];v90=1;end if (v90==(2 -1)) then if (v81<=(1964 -(106 + 1794))) then if (v81<=31) then if (v81<=(5 + 10)) then if ((v81<=(2 + 4 + 1)) or (2902>4859)) then if (v81<=3) then if (v81<=((1 + 1) -1)) then if (v81>(0 -0)) then local v130=(85 + 29) -(4 + 110) ;local v131;local v132;while true do if (v130==1) then for v444=585 -(57 + 527) , #v77 do local v445=v77[v444];for v491=0, #v445 do local v492=1427 -(41 + 1386) ;local v493;local v494;local v495;while true do if (v492==((1517 -(1001 + 413)) -(17 + (191 -105)))) then v493=v445[v491];v494=v493[(883 -(244 + 638)) + 0 ];v492=1 -(693 -(627 + 66)) ;end if (v492==(2 -1)) then v495=v493[2];if ((1679<4359) and (v494==v78) and (v495>=v131)) then local v541=0;while true do if (v541==(166 -(122 + 44))) then v132[v495]=v494[v495];v493[1 -0 ]=v132;break;end end end break;end end end end break;end if (v130==(0 -0)) then v131=v80[2 + 0 ];v132={};v130=1 + 0 ;end end else v78[v80[3 -1 ]]=v78[v80[68 -(30 + 35) ]]/v80[4] ;end elseif (v81>2) then local v134=v80[2 + (0 -0) ];local v135,v136=v71(v78[v134](v78[v134 + (1258 -(1043 + 214)) ]));v73=(v136 + v134) -1 ;local v137=0;for v324=v134,v73 do v137=v137 + (603 -(512 + 90)) ;v78[v324]=v135[v137];end elseif (v78[v80[7 -5 ]]<v78[v80[1216 -(323 + 889) ]]) then v72=v72 + (2 -1) ;else v72=v80[583 -(361 + 219) ];end elseif ((1913<4670) and (v81<=(325 -(53 + (2173 -(1665 + 241)))))) then if ((v81>(1 + 3)) or (2846<879)) then v78[v80[2]]=v78[v80[(1133 -(373 + 344)) -(15 + 398) ]];else v78[v80[984 -(18 + 964) ]][v78[v80[3]]]=v78[v80[4]];end elseif (v81==(22 -16)) then v78[v80[2 + 0 ]]= #v78[v80[2 + 1 ]];else local v143=v80[(385 + 467) -(20 + 830) ];do return v78[v143](v13(v78,v143 + 1 ,v73));end end elseif (v81<=(9 + 2)) then if (v81<=9) then if (v81==(134 -(116 + 3 + 7))) then local v144=0 + 0 ;local v145;while true do if ((4588==4588) and (v144==(738 -((1429 -887) + 196)))) then v145=v78[v80[8 -4 ]];if ( not v145 or (347==2065)) then v72=v72 + 1 + 0 ;else v78[v80[2 + 0 ]]=v145;v72=v80[2 + 1 ];end break;end end else do return v78[v80[2]]();end end elseif (v81>((43 -17) -16)) then for v327=v80[2],v80[7 -(1103 -(35 + 1064)) ] do v78[v327]=nil;end else local v146=1551 -(1126 + 425) ;local v147;local v148;while true do if (v146==(405 -(118 + 287))) then v147=v80[2];v148=v78[v147];v146=(3 + 0) -2 ;end if (v146==(1122 -(118 + 1003))) then for v446=v147 + (2 -1) ,v80[380 -(142 + 235) ] do v7(v148,v78[v446]);end break;end end end elseif (v81<=13) then if (v81>(54 -42)) then local v149=0;local v150;local v151;local v152;while true do if (v149==(1 + 0)) then v152=v80[3];for v447=(2092 -1114) -(553 + 424) ,v152 do v151[v447]=v78[v150 + v447 ];end break;end if (((0 -0)==v149) or (1311>2697)) then v150=v80[2 + 0 ];v151=v78[v150];v149=1 + 0 ;end end else local v153=0 + 0 + 0 ;local v154;local v155;local v156;local v157;while true do if (v153==((1236 -(298 + 938)) + 0)) then v154=v80[(1261 -(233 + 1026)) + 0 ];v155,v156=v71(v78[v154](v13(v78,v154 + (2 -1) ,v80[3])));v153=(1668 -(636 + 1030)) -1 ;end if (v153==(2 -(1 + 0))) then v73=(v156 + v154) -1 ;v157=0 + 0 ;v153=9 -7 ;end if (v153==(755 -(239 + 514))) then for v450=v154,v73 do v157=v157 + 1 + 0 ;v78[v450]=v155[v157];end break;end end end elseif (v81==((1312 + 31) -(797 + 532))) then v72=v80[3 + 0 ];elseif (v80[1 + 1 ]<=v78[v80[9 -5 ]]) then v72=v72 + 1 ;else v72=v80[1205 -(373 + 247 + 582) ];end elseif ((v81<=23) or (2717>3795)) then if (v81<=(750 -(476 + 255))) then if ((v81<=17) or (1081<391)) then if ((v81>16) or (121>3438)) then v72=v80[(77 + 1056) -(369 + 761) ];else local v160=v80[2 + 0 ];v78[v160]=v78[v160]();end elseif (v81>(32 -(235 -(55 + 166)))) then v78[v80[2]]=v78[v80[(1 + 4) -2 ]] -v78[v80[242 -(64 + 174) ]] ;else v78[v80[1 + 1 ]]=v78[v80[3 -0 ]][v78[v80[4]]];end elseif (v81<=(357 -(144 + 20 + 172))) then if ((71<1949) and (v81==20)) then v78[v80[218 -(42 + 174) ]]=v78[v80[3 + (0 -0) ]] + v78[v80[4]] ;else local v166=v80[2 + 0 ];local v167={v78[v166](v78[v166 + (1505 -(363 + 1141)) ])};local v168=1580 -(1183 + 397) ;for v329=v166,v80[11 -7 ] do local v330=0 + 0 + 0 ;while true do if ((4254==4254) and (v330==(0 + 0))) then v168=v168 + (1976 -(1913 + 62)) ;v78[v329]=v167[v168];break;end end end end elseif (v81==(14 + 7 + 1)) then local v169=0 -0 ;local v170;local v171;local v172;while true do if (v169==(1934 -(565 + 1368))) then v172={};v171=v10({},{__index=function(v455,v456) local v457=0 -0 ;local v458;while true do if ((3196>=2550) and (0==v457)) then v458=v172[v456];return v458[1662 -(1477 + 184) ][v458[23 -(20 + 1) ]];end end end,__newindex=function(v459,v460,v461) local v462=0 -0 ;local v463;while true do if ((2456<4176) and (v462==(0 + 0))) then v463=v172[v460];v463[857 -(564 + 292) ][v463[2 -0 ]]=v461;break;end end end});v169=5 -(322 -(134 + 185)) ;end if ((306 -(244 + (1193 -(549 + 584))))==v169) then for v464=1 + 0 ,v80[480 -(41 + 435) ] do v72=v72 + (1002 -(938 + 63)) ;local v465=v68[v72];if (v465[1 + 0 ]==(1180 -(936 + 189))) then v172[v464-((686 -(314 + 371)) + 0) ]={v78,v465[2 + 1 ]};else v172[v464-(1139 -(782 + 356)) ]={v61,v465[3]};end v77[ #v77 + ((1173 -(786 + 386)) -(0 -0)) ]=v172;end v78[v80[1094 -(975 + 117) ]]=v29(v170,v171,v62);break;end if (v169==(1875 -(157 + 1718))) then v170=v69[v80[3 + (1379 -(1055 + 324)) ]];v171=nil;v169=1;end end else local v173=v80[6 -4 ];local v174={v78[v173](v13(v78,v173 + 1 ,v80[1021 -(697 + 321) ]))};local v175=0 -0 ;for v331=v173,v80[8 -(1 + 3) ] do v175=v175 + (2 -1) ;v78[v331]=v174[v175];end end elseif ((v81<=((43 -32) + 16)) or (1150==3452)) then if (v81<=25) then if ((1875<2258) and (v81>24)) then v78[v80[3 -1 ]]=v62[v80[7 -4 ]];elseif (v80[1229 -(322 + 905) ]<v78[v80[615 -(602 + 9) ]]) then v72=v80[3];else v72=v72 + (1190 -(449 + 740)) ;end elseif (v81==26) then if v78[v80[874 -(826 + 46) ]] then v72=v72 + (948 -(245 + 702)) ;else v72=v80[9 -6 ];end else v78[v80[2]]=v78[v80[1 + 2 ]] * v78[v80[1902 -(260 + 1638) ]] ;end elseif (v81<=(469 -(382 + 58))) then if (v81>(89 -61)) then v78[v80[2 + 0 ]]=v80[5 -2 ]^v78[v80[(37 -26) -7 ]] ;elseif (v80[1207 -((2566 -1664) + 303) ]==v78[v80[8 -4 ]]) then v72=v72 + (2 -1) ;else v72=v80[1 + 2 ];end elseif ((1173>41) and (v81==30)) then v61[v80[(4254 -2561) -(1121 + 569) ]]=v78[v80[216 -(22 + 192) ]];elseif (v80[685 -(483 + 200) ]<v78[v80[1467 -(1404 + 59) ]]) then v72=v80[8 -5 ];else v72=v72 + (1 -0) ;end elseif (v81<=(812 -(468 + 106 + 191))) then if ((v81<=((2315 -1714) -(334 + (785 -557)))) or (56>=3208)) then if (v81<=(118 -83)) then if (v81<=(76 -43)) then if (v81==32) then local v182=0 -0 ;local v183;while true do if (v182==(0 + 0)) then v183=v80[238 -(141 + 95) ];do return v78[v183](v13(v78,v183 + 1 ,v73));end break;end end else local v184=0 + 0 ;local v185;while true do if ((4313>3373) and ((0 -0)==v184)) then v185=v80[(4 + 0) -(4 -2) ];v78[v185]=v78[v185](v78[v185 + 1 + 0 ]);break;end end end elseif ((v81==(93 -59)) or (4493==2225)) then local v186=v80[2];v73=(v186 + v79) -(1 + 0) ;for v334=v186,v73 do local v335=0 + 0 ;local v336;while true do if ((3104>=3092) and (v335==0)) then v336=v74[v334-v186 ];v78[v334]=v336;break;end end end else do return;end end elseif (v81<=((739 -(364 + 324)) -14)) then if (v81>36) then v62[v80[2 + 1 ]]=v78[v80[165 -(92 + 71) ]];else local v189=0;local v190;while true do if (v189==(0 + 0)) then v190=v80[2 -0 ];do return v13(v78,v190,v190 + v80[(2105 -1337) -((1377 -803) + 191) ] );end break;end end end elseif (v81==(32 + 6)) then v78[v80[4 -2 ]]=v80[3];else v78[v80[2 + 0 ]]();end elseif ((3548>3098) and (v81<=(892 -(254 + 595)))) then if ((v81<=(167 -(55 + 71))) or (3252==503)) then if (v81>(52 -12)) then local v193=v80[(594 + 1198) -(573 + 1217) ];local v194=v78[v193];local v195=v80[8 -5 ];for v337=1,v195 do v194[v337]=v78[v193 + v337 ];end else v78[v80[1 + 1 ]]=v78[v80[4 -(4 -3) ]] + v80[(1510 -567) -(714 + 225) ] ;end elseif ((4733>2066) and (v81==(122 -80))) then local v197=v80[2 -0 ];local v198=v80[1 + 3 ];local v199=v197 + (2 -0) ;local v200={v78[v197](v78[v197 + 1 ],v78[v199])};for v340=49 -(25 + 23) ,v198 do v78[v199 + v340 ]=v200[v340];end local v201=v200[1 + 0 ];if v201 then v78[v199]=v201;v72=v80[1889 -((2815 -1888) + 959) ];else v72=v72 + ((1271 -(1249 + 19)) -2) ;end else local v202=732 -(16 + 716) ;local v203;local v204;while true do if ((3549>=916) and (v202==0)) then v203=v80[(5 + 0) -2 ];v204=v78[v203];v202=1;end if ((v202==((381 -283) -(11 + 86))) or (2189<=245)) then for v469=v203 + (2 -1) ,v80[289 -(175 + 110) ] do v204=v204   .. v78[v469] ;end v78[v80[2]]=v204;break;end end end elseif ((v81<=(113 -68)) or (1389>3925)) then if ((4169>=3081) and (v81==44)) then local v205=0 -0 ;local v206;local v207;local v208;while true do if (v205==((2882 -(686 + 400)) -(503 + 1015 + 278))) then v206=v80[5 -3 ];v207={v78[v206](v13(v78,v206 + (1062 -(810 + 251)) ,v73))};v205=1;end if ((1 + 0)==v205) then v208=0 + 0 ;for v470=v206,v80[4 + 0 ] do local v471=533 -(43 + 490) ;while true do if ((349<=894) and ((733 -(711 + 22))==v471)) then v208=v208 + (3 -2) ;v78[v470]=v207[v208];break;end end end break;end end else local v209=859 -(240 + 619) ;local v210;local v211;while true do if ((731<=2978) and (v209==(0 + 0))) then v210=v80[2 -0 ];v211=v78[v80[1 + 2 ]];v209=1745 -((2155 -(721 + 90)) + 400) ;end if ((v209==(406 -(255 + 2 + 148))) or (892>3892)) then v78[v210 + 1 + 0 ]=v211;v78[v210]=v211[v80[4]];break;end end end elseif (v81>(25 + 21)) then local v212=v80[8 -(19 -13) ];do return v78[v212](v13(v78,v212 + (3 -2) ,v80[3]));end else local v213=1739 -(404 + 1335) ;local v214;while true do if (v213==(470 -(224 + 246))) then v214=v80[2];v78[v214](v13(v78,v214 + (1 -0) ,v73));break;end end end elseif (v81<=(461 -(183 + 223))) then if (v81<=(61 -10)) then if (v81<=(33 + 16)) then if ((v81==(18 + 30)) or (4466==900)) then v61[v80[(626 -286) -(10 + 327) ]]=v78[v80[2]];elseif (v78[v80[2 + 0 ]]<v78[v80[342 -(118 + 220) ]]) then v72=v72 + 1 + 0 ;else v72=v80[3];end elseif (v81>(499 -(108 + 341))) then local v217=v80[1 + 1 + 0 ];local v218=v80[16 -12 ];local v219=v217 + 2 ;local v220={v78[v217](v78[v217 + (1 -0) ],v78[v219])};for v343=470 -(270 + 199) ,v218 do v78[v219 + v343 ]=v220[v343];end local v221=v220[1 + 0 ];if (v221 or (2084>=2888)) then local v369=1819 -(580 + 1239) ;while true do if (v369==(0 -0)) then v78[v219]=v221;v72=v80[3 + 0 + 0 ];break;end end else v72=v72 + 1 ;end else local v222=0 + 0 ;local v223;while true do if ((479<1863) and (v222==0)) then v223=v80[2];v78[v223](v13(v78,v223 + 1 + 0 ,v73));break;end end end elseif (v81<=(138 -(168 -83))) then if (v81>(33 + 19)) then v78[v80[1169 -(645 + 522) ]]=v61[v80[1793 -(1010 + 780) ]];else v78[v80[2]]=v78[v80[3 + 0 ]] + v78[v80[19 -15 ]] ;end elseif ((v81>(158 -104)) or (2428>=4038)) then v78[v80[1838 -(1045 + 791) ]]=v78[v80[7 -4 ]];else local v229=v80[2 -(0 -0) ];v78[v229]=v78[v229](v13(v78,v229 + 1 ,v80[508 -(351 + 154) ]));end elseif ((v81<=(1633 -(1281 + 293))) or (2878>2897)) then if ((v81<=57) or (2469>3676)) then if ((233<487) and (v81>56)) then for v346=v80[268 -(28 + 238) ],v80[6 -3 ] do v78[v346]=nil;end else v78[v80[1561 -(1381 + 178) ]]=v78[v80[516 -(203 + 310) ]][v78[v80[1997 -(1238 + 755) ]]];end elseif (v81==(55 + 3)) then v78[v80[2 + 0 + 0 ]]=v80[2 + (1535 -(709 + 825)) ]^v78[v80[13 -9 ]] ;else local v234=0 + 0 ;local v235;while true do if ((471 -(381 + 89))==v234) then for v472=v235,v73 do local v473=0 + 0 ;local v474;while true do if (v473==(0 + 0)) then v474=v74[v472-v235 ];v78[v472]=v474;break;end end end break;end if (v234==(0 -0)) then v235=v80[1158 -(1074 + 82) ];v73=(v235 + v79) -(1 -0) ;v234=1;end end end elseif ((2473>=201) and (v81<=(1845 -(214 + 1570)))) then if ((4120>=133) and (v81>(1515 -(990 + 465)))) then local v236=0;local v237;while true do if (v236==0) then v237=v78[v80[2 + 2 ]];if  not v237 then v72=v72 + 1 ;else local v500=0 + 0 ;while true do if (v500==(0 + 0)) then v78[v80[2]]=v237;v72=v80[11 -8 ];break;end end end break;end end else local v238=0;local v239;while true do if ((3080>=1986) and (v238==(1726 -(1668 + 58)))) then v239=v80[628 -((942 -430) + 114) ];v78[v239]=v78[v239](v13(v78,v239 + 1 ,v80[7 -4 ]));break;end end end elseif (v81<=62) then local v240=v80[3 -1 ];v78[v240]=v78[v240]();elseif (v81==(219 -156)) then local v370=0 + 0 ;local v371;local v372;local v373;while true do if (((1 -0) + 0)==v370) then v373=0;for v513=v371,v80[4] do v373=v373 + 1 + 0 ;v78[v513]=v372[v373];end break;end if ((0 -0)==v370) then v371=v80[2];v372={v78[v371](v13(v78,v371 + (1470 -(1269 + 200)) ,v73))};v370=865 -(196 + 668) ;end end else do return v78[v80[3 -(3 -2) ]]();end end elseif ((v81<=96) or (1439>3538)) then if (v81<=(895 -(98 + 717))) then if (v81<=(898 -((1661 -859) + 24))) then if ((v81<=((950 -(171 + 662)) -(142 -(4 + 89)))) or (419<7)) then if (v81<=(83 -17)) then if (v81>(10 + 55)) then if (v78[v80[2 + 0 ]]~=v80[1 + 3 ]) then v72=v72 + 1 + 0 ;else v72=v80[10 -7 ];end else v78[v80[5 -3 ]][v80[9 -6 ]]=v78[v80[2 + 1 + 1 ]];end elseif ((2820==2820) and (v81>(28 + 39))) then v78[v80[2 + 0 ]]=v78[v80[3]][v80[3 + 1 ]];else v78[v80[1 + 1 ]]=v78[v80[1436 -((3500 -2703) + 636) ]] * v80[(8 + 11) -15 ] ;end elseif (v81<=(1689 -(1427 + 192))) then if ((v81==(24 + 45)) or (4362<=3527)) then v78[v80[4 -2 ]]=v78[v80[3 + 0 ]] * v80[2 + 2 ] ;else v78[v80[328 -((1678 -(35 + 1451)) + 134) ]]=v80[1279 -(316 + 960) ]~=(0 + 0) ;v72=v72 + 1 + (1453 -(28 + 1425)) ;end elseif ((2613<=2680) and (v81==(66 + (1998 -(941 + 1052))))) then local v249=0 -(0 + 0) ;local v250;while true do if ((v249==(551 -(83 + 468))) or (1482>=4288)) then v250=v80[1808 -(1202 + 604) ];do return v13(v78,v250,v73);end break;end end else do return v78[v80[9 -7 ]];end end elseif ((v81<=76) or (2462>4426)) then if (v81<=(123 -49)) then if (v81>(202 -129)) then v78[v80[327 -(45 + 280) ]]();else v78[v80[2 + 0 ]][v80[3]]=v80[(1518 -(822 + 692)) + (0 -0) ];end elseif (v81>(14 + 14 + 47)) then v78[v80[2 + 0 ]]=v78[v80[1 + 2 ]]/v80[6 -(299 -(45 + 252)) ] ;else v78[v80[1913 -(340 + 1571) ]]=v29(v69[v80[2 + 1 ]],nil,v62);end elseif (v81<=(1850 -(1733 + 39))) then if ((4774==4774) and (v81>77)) then v78[v80[5 -(3 + 0) ]]=v78[v80[1037 -(125 + 909) ]][v80[1952 -(1096 + 852) ]];elseif (v78[v80[1 + 1 ]]==v80[5 -1 ]) then v72=v72 + 1 ;else v72=v80[3];end elseif ((566<=960) and (v81>(77 + 2))) then local v257=512 -(409 + 103) ;local v258;while true do if (v257==(236 -(16 + 30 + 190))) then v258=v80[97 -(51 + 44) ];do return v13(v78,v258,v73);end break;end end elseif ((v80[1 + 1 ]<v78[v80[1321 -(1114 + 203) ]]) or (2910<=1930)) then v72=v72 + (727 -(228 + 498)) ;else v72=v80[(2 -1) + (435 -(114 + 319)) ];end elseif (v81<=(49 + 39)) then if (v81<=(747 -((249 -75) + 489))) then if (v81<=(213 -131)) then if (v81==(1986 -(830 + 1075))) then if (v78[v80[526 -(303 + 221) ]]==v78[v80[1273 -((295 -64) + 1038) ]]) then v72=v72 + 1 ;else v72=v80[3 + 0 ];end elseif (v78[v80[1164 -(171 + 991) ]]<=v78[v80[4]]) then v72=v72 + (4 -3) ;else v72=v80[3];end elseif (v81==(222 -139)) then v78[v80[4 -2 ]]=v78[v80[3]] -v78[v80[3 + 1 + 0 ]] ;elseif  not v78[v80[(8 -2) -4 ]] then v72=v72 + (2 -1) ;else v72=v80[3];end elseif (v81<=(138 -52)) then if (v81==(262 -177)) then local v260=v80[2];v78[v260]=v78[v260](v78[v260 + (1249 -((232 -121) + 1137)) ]);else local v262=0;local v263;while true do if ((v262==(158 -(91 + 67))) or (19>452)) then v263=v80[5 -3 ];v78[v263]=v78[v263](v13(v78,v263 + 1 ,v73));break;end end end elseif ((v81==(22 + 65)) or (907>3152)) then v78[v80[525 -(423 + 100) ]]=v80[3]~=(0 + 0) ;else v78[v80[5 -3 ]][v78[v80[2 + (1964 -(556 + 1407)) ]]]=v78[v80[775 -(326 + 445) ]];end elseif (v81<=(1298 -(741 + 465))) then if (v81<=(392 -302)) then if ((v81>(197 -108)) or (2505>4470)) then v78[v80[4 -(467 -(170 + 295)) ]][v80[714 -(530 + 181) ]]=v78[v80[885 -(614 + 267) ]];else v78[v80[34 -(19 + 13) ]]=v80[3]~=(0 -0) ;end elseif (v81==(211 -(64 + 56))) then v78[v80[5 -3 ]]={};elseif (v78[v80[1 + 1 ]]==v80[6 -2 ]) then v72=v72 + (1 -0) ;else v72=v80[1815 -(1293 + 519) ];end elseif (v81<=(191 -(90 + 7))) then if (v81==(242 -(366 -217))) then if ((v78[v80[3 -1 ]]~=v80[(15 + 2) -13 ]) or (3711>4062)) then v72=v72 + (2 -1) ;else v72=v80[2 + 1 ];end elseif ((420==420) and  not v78[v80[1 + 1 ]]) then v72=v72 + (2 -1) ;else v72=v80[1 + 2 ];end elseif (v81==(32 + 63)) then local v271=0 + 0 + 0 ;local v272;local v273;local v274;local v275;while true do if ((v271==(1098 -(709 + 220 + 167))) or (33>=3494)) then for v475=v272,v73 do v275=v275 + (1859 -(673 + 1185)) ;v78[v475]=v273[v275];end break;end if (v271==(2 -1)) then v73=(v274 + v272) -(3 -2) ;v275=0 -0 ;v271=2 + 0 ;end if (v271==0) then v272=v80[2 + 0 ];v273,v274=v71(v78[v272](v78[v272 + 1 ]));v271=1 -(1230 -(957 + 273)) ;end end else v78[v80[1 + 1 ]]=v80[1 + 2 ];end elseif (v81<=(222 -110)) then if (v81<=104) then if ((v81<=(196 -96)) or (1267==4744)) then if (v81<=98) then if (v81==97) then local v278=(753 + 1127) -(446 + 1434) ;local v279;while true do if ((2428<3778) and (v278==(1283 -(1040 + 243)))) then v279=v80[(19 -14) -3 ];v78[v279]=v78[v279](v13(v78,v279 + (1848 -(559 + 1288)) ,v73));break;end end else local v280=1931 -(609 + 1322) ;while true do if ((v280==0) or (2946<=1596)) then v78[v80[456 -(13 + 441) ]]=v80[10 -7 ]~=(0 -0) ;v72=v72 + ((10 -6) -3) ;break;end end end elseif (v81==(4 + 95)) then v78[v80[7 -5 ]][v80[9 -6 ]]=v80[4];elseif ((4433>3127) and (v78[v80[2]]<v78[v80[4]])) then v72=v80[2 + 1 ];else v72=v72 + 1 + 0 ;end elseif ((4300>=2733) and (v81<=(302 -200))) then if ((4829==4829) and (v81==101)) then if (v78[v80[2 + 0 ]]<v78[v80[4]]) then v72=v80[4 -1 ];else v72=v72 + 1 + 0 ;end else do return v78[v80[2 + 0 ]];end end elseif (v81==((371 -296) + (1808 -(389 + 1391)))) then if (v78[v80[2 + 0 + 0 ]]<=v78[v80[4 + 0 ]]) then v72=v72 + (434 -(153 + 280)) ;else v72=v80[8 -5 ];end else do return;end end elseif (v81<=(97 + 11)) then if ((1683<=4726) and (v81<=(42 + 64))) then if (v81>(55 + 50)) then if ((4835>=3669) and (v80[2]<=v78[v80[4 + 0 ]])) then v72=v72 + 1 + 0 ;else v72=v80[4 -1 ];end else local v283=0 + 0 ;local v284;local v285;while true do if (v283==(667 -(89 + 578))) then v284=v80[3 + 0 ];v285=v78[v284];v283=1 -(0 + 0) ;end if (v283==(1050 -(572 + 477))) then for v478=v284 + (2 -1) + 0 ,v80[3 + 1 ] do v285=v285   .. v78[v478] ;end v78[v80[1 + 1 ]]=v285;break;end end end elseif (v81>(193 -(84 + 2))) then if (v78[v80[2 -0 ]]~=v78[v80[(954 -(783 + 168)) + 1 ]]) then v72=v72 + (843 -(497 + 345)) ;else v72=v80[1 + 2 ];end else local v286=0 + 0 ;local v287;local v288;local v289;while true do if (v286==1) then v289=1333 -(605 + 728) ;for v479=v287,v80[(9 -6) + 1 ] do local v480=(0 + 0) -0 ;while true do if (v480==0) then v289=v289 + 1 + 0 ;v78[v479]=v288[v289];break;end end end break;end if (v286==(0 -0)) then v287=v80[2 + 0 ];v288={v78[v287](v13(v78,v287 + 1 ,v80[3 + 0 ]))};v286=490 -(457 + 32) ;end end end elseif (v81<=((144 -97) + 63)) then if (v81==109) then v78[v80[1404 -(832 + 570) ]]=v62[v80[3 + 0 ]];else local v292=1212 -(1090 + 122) ;local v293;while true do if (v292==(0 + 0 + 0)) then v293=v80[6 -4 ];v78[v293](v13(v78,v293 + 1 ,v80[2 + 1 ]));break;end end end elseif ((2851>1859) and (v81>111)) then local v294=796 -((1974 -1386) + 208) ;local v295;local v296;while true do if (v294==0) then v295=v80[2];v296={};v294=1;end if (v294==((2 + 0) -1)) then for v481=1801 -(884 + 916) , #v77 do local v482=v77[v481];for v502=0, #v482 do local v503=v482[v502];local v504=v503[1 -0 ];local v505=v503[2];if ((3848>2323) and (v504==v78) and (v505>=v295)) then local v531=0 + 0 ;while true do if (v531==(1118 -(628 + 490))) then v296[v505]=v504[v505];v503[1]=v296;break;end end end end end break;end end elseif ((2836>469) and v78[v80[655 -(232 + 421) ]]) then v72=v72 + (1890 -(1569 + 320)) ;else v72=v80[3];end elseif (v81<=120) then if ((v81<=116) or (2096<=540)) then if (v81<=(28 + 86)) then if (v81==(22 + 91)) then if ((v80[6 -4 ]<v78[v80[609 -(316 + 289) ]]) or (3183<2645)) then v72=v72 + 1 + 0 ;else v72=v80[7 -(9 -5) ];end else local v297=v69[v80[1 + 2 ]];local v298;local v299={};v298=v10({},{__index=function(v348,v349) local v350=1453 -(666 + 787) ;local v351;while true do if (v350==0) then v351=v299[v349];return v351[1][v351[427 -(360 + 65) ]];end end end,__newindex=function(v352,v353,v354) local v355=v299[v353];v355[1 + 0 ][v355[256 -(79 + 175) ]]=v354;end});for v357=1 -0 ,v80[4 + 0 ] do local v358=0 -0 ;local v359;while true do if (v358==(0 -0)) then v72=v72 + 1 ;v359=v68[v72];v358=900 -(503 + 396) ;end if (v358==((367 -185) -(92 + 89))) then if (v359[1 -0 ]==55) then v299[v357-(1 + 0) ]={v78,v359[1 + 2 ]};else v299[v357-(2 -1) ]={v61,v359[2 + 1 ]};end v77[ #v77 + (2 -1) ]=v299;break;end end end v78[v80[1 + 0 + 1 ]]=v29(v297,v298,v62);end elseif ((3230<=3760) and (v81>(175 -60))) then local v301=v80[1246 -((2180 -(556 + 1139)) + 759) ];do return v78[v301](v13(v78,v301 + (2 -1) ,v80[1192 -(442 + 747) ]));end else local v302=1135 -(832 + (318 -(6 + 9))) ;local v303;while true do if (v302==(946 -(88 + 858))) then v303=v80[2];v78[v303](v78[v303 + 1 + 0 ]);break;end end end elseif (v81<=(18 + 80 + 20)) then if ((3828==3828) and (v81==(5 + 112))) then v78[v80[2]]=v78[v80[3]] + v80[793 -(766 + 12 + 11) ] ;else v78[v80[9 -7 ]]={};end elseif (v81>(162 -43)) then v78[v80[2]]=v78[v80[7 -4 ]] * v78[v80[13 -9 ]] ;elseif (v80[1075 -(1036 + 37) ]==v78[v80[4]]) then v72=v72 + 1 + (169 -(28 + 141)) ;else v72=v80[3];end elseif (v81<=(241 -117)) then if (v81<=(96 + 26)) then if (v81>(1601 -(641 + 839))) then v78[v80[915 -(910 + 3) ]]=v29(v69[v80[7 -4 ]],nil,v62);else v62[v80[1687 -(1466 + 218) ]]=v78[v80[2]];end elseif ((554==554) and (v81>(57 + 26 + 40))) then local v310=v80[1150 -(556 + 592) ];v78[v310](v78[v310 + 1 ]);else local v311=0 + 0 ;local v312;local v313;local v314;while true do if ((v311==(809 -((405 -76) + 479))) or (2563==172)) then v314=854 -(174 + 680) ;for v486=v312,v80[13 -9 ] do local v487=0 -0 ;while true do if (v487==(0 + 0)) then v314=v314 + 1 ;v78[v486]=v313[v314];break;end end end break;end if (v311==0) then v312=v80[2];v313={v78[v312](v78[v312 + (740 -(396 + 343)) ])};v311=1;end end end elseif (v81<=(12 + 114)) then if (v81==(1602 -(29 + 1448))) then if (v78[v80[1391 -(135 + 1254) ]]==v78[v80[14 -10 ]]) then v72=v72 + (4 -3) ;else v72=v80[3];end else local v315=(1317 -(486 + 831)) + 0 ;local v316;local v317;local v318;local v319;while true do if ((3889>=131) and (v315==(1527 -(389 + 1138)))) then v316=v80[576 -((265 -163) + 472) ];v317,v318=v71(v78[v316](v13(v78,v316 + (3 -2) + 0 + 0 ,v80[2 + 1 ])));v315=1 + 0 ;end if ((1546 -(320 + 1225))==v315) then v73=(v318 + v316) -(1 -0) ;v319=0;v315=2 + 0 ;end if ((v315==(1466 -(157 + 1307))) or (492==4578)) then for v488=v316,v73 do local v489=(5877 -4018) -(821 + 1038) ;while true do if ((v489==(0 -0)) or (4112<1816)) then v319=v319 + 1 ;v78[v488]=v317[v319];break;end end end break;end end end elseif ((4525>=1223) and (v81<=(14 + 113))) then if ((1090<=4827) and (v78[v80[3 -1 ]]~=v78[v80[2 + 2 ]])) then v72=v72 + (2 -1) ;else v72=v80[3];end elseif ((v81>(1154 -(834 + (1455 -(668 + 595))))) or (239>1345)) then v78[v80[1 + 1 ]]= #v78[v80[1 + 2 ]];else local v394=0 + 0 ;local v395;local v396;while true do if (v394==(0 -0)) then v395=v80[2];v396=v78[v80[307 -(300 + 4) ]];v394=1 + 0 ;end if ((v394==(1 + 0)) or (3710>=3738)) then v78[v395 + ((1 + 1) -1) ]=v396;v78[v395]=v396[v80[366 -(112 + 250) ]];break;end end end v72=v72 + 1 + 0 ;break;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
