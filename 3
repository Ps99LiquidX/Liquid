--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v81=0;local v82;while true do if (v81==0) then v82=v2(v0(v30,16));if v19 then local v104=0;local v105;while true do if (v104==1) then return v105;end if (v104==0) then v105=v5(v82,v19);v19=nil;v104=1;end end else return v82;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v83=0 -0 ;local v84;while true do if (v83==(0 -0)) then v84=(v31/((3 -(1 + 0))^(v32-(2 -1))))%((621 -(555 + 64))^(((v33-1) -(v32-(932 -(857 + 74)))) + (569 -(367 + 201)))) ;return v84-(v84%(928 -((304 -90) + (1778 -(68 + 997))))) ;end end else local v85=(1 + 1)^(v32-(1 + 0)) ;return (((v31%(v85 + v85))>=v85) and (878 -(282 + (1865 -(226 + 1044))))) or (1637 -(1523 + 114)) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35=0 -0 ;local v36;local v37;while true do if (v35==(117 -(32 + 85))) then v36,v37=v1(v16,v18,v18 + 2 + 0 );v18=v18 + 1 + (1 -0) ;v35=958 -(892 + (415 -(87 + 263))) ;end if (v35==(2 -1)) then return (v37 * (472 -216)) + v36 ;end end end local function v23() local v38=(0 + 0) -0 ;local v39;local v40;local v41;local v42;while true do if (v38==(180 -(67 + 113))) then v39,v40,v41,v42=v1(v16,v18,v18 + (955 -((1799 -(915 + 82)) + 150)) );v18=v18 + 3 + 1 ;v38=2 -1 ;end if (v38==1) then return (v42 * (30433252 -13656036)) + (v41 * 65536) + (v40 * (189 + 67)) + v39 ;end end end local function v24() local v43=v23();local v44=v23();local v45=2 -1 ;local v46=(v20(v44,1 + 0 ,26 -6 ) * (((2269 -(1020 + 60)) -(1069 + 118))^(1518 -(998 + 488)))) + v43 ;local v47=v20(v44,47 -26 ,67 -36 );local v48=((v20(v44,6 + 26 )==(1 -0)) and  -(1139 -(116 + (2445 -(630 + 793))))) or (4 -3) ;if (v47==(0 + 0)) then if (v46==(0 -0)) then return v48 * ((2680 -1889) -(368 + 423)) ;else v47=(2 + 1) -2 ;v45=18 -(10 + 8) ;end elseif (v47==((13759 -10853) -(814 + 45))) then return ((v46==(0 -0)) and (v48 * ((443 -(416 + 26))/(0 + 0)))) or (v48 * NaN) ;end return v8(v48,v47-((5013 -(760 + 987)) -2243) ) * (v45 + (v46/((1 + 1)^52))) ;end local function v25(v49) local v50=1913 -(1789 + 124) ;local v51;local v52;while true do if (v50==(767 -(745 + 21))) then v51=v3(v16,v18,(v18 + v49) -(1 + 0) );v18=v18 + v49 ;v50=(5 + 0) -3 ;end if (v50==(11 -8)) then return v6(v52);end if ((0 + 0)==v50) then v51=nil;if  not v49 then v49=v23();if (v49==0) then return "";end end v50=1 + 0 ;end if (v50==(1057 -(87 + 968))) then v52={};for v94=(8 -4) -3 , #v51 do v52[v94]=v2(v1(v3(v51,v94,v94)));end v50=3;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v53=(function() return 0 + 0 ;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();local v59=(function() return;end)();local v60=(function() return;end)();while true do if (v53~=(1823 -(301 + 1521))) then else local v89=(function() return 0;end)();local v90=(function() return;end)();while true do if ((0 -0)==v89) then v90=(function() return 0 + 0 ;end)();while true do if ((2 -0)==v90) then v53=(function() return 2;end)();break;end if ((2 -1)==v90) then v60=(function() return {};end)();for v110= #"~",v59 do local v111=(function() return 1700 -(1419 + 281) ;end)();local v112=(function() return;end)();local v113=(function() return;end)();local v114=(function() return;end)();while true do if ((1 -0)==v111) then v114=(function() return nil;end)();while true do if (v112~=0) then else local v128=(function() return 0;end)();while true do if (v128==(75 -(71 + 3))) then v112=(function() return 1;end)();break;end if (v128==(0 + 0)) then v113=(function() return v21();end)();v114=(function() return nil;end)();v128=(function() return 2 -1 ;end)();end end end if (v112==1) then if (v113== #"~") then v114=(function() return v21()~=(0 -0) ;end)();elseif (v113==(243 -(187 + 54))) then v114=(function() return v24();end)();elseif (v113~= #"19(") then else v114=(function() return v25();end)();end v60[v110]=(function() return v114;end)();break;end end break;end if (0==v111) then local v122=(function() return 0;end)();while true do if (v122==(781 -(162 + 618))) then v111=(function() return 1 + 0 ;end)();break;end if (v122==(0 + 0)) then v112=(function() return 0;end)();v113=(function() return nil;end)();v122=(function() return 1;end)();end end end end end v90=(function() return 2;end)();end if (v90~=(0 -0)) then else v58=(function() return {v55,v56,nil,v57};end)();v59=(function() return v23();end)();v90=(function() return 1;end)();end end break;end end end if (v53~=0) then else local v91=(function() return 0;end)();local v92=(function() return;end)();while true do if (v91==0) then v92=(function() return 0;end)();while true do if (v92~=0) then else v54=(function() return function(v115,v116,v117) local v118=(function() return 0;end)();while true do if (v118~=(0 -0)) then else local v123=(function() return 0;end)();local v124=(function() return;end)();while true do if ((0 + 0)~=v123) then else v124=(function() return 1636 -(1373 + 263) ;end)();while true do if (v124==0) then local v456=(function() return 1000 -(451 + 549) ;end)();while true do if (v456~=(0 + 0)) then else v115[v116-#":" ]=(function() return v117();end)();return v115,v116,v117;end end end end break;end end end end end;end)();v55=(function() return {};end)();v92=(function() return 1 -0 ;end)();end if (v92~=1) then else v56=(function() return {};end)();v57=(function() return {};end)();v92=(function() return 2;end)();end if (v92==2) then v53=(function() return 1 -0 ;end)();break;end end break;end end end if (v53~=(1386 -(746 + 638))) then else v58[ #"nil"]=(function() return v21();end)();for v96= #"}",v23() do local v97=(function() return 0 + 0 ;end)();local v98=(function() return;end)();while true do if (v97~=(0 -0)) then else v98=(function() return v21();end)();if (v20(v98, #"|", #":")~=(341 -(218 + 123))) then else local v106=(function() return 0;end)();local v107=(function() return;end)();local v108=(function() return;end)();local v109=(function() return;end)();while true do if (3~=v106) then else if (v20(v108, #"nil", #"gha")~= #"!") then else v109[ #"http"]=(function() return v60[v109[ #"asd1"]];end)();end v55[v96]=(function() return v109;end)();break;end if (v106==(1582 -(1535 + 46))) then local v120=(function() return 0 + 0 ;end)();while true do if ((0 + 0)==v120) then v109=(function() return {v22(),v22(),nil,nil};end)();if (v107==(560 -(306 + 254))) then local v311=(function() return 0 + 0 ;end)();while true do if (v311~=(0 -0)) then else v109[ #"nil"]=(function() return v22();end)();v109[ #"0313"]=(function() return v22();end)();break;end end elseif (v107== #">") then v109[ #"91("]=(function() return v23();end)();elseif (v107==(1469 -(899 + 568))) then v109[ #"91("]=(function() return v23() -((2 + 0)^16) ;end)();elseif (v107~= #"asd") then else local v493=(function() return 0 -0 ;end)();local v494=(function() return;end)();while true do if (v493==(603 -(268 + 335))) then v494=(function() return 290 -(60 + 230) ;end)();while true do if (v494==0) then v109[ #"91("]=(function() return v23() -((574 -(426 + 146))^(2 + 14)) ;end)();v109[ #"0313"]=(function() return v22();end)();break;end end break;end end end v120=(function() return 1457 -(282 + 1174) ;end)();end if (v120~=(812 -(569 + 242))) then else v106=(function() return 5 -3 ;end)();break;end end end if (2==v106) then if (v20(v108, #".", #",")~= #"<") then else v109[2]=(function() return v60[v109[2]];end)();end if (v20(v108,1 + 1 ,2)~= #".") then else v109[ #"nil"]=(function() return v60[v109[ #"xnx"]];end)();end v106=(function() return 3;end)();end if (0~=v106) then else local v121=(function() return 0;end)();while true do if (v121~=1) then else v106=(function() return 1025 -(706 + 318) ;end)();break;end if (v121==0) then v107=(function() return v20(v98,2, #"asd");end)();v108=(function() return v20(v98, #"xnxx",6);end)();v121=(function() return 1252 -(721 + 530) ;end)();end end end end end break;end end end for v99= #".",v23() do v56,v99,v28=(function() return v54(v56,v99,v28);end)();end return v58;end end end local function v29(v61,v62,v63) local v64=v61[(3898 -2626) -(945 + 326) ];local v65=v61[2];local v66=v61[7 -4 ];return function(...) local v67=v64;local v68=v65;local v69=v66;local v70=v27;local v71=1 + 0 ;local v72= -(701 -((521 -250) + 429));local v73={};local v74={...};local v75=v12("#",...) -1 ;local v76={};local v77={};for v86=0,v75 do if (v86>=v69) then v73[v86-v69 ]=v74[v86 + 1 ];else v77[v86]=v74[v86 + ((2400 -(503 + 396)) -(1408 + 92)) ];end end local v78=(v75-v69) + (1087 -(461 + 625)) ;local v79;local v80;while true do v79=v67[v71];v80=v79[1289 -(993 + 295) ];if (v80<=(4 + 61)) then if ((4927>=2303) and (v80<=(1203 -(418 + 753)))) then if (v80<=((187 -(92 + 89)) + 9)) then if (v80<=7) then if (v80<=(1 + 2)) then if (v80<=(1 + 0)) then if (v80==(0 + 0)) then local v130=v79[531 -(406 + (237 -114)) ];do return v13(v77,v130,v130 + v79[1772 -(1749 + 20) ] );end elseif (v79[1 + 1 ]==v77[v79[1326 -(1249 + 73) ]]) then v71=v71 + 1 + 0 ;else v71=v79[1148 -(466 + 679) ];end elseif ((3462>=1032) and (v80>(4 -2))) then local v131=v79[5 -3 ];local v132=v79[1904 -(106 + 1794) ];local v133=v131 + 1 + 1 ;local v134={v77[v131](v77[v131 + (2 -1) ],v77[v133])};for v312=2 -1 ,v132 do v77[v133 + v312 ]=v134[v312];end local v135=v134[115 -(4 + 110) ];if (v135 or (1077>=2011)) then v77[v133]=v135;v71=v79[587 -(57 + 527) ];else v71=v71 + ((733 + 695) -(41 + 1386)) ;end else v77[v79[105 -(17 + 86) ]]=v77[v79[3]] * v79[3 + 1 + 0 ] ;end elseif ((1543<2415) and (v80<=(11 -(23 -17)))) then if ((v80>(11 -7)) or (4444<2015)) then if (v77[v79[168 -(122 + 44) ]]~=v77[v79[6 -2 ]]) then v71=v71 + (3 -2) ;else v71=v79[3 + 0 ];end else for v315=v79[2],v79[3] do v77[v315]=nil;end end elseif ((v80>(1 + 5)) or (4200==2332)) then if (v79[3 -1 ]<v77[v79[69 -(30 + 35) ]]) then v71=v79[3 + 0 ];else v71=v71 + ((173 + 1085) -(1043 + 214)) ;end else local v137=0 -(0 -0) ;while true do if (v137==(1212 -(282 + 41 + 425 + 464))) then v77[v79[5 -3 ]]=v79[583 -(361 + 219) ]~=0 ;v71=v71 + (321 -(53 + (813 -546))) ;break;end end end elseif ((v80<=(3 + 8)) or (1278>=1316)) then if ((1082==1082) and (v80<=(422 -(15 + 398)))) then if ((1328<=4878) and (v80>(990 -(18 + 964)))) then local v138=v79[11 -8 ];local v139=v77[v138];for v317=v138 + 1 + 0 + 0 ,v79[3 + 1 ] do v139=v139   .. v77[v317] ;end v77[v79[852 -(20 + 830) ]]=v139;else local v141=v79[2 + 0 ];local v142={v77[v141](v13(v77,v141 + (1 -0) ,v72))};local v143=0 + 0 ;for v318=v141,v79[742 -(542 + 196) ] do local v319=0 -0 ;while true do if (v319==0) then v143=v143 + 1 ;v77[v318]=v142[v143];break;end end end end elseif (v80>(3 + 7)) then v77[v79[2 + 0 ]]=v63[v79[3]];else v77[v79[1 + 1 ]]=v77[v79[7 -4 ]][v79[9 -(1249 -(485 + 759)) ]];end elseif (v80<=(1564 -(1126 + 425))) then if (v80==(417 -(118 + 287))) then local v148=v79[7 -5 ];v72=(v148 + v78) -(1122 -(118 + 1003)) ;for v320=v148,v72 do local v321=v73[v320-v148 ];v77[v320]=v321;end else local v149=v79[5 -3 ];v77[v149](v77[v149 + (378 -(142 + 235)) ]);end elseif ((4087>=1355) and (v80==(63 -49))) then v77[v79[1 + 1 ]]=v77[v79[3]] * v77[v79[4]] ;elseif (v79[979 -(553 + 424) ]<v77[v79[7 -3 ]]) then v71=v71 + (2 -1) + 0 ;else v71=v79[(1192 -(442 + 747)) + 0 ];end elseif (v80<=(14 + 9)) then if (v80<=(9 + 10)) then if ((v80<=17) or (590>4650)) then if (v80>16) then do return v77[v79[2 + 0 ]];end else v77[v79[4 -2 ]]=v77[v79[7 -(1139 -(832 + 303)) ]][v77[v79[8 -4 ]]];end elseif ((v80>18) or (3774<=3667)) then v77[v79[1 + 1 ]]=v77[v79[3]][v79[(965 -(88 + 858)) -15 ]];elseif (v77[v79[755 -(239 + 514) ]]~=v79[2 + 2 ]) then v71=v71 + (1330 -(797 + 532)) ;else v71=v79[3 + 0 + 0 ];end elseif (v80<=(8 + 13)) then if (v80>(47 -27)) then v77[v79[1204 -(373 + 829) ]]={};else local v156=v79[733 -(394 + 82 + 255) ];local v157={v77[v156](v77[v156 + (1131 -(369 + 761)) ])};local v158=0 + 0 + 0 ;for v323=v156,v79[(795 -(766 + 23)) -2 ] do local v324=(0 -0) -0 ;while true do if ((1270<2146) and (v324==(238 -(64 + 174)))) then v158=v158 + 1 + 0 ;v77[v323]=v157[v158];break;end end end end elseif (v80==22) then v77[v79[2 -0 ]]= #v77[v79[339 -(144 + 192) ]];else local v160=v79[2];v77[v160]=v77[v160](v13(v77,v160 + (217 -(42 + (237 -63))) ,v79[(7 -4) + 0 ]));end elseif (v80<=27) then if (v80<=(21 + 4)) then if ((4563>=56) and (v80>(11 + 13))) then v77[v79[1506 -(363 + 1141) ]]=v62[v79[1583 -(1183 + 397) ]];else do return;end end elseif (v80>26) then local v164=0 -0 ;local v165;local v166;local v167;while true do if (v164==(2 -1)) then v167=v79[1076 -(1036 + 37) ];for v463=1 + 0 ,v167 do v166[v463]=v77[v165 + v463 ];end break;end if (v164==(0 + 0)) then v165=v79[1977 -(1913 + 62) ];v166=v77[v165];v164=1;end end else v77[v79[2]]=v29(v68[v79[2 + 1 ]],nil,v63);end elseif (v80<=(76 -47)) then if ((v80==(1961 -(565 + 1368))) or (446==622)) then if (v77[v79[2 + 0 ]]<=v77[v79[15 -11 ]]) then v71=v71 + (1662 -(1477 + (357 -173))) ;else v71=v79[3 + 0 ];end else local v169=0;local v170;local v171;while true do if ((2069>1009) and (v169==(1 -0))) then v77[v170 + 1 + 0 ]=v171;v77[v170]=v171[v79[860 -((2044 -(641 + 839)) + 292) ]];break;end if (v169==(0 -0)) then v170=v79[(918 -(910 + 3)) -3 ];v171=v77[v79[307 -(244 + 60) ]];v169=1 + (0 -0) ;end end end elseif (v80<=(506 -(41 + 435))) then v77[v79[1003 -((2622 -(1466 + 218)) + 63) ]]=v79[3];elseif ((12<4208) and (v80>(24 + 7))) then v77[v79[2]]=v77[v79[1128 -(936 + 87 + 102) ]] + v79[2 + 2 ] ;else v77[v79[1615 -(1565 + 48) ]]=v77[v79[3]] -v77[v79[3 + (1149 -(556 + 592)) ]] ;end elseif (v80<=48) then if ((v80<=(1178 -(782 + 356))) or (2990<=2980)) then if (v80<=36) then if (v80<=(301 -(176 + 91))) then if (v80>33) then v77[v79[4 -2 ]]=v77[v79[4 -1 ]]/v79[1096 -(975 + 117) ] ;elseif (v77[v79[1877 -(157 + 1718) ]]==v79[4 + 0 ]) then v71=v71 + (3 -(1 + 1)) ;else v71=v79[10 -7 ];end elseif ((v80>(1053 -(697 + 321))) or (2575>=4275)) then local v175=0 -(808 -(329 + 479)) ;local v176;local v177;local v178;while true do if (v175==(1 -0)) then v178=(854 -(174 + 680)) -0 ;for v466=v176,v79[2 + 2 ] do local v467=0 -0 ;while true do if ((0 -0)==v467) then v178=v178 + 1 ;v77[v466]=v177[v178];break;end end end break;end if (v175==(1227 -(322 + 905))) then v176=v79[2];v177={v77[v176](v13(v77,v176 + (1190 -(449 + 740)) ,v72))};v175=873 -(826 + 46) ;end end elseif v77[v79[2]] then v71=v71 + ((3257 -2309) -(245 + 702)) ;else v71=v79[(18 -9) -6 ];end elseif (v80<=(13 + 25)) then if ((v80==(1935 -(186 + 74 + 1638))) or (3626<=1306)) then v77[v79[442 -(382 + 58) ]]= #v77[v79[9 -6 ]];else local v180=v79[2];do return v77[v180](v13(v77,v180 + 1 + 0 ,v72));end end elseif ((1368<3780) and (v80==(80 -41))) then v63[v79[742 -(396 + 343) ]]=v77[v79[5 -(1 + 2) ]];elseif (v77[v79[2]]<v77[v79[1209 -(902 + 303) ]]) then v71=v71 + (1 -0) ;else v71=v79[6 -3 ];end elseif (v80<=((1481 -(29 + 1448)) + 40)) then if (v80<=(1732 -(1121 + 569))) then if (v80>(255 -(22 + 192))) then v71=v79[(2075 -(135 + 1254)) -(483 + 200) ];else local v184=v79[1465 -(1404 + 59) ];v77[v184]=v77[v184](v77[v184 + 1 ]);end elseif ((v80>(117 -74)) or (3169==2273)) then v77[v79[2 -0 ]]=v62[v79[768 -((1762 -1294) + 297) ]];else local v188=v79[564 -(334 + 228) ];local v189=v77[v188];for v325=v188 + (3 -2) ,v79[6 -(13 -10) ] do v7(v189,v77[v325]);end end elseif (v80<=(83 -37)) then if ((2481<=3279) and (v80>(13 + 32))) then local v190=236 -(141 + 95) ;local v191;while true do if (0==v190) then v191=v79[2 + 0 ];do return v77[v191](v13(v77,v191 + 1 ,v79[7 -4 ]));end break;end end else local v192=v79[4 -2 ];v77[v192]=v77[v192](v13(v77,v192 + 1 + 0 ,v72));end elseif (v80>((86 + 42) -81)) then v62[v79[3 + 0 ]]=v77[v79[2 + 0 ]];else v63[v79[4 -1 ]]=v77[v79[2 + (1527 -(389 + 1138)) ]];end elseif ((v80<=(219 -(92 + (645 -(102 + 472))))) or (1063<=877)) then if ((2314==2314) and (v80<=52)) then if (v80<=50) then if ((924>=477) and (v80==(25 + 24))) then v77[v79[2 -0 ]]();else v77[v79[767 -(574 + 191) ]][v79[3 + 0 + 0 ]]=v77[v79[9 -5 ]];end elseif (v80>(27 + 24)) then v77[v79[851 -(254 + 595) ]]=v77[v79[3]] + v77[v79[130 -(55 + 71) ]] ;else v77[v79[2 -0 ]]=v77[v79[1793 -(573 + 1217) ]] -v77[v79[10 -6 ]] ;end elseif ((1813<=3778) and (v80<=(5 + 49))) then if (v80>(85 -(18 + 14))) then local v202=939 -(666 + 48 + (1770 -(320 + 1225))) ;local v203;while true do if (v202==(0 -0)) then v203=v79[2];v77[v203](v77[v203 + (1 -0) ]);break;end end else local v204=0;local v205;while true do if (v204==0) then v205=v79[1 + 1 ];do return v77[v205](v13(v77,v205 + (1 -0) ,v79[809 -(118 + 688) ]));end break;end end end elseif (v80==(103 -(25 + 23))) then if (v79[1 + (1 -0) ]<=v77[v79[3 + 1 ]]) then v71=v71 + (1887 -(927 + 959)) ;else v71=v79[(1474 -(157 + 1307)) -7 ];end else v77[v79[2]][v77[v79[735 -(16 + (2575 -(821 + 1038))) ]]]=v77[v79[7 -3 ]];end elseif ((4150==4150) and (v80<=(157 -(11 + 86)))) then if ((432<=3007) and (v80<=(141 -83))) then if (v80==(342 -(175 + 110))) then if  not v77[v79[(9 -5) -2 ]] then v71=v71 + (4 -3) ;else v71=v79[1799 -(503 + 1293) ];end elseif ((v77[v79[5 -(1 + 2) ]]<v77[v79[3 + 1 ]]) or (408>2721)) then v71=v71 + (1062 -(810 + 251)) ;else v71=v79[3 + 0 ];end elseif ((v80==(19 + (71 -31))) or (3418<2497)) then v77[v79[2 + 0 ]][v77[v79[3]]]=v77[v79[537 -(43 + 490) ]];else local v210=v79[735 -(711 + 9 + 13) ];v77[v210](v13(v77,v210 + 1 ,v79[3]));end elseif (v80<=62) then if (v80>61) then local v211=0 -0 ;local v212;local v213;local v214;while true do if (v211==(2 -1)) then v214=859 -(240 + 619) ;for v468=v212,v79[4] do v214=v214 + 1 + 0 ;v77[v468]=v213[v214];end break;end if (v211==(0 -0)) then v212=v79[2];v213={v77[v212](v13(v77,v212 + (1745 -(1344 + 400)) ,v79[408 -(255 + 150) ]))};v211=(1027 -(834 + 192)) + 0 + 0 ;end end else local v215=v79[2 + 0 ];v77[v215]=v77[v215](v77[v215 + (4 -(1 + 2)) ]);end elseif ((1735<2169) and (v80<=(203 -140))) then v77[v79[1741 -(404 + 1335) ]]=v29(v68[v79[409 -(183 + 5 + 218) ]],nil,v63);elseif (v80>(77 -13)) then v71=v79[2 + 1 ];else v77[v79[1 + 1 ]]={};end elseif ((3890>=3262) and (v80<=98)) then if ((v80<=81) or (4356>=4649)) then if (v80<=(410 -(10 + 327))) then if (v80<=69) then if (v80<=(47 + 20)) then if (v80>((625 -221) -(118 + (524 -(300 + 4))))) then if ((3904==3904) and (v77[v79[1 + 1 ]]==v77[v79[453 -(108 + 341) ]])) then v71=v71 + 1 ;else v71=v79[2 + 1 ];end elseif (v77[v79[(3 + 5) -6 ]]<v77[v79[(3918 -2421) -(711 + 782) ]]) then v71=v79[5 -2 ];else v71=v71 + 1 ;end elseif (v80>((899 -(112 + 250)) -(270 + 199))) then local v218=0;local v219;while true do if (v218==(0 + 0)) then v219=v79[(726 + 1095) -(580 + 1239) ];v77[v219]=v77[v219](v13(v77,v219 + ((4 -2) -1) ,v79[3 + 0 ]));break;end end else v77[v79[1 + 1 ]]=v79[2 + 0 + 1 ]~=(0 -0) ;v71=v71 + 1 ;end elseif (v80<=(24 + 21 + 26)) then if ((v80==(1237 -(645 + 522))) or (2860>=3789)) then v77[v79[2]]=v79[1793 -(1010 + 780) ]^v77[v79[4 + 0 ]] ;else do return v77[v79[2]]();end end elseif (v80==(342 -270)) then local v222=v77[v79[(9 + 2) -(4 + 3) ]];if ( not v222 or (1086>4449)) then v71=v71 + 1 ;else v77[v79[2]]=v222;v71=v79[1839 -(1045 + 791) ];end else v77[v79[4 -2 ]]=v79[4 -1 ]^v77[v79[4]] ;end elseif ((4981>546) and (v80<=(582 -(351 + 154)))) then if (v80<=(1649 -(1281 + 293))) then if ((v80==(340 -(28 + 238))) or (2366<=8)) then local v224=v68[v79[3]];local v225;local v226={};v225=v10({},{__index=function(v326,v327) local v328=v226[v327];return v328[2 -1 ][v328[1561 -(1381 + 178) ]];end,__newindex=function(v329,v330,v331) local v332=v226[v330];v332[1][v332[2 + 0 ]]=v331;end});for v334=1 + 0 ,v79[(1418 -(1001 + 413)) + 0 ] do local v335=0 + 0 ;local v336;while true do if ((0==v335) or (2590==2864)) then v71=v71 + (3 -2) ;v336=v67[v71];v335=1 + 0 ;end if (v335==((1050 -579) -(381 + 89))) then if (v336[1 + 0 ]==111) then v226[v334-(1 + 0) ]={v77,v336[1159 -(1074 + 82) ]};else v226[v334-(1 -0) ]={v62,v336[3]};end v76[ #v76 + 1 ]=v226;break;end end end v77[v79[1457 -((2949 -1959) + 465) ]]=v29(v224,v225,v63);else v77[v79[1 + 1 ]][v79[3]]=v79[2 + 2 ];end elseif (v80>(74 + 2)) then local v230=0 -0 ;local v231;local v232;local v233;local v234;while true do if ((v230==(1726 -(1668 + 58))) or (2624>4149)) then v231=v79[2];v232,v233=v70(v77[v231](v13(v77,v231 + ((1229 -(512 + 90)) -(512 + 114)) ,v79[7 -4 ])));v230=1;end if (v230==((1909 -(1665 + 241)) -1)) then for v473=v231,v72 do v234=v234 + (3 -2) ;v77[v473]=v232[v234];end break;end if (v230==(718 -(373 + 344))) then v72=(v233 + v231) -1 ;v234=0;v230=1 + 1 ;end end else do return v77[v79[2]]();end end elseif (v80<=79) then if (v80>(15 + 63)) then if ( not v77[v79[1 + 1 ]] or (2618>=4495)) then v71=v71 + 1 ;else v71=v79[3];end else local v235=v79[2 + 0 ];v77[v235]=v77[v235]();end elseif ((v80>(269 -189)) or (2485>=3131)) then do return v77[v79[1996 -(109 + 1885) ]];end else v77[v79[1471 -(1269 + 200) ]]=v77[v79[1 + 2 ]][v77[v79[7 -3 ]]];end elseif ((v80<=(904 -((258 -160) + 717))) or (2804<=2785)) then if ((v80<=(911 -(802 + 24))) or (4571==3415)) then if (v80<=((239 -97) -59)) then if (v80==82) then local v239=0 -0 ;local v240;while true do if (v239==(0 + 0)) then v240=v79[2 + 0 ];do return v13(v77,v240,v72);end break;end end else local v241=v79[1 + 1 ];local v242={};for v337=1 + 0 , #v76 do local v338=v76[v337];for v395=0 -0 , #v338 do local v396=0 -0 ;local v397;local v398;local v399;while true do if ((1 + 0)==v396) then v399=v397[1 + 1 ];if ((v398==v77) and (v399>=v241)) then v242[v399]=v398[v399];v397[1]=v242;end break;end if (v396==0) then v397=v338[v395];v398=v397[1 + 0 ];v396=(1100 -(35 + 1064)) + 0 ;end end end end end elseif (v80>(40 + 33 + 11)) then local v243=1433 -(797 + 636) ;local v244;while true do if (0==v243) then v244=v79[9 -7 ];v77[v244]=v77[v244](v13(v77,v244 + (1620 -(1427 + 192)) ,v72));break;end end else local v245=0 + 0 ;local v246;local v247;local v248;while true do if ((v245==(2 -1)) or (4441>4787)) then v248=0 + 0 ;for v476=v246,v79[2 + 2 ] do local v477=326 -(192 + 134) ;while true do if (v477==(1276 -(316 + 960))) then v248=v248 + 1 ;v77[v476]=v247[v248];break;end end end break;end if (v245==(0 + 0)) then v246=v79[2];v247={v77[v246](v77[v246 + 1 ])};v245=1 + 0 ;end end end elseif (v80<=(332 -245)) then if (v80==(637 -(83 + 468))) then v77[v79[2]][v79[1809 -(1202 + 604) ]]=v77[v79[18 -14 ]];else local v251=0 -0 ;local v252;while true do if (v251==0) then v252=v79[2];do return v13(v77,v252,v72);end break;end end end elseif ((1920==1920) and (v80==(243 -155))) then if v77[v79[2]] then v71=v71 + (326 -(45 + 280)) ;else v71=v79[3 + 0 ];end else do return;end end elseif (v80<=(82 + 11)) then if (v80<=(34 + 57)) then if ((v80>(50 + 40)) or (647==4477)) then v77[v79[1 + 1 ]]=v79[6 -3 ];else local v255=v79[2];local v256,v257=v70(v77[v255](v77[v255 + 1 ]));v72=(v257 + v255) -1 ;local v258=0 -0 ;for v339=v255,v72 do local v340=1911 -(340 + 7 + 1564) ;while true do if (v340==(0 + 0)) then v258=v258 + (1773 -(1733 + (1275 -(298 + 938)))) ;v77[v339]=v256[v258];break;end end end end elseif (v80==(252 -160)) then local v259=v79[(2295 -(233 + 1026)) -(125 + 909) ];v77[v259](v13(v77,v259 + (1949 -((2762 -(636 + 1030)) + 852)) ,v72));else local v260=v79[2 + 1 ];local v261=v77[v260];for v341=v260 + (1 -0) ,v79[4 + 0 ] do v261=v261   .. v77[v341] ;end v77[v79[514 -(409 + 103) ]]=v261;end elseif (v80<=(331 -(24 + 22 + 190))) then if (v80>(189 -(51 + 44))) then if (v79[1 + 1 ]==v77[v79[1321 -(1089 + 25 + 203) ]]) then v71=v71 + (727 -(228 + 498)) ;else v71=v79[1 + 2 ];end else v77[v79[1 + 1 + 0 ]]();end elseif (v80<=(759 -(174 + 489))) then if (v77[v79[2]]<v77[v79[10 -6 ]]) then v71=v79[1908 -(830 + 1075) ];else v71=v71 + (525 -(303 + 221)) ;end elseif (v80>(1366 -(231 + 1038))) then v77[v79[2]]=v77[v79[3 + 0 ]] * v77[v79[1166 -(171 + 991) ]] ;else v77[v79[8 -6 ]]=v77[v79[3]]/v79[4] ;end elseif (v80<=(305 -191)) then if ((3819==3819) and (v80<=(264 -158))) then if (v80<=102) then if (v80<=(81 + 19)) then if ((v80>99) or (1466>4360)) then v77[v79[6 -4 ]]=v77[v79[8 -5 ]] * v79[5 -1 ] ;elseif ((v77[v79[6 -4 ]]~=v79[1252 -(111 + 1137) ]) or (14>994)) then v71=v71 + 1 ;else v71=v79[(11 + 150) -(91 + 67) ];end elseif (v80==101) then local v264=v77[v79[11 -7 ]];if ((401<=734) and  not v264) then v71=v71 + (222 -(55 + 166)) + 0 ;else local v406=523 -(423 + 20 + 80) ;while true do if ((v406==(0 + 0 + 0)) or (2167>=3426)) then v77[v79[5 -3 ]]=v264;v71=v79[3];break;end end end else for v342=v79[7 -5 ],v79[2 + 1 ] do v77[v342]=nil;end end elseif (v80<=(875 -((623 -(36 + 261)) + (777 -332)))) then if (v80==(449 -346)) then if (v77[v79[4 -2 ]]~=v77[v79[9 -(1373 -(34 + 1334)) ]]) then v71=v71 + (712 -(530 + 181)) ;else v71=v79[884 -(614 + 103 + 164) ];end else local v265=v79[34 -(19 + 11 + 2) ];local v266=v77[v265];local v267=v79[4 -1 ];for v344=1,v267 do v266[v344]=v77[v265 + v344 ];end end elseif (v80>(244 -139)) then if (v77[v79[5 -3 ]]==v77[v79[2 + (1285 -(1035 + 248)) ]]) then v71=v71 + (1 -0) ;else v71=v79[6 -(24 -(20 + 1)) ];end else v77[v79[1814 -(1293 + 519) ]]=v77[v79[5 -2 ]] + v77[v79[(5 + 4) -5 ]] ;end elseif (v80<=110) then if (v80<=108) then if (v80>(204 -97)) then local v269=v79[8 -6 ];v77[v269](v13(v77,v269 + (2 -1) ,v72));else local v270=v79[2 + 0 ];local v271=v79[1 + (322 -(134 + 185)) ];local v272=v270 + (4 -2) ;local v273={v77[v270](v77[v270 + 1 ],v77[v272])};for v347=1 + 0 ,v271 do v77[v272 + v347 ]=v273[v347];end local v274=v273[1 + 0 ];if ((764<3285) and v274) then v77[v272]=v274;v71=v79[3];else v71=v71 + 1 + 0 ;end end elseif (v80==(1205 -(709 + (1520 -(549 + 584))))) then v77[v79[687 -(314 + 371) ]]=v79[3]~=0 ;elseif (v79[2]<v77[v79[4]]) then v71=v71 + (1859 -(673 + 1185)) ;else v71=v79[8 -(17 -12) ];end elseif ((2499==2499) and (v80<=(359 -247))) then if ((v80==(182 -71)) or (692>=4933)) then v77[v79[2]]=v77[v79[3 + 0 ]];else local v278=v79[2];v77[v278](v13(v77,v278 + 1 + 0 ,v79[(971 -(478 + 490)) -0 ]));end elseif (v80==113) then local v279=v79[1 + 1 ];v72=(v279 + v78) -(1 -0) ;for v350=v279,v72 do local v351=v73[v350-v279 ];v77[v350]=v351;end else local v280=v79[2];v77[v280]=v77[v280]();end elseif (v80<=(239 -117)) then if (v80<=118) then if (v80<=(1996 -(446 + 760 + 674))) then if ((v80==(1287 -(786 + 386))) or (3154<=2260)) then local v282=1283 -(1040 + 243) ;local v283;local v284;while true do if (v282==(2 -1)) then v77[v283 + 1 ]=v284;v77[v283]=v284[v79[1851 -(559 + 1288) ]];break;end if (v282==0) then v283=v79[1933 -(609 + 1322) ];v284=v77[v79[3]];v282=1;end end else local v285=(1470 -1016) -(13 + 441) ;local v286;local v287;local v288;while true do if ((v285==(3 -2)) or (2637>3149)) then v288=0;for v480=v286,v79[4] do v288=v288 + (2 -1) ;v77[v480]=v287[v288];end break;end if (v285==(0 -0)) then v286=v79[2];v287={v77[v286](v13(v77,v286 + (1380 -(1055 + 324)) ,v79[10 -7 ]))};v285=1 + 0 ;end end end elseif ((v80==(52 + 65)) or (3992<2407)) then v77[v79[5 -(1343 -(1093 + 247)) ]][v79[2 + 0 + 1 ]]=v79[4];else local v291=v79[3 -1 ];local v292,v293=v70(v77[v291](v13(v77,v291 + 1 + 0 ,v79[2 + 1 ])));v72=(v293 + v291) -(1 + 0 + 0) ;local v294=0 + 0 ;for v353=v291,v72 do v294=v294 + 1 + (0 -0) ;v77[v353]=v292[v294];end end elseif ((v80<=((1876 -1323) -(153 + 280))) or (2902>4859)) then if (v80==(343 -224)) then v77[v79[2]]=v79[3 + 0 ]~=0 ;else local v296=0 + 0 ;local v297;while true do if ((1679<4359) and (v296==(0 + 0))) then v297=v79[2 + 0 ];do return v77[v297](v13(v77,v297 + 1 + 0 ,v72));end break;end end end elseif (v80==(183 -62)) then if ((1913<4670) and (v77[v79[2 + 0 ]]==v79[671 -(89 + 578) ])) then v71=v71 + 1 ;else v71=v79[3];end else v62[v79[3 + 0 ]]=v77[v79[2]];end elseif (v80<=126) then if (v80<=124) then if (v80>(255 -132)) then if (v79[1051 -((1627 -1055) + (1198 -721)) ]<=v77[v79[4]]) then v71=v71 + 1 + 0 ;else v71=v79[2 + 1 ];end else local v300=v68[v79[1 + 1 + 1 ]];local v301;local v302={};v301=v10({},{__index=function(v356,v357) local v358=v302[v357];return v358[87 -(84 + 2) ][v358[2 -0 ]];end,__newindex=function(v359,v360,v361) local v362=v302[v360];v362[1 + 0 ][v362[844 -(497 + 345) ]]=v361;end});for v364=1,v79[1 + 3 ] do v71=v71 + 1 ;local v365=v67[v71];if (v365[1]==(19 + 92)) then v302[v364-1 ]={v77,v365[6 -3 ]};else v302[v364-(1 + 0) ]={v62,v365[7 -4 ]};end v76[ #v76 + 1 + 0 ]=v302;end v77[v79[491 -((1575 -1118) + 32) ]]=v29(v300,v301,v63);end elseif (v80>(41 + 13 + 71)) then local v304=v79[1404 -(832 + 570) ];local v305={};for v367=(2 -1) + 0 , #v76 do local v368=v76[v367];for v414=0 + 0 , #v368 do local v415=v368[v414];local v416=v415[3 -2 ];local v417=v415[1 + 1 ];if ((v416==v77) and (v417>=v304)) then local v483=796 -(588 + 208) ;while true do if (v483==((688 -(364 + 324)) -0)) then v305[v417]=v416[v417];v415[1801 -(884 + 916) ]=v305;break;end end end end end else local v306=v79[3 -1 ];local v307,v308=v70(v77[v306](v77[v306 + 1 + 0 ]));v72=(v308 + v306) -1 ;local v309=653 -(232 + (1153 -732)) ;for v369=v306,v72 do v309=v309 + (1890 -(1569 + 320)) ;v77[v369]=v307[v309];end end elseif (v80<=((76 -44) + 96)) then if (v80==127) then if (v77[v79[2]]<=v77[v79[1 + 3 ]]) then v71=v71 + (3 -2) ;else v71=v79[3];end elseif (v79[2]<v77[v79[2 + 2 ]]) then v71=v79[608 -((1322 -1006) + 289) ];else v71=v71 + (2 -1) ;end elseif (v80<=129) then v77[v79[1 + 1 ]]=v77[v79[1456 -(666 + 787) ]] + v79[429 -(360 + 65) ] ;elseif (v80>(122 + 8)) then v77[v79[2]]=v63[v79[257 -(79 + (280 -105)) ]];else v77[v79[(5 -3) -0 ]]=v77[v79[3]];end v71=v71 + 1 + 0 ;end end;end return v29(v28(),{},v17)(...);end return v15("LOL!",v9(),...);
