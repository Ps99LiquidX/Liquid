--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v87=0;while true do if (v87==0) then v19=v0(v3(v30,1,1));return "";end end else local v88=v2(v0(v30,16));if v19 then local v110=v5(v88,v19);v19=nil;return v110;else return v88;end end end);local function v20(v31,v32,v33) if v33 then local v89=0;local v90;while true do if (v89==(0 -(0 -0))) then v90=(v31/(((5 + 0) -3)^(v32-(1 -0))))%((4 -2)^(((v33-(620 -(555 + 64))) -(v32-(932 -(857 + 74)))) + ((1634 -(68 + 997)) -(367 + 201)))) ;return v90-(v90%(928 -(214 + 713))) ;end end else local v91=(1 + (1271 -(226 + 1044)))^(v32-(1 + 0)) ;return (((v31%(v91 + v91))>=v91) and (878 -(282 + 595))) or ((7128 -5491) -(1523 + (231 -(32 + 85)))) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + 1 + 1 );v18=v18 + 2 + 0 ;return (v36 * (610 -354)) + v35 ;end local function v23() local v37=0 -0 ;local v38;local v39;local v40;local v41;while true do if (v37==(1 -0)) then return (v41 * (16777566 -(87 + 263))) + (v40 * (65716 -(67 + 113))) + (v39 * 256) + v38 ;end if (v37==(0 + (0 -0))) then v38,v39,v40,v41=v1(v16,v18,v18 + (7 -(956 -(802 + 150))) );v18=v18 + 3 + 1 ;v37=3 -2 ;end end end local function v24() local v42=0 -0 ;local v43;local v44;local v45;local v46;local v47;local v48;while true do if (v42==(1 + 0)) then v45=(1770 -(201 + 571)) -(915 + (341 -259)) ;v46=(v20(v44,2 -(1 + 0) ,12 + 8 ) * ((2 -(0 -0))^(1219 -(1069 + 118)))) + v43 ;v42=4 -2 ;end if (v42==(6 -3)) then if (v47==(0 + 0)) then if (v46==((0 -0) -(1138 -(116 + 1022)))) then return v48 * (0 + 0) ;else v47=792 -(368 + 423) ;v45=0 -0 ;end elseif (v47==(2065 -(10 + 8))) then return ((v46==(0 -0)) and (v48 * (1/(442 -(416 + (885 -(814 + 45))))))) or (v48 * NaN) ;end return v8(v48,v47-1023 ) * (v45 + (v46/((6 -4)^(23 + 29)))) ;end if (v42==(3 -1)) then v47=v20(v44,21,469 -(145 + 293) );v48=((v20(v44,462 -(44 + 386) )==1) and  -(1487 -(998 + 488))) or 1 ;v42=1 + 2 ;end if (v42==0) then v43=v23();v44=v23();v42=1 + 0 ;end end end local function v25(v49) local v50;if  not v49 then v49=v23();if (v49==(0 -0)) then return "";end end v50=v3(v16,v18,(v18 + v49) -(1 + 0) );v18=v18 + v49 ;local v51={};for v67=1, #v50 do v51[v67]=v2(v1(v3(v50,v67,v67)));end return v6(v51);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=(function() return function(v92,v93,v94,v95,v96,v97,v98,v99) local v92=(function() return 0;end)();local v93=(function() return;end)();local v95=(function() return;end)();while true do if (v92==(1721 -(345 + 1376))) then local v115=(function() return 688 -(198 + 490) ;end)();while true do if (v115==(0 -0)) then v93=(function() return v94();end)();v95=(function() return nil;end)();v115=(function() return 1;end)();end if ((2 -1)~=v115) then else v92=(function() return  #"\\";end)();break;end end end if (v92~= #"\\") then else if (v93== #"!") then v95=(function() return v94()~=(1206 -(696 + 510)) ;end)();elseif (v93==(3 -1)) then v95=(function() return v96();end)();elseif (v93~= #"xxx") then else v95=(function() return v97();end)();end v98[v99]=(function() return v95;end)();break;end end return v92,v93,v94,v95,v96,v97,v98,v99;end;end)();local v53=(function() return function(v100,v101,v102) local v103=(function() return 1262 -(1091 + 171) ;end)();while true do if (v103~=(0 + 0)) then else local v117=(function() return 0;end)();local v118=(function() return;end)();while true do if (v117~=(0 -0)) then else v118=(function() return 0;end)();while true do if (0~=v118) then else local v127=(function() return 0;end)();while true do if (v127==(0 -0)) then v100[v101-#"~" ]=(function() return v102();end)();return v100,v101,v102;end end end end break;end end end end end;end)();local v54=(function() return {};end)();local v55=(function() return {};end)();local v56=(function() return {};end)();local v57=(function() return {v54,v55,nil,v56};end)();local v58=(function() return v23();end)();local v59=(function() return {};end)();for v69= #"~",v58 do FlatIdent_C460,Type,v21,Cons,v24,v25,v59,v69=(function() return v52(FlatIdent_C460,Type,v21,Cons,v24,v25,v59,v69);end)();end v57[ #"asd"]=(function() return v21();end)();for v70= #">",v23() do local v71=(function() return v21();end)();if (v20(v71, #"|", #"~")~=(374 -(123 + 251))) then else local v106=(function() return 0;end)();local v107=(function() return;end)();local v108=(function() return;end)();local v109=(function() return;end)();while true do if (v106==(4 -3)) then local v121=(function() return 698 -(208 + 490) ;end)();local v122=(function() return;end)();while true do if (v121==0) then v122=(function() return 0 + 0 ;end)();while true do if (v122~=(0 + 0)) then else v109=(function() return {v22(),v22(),nil,nil};end)();if (v107==(0 + 0)) then local v129=(function() return 202 -(14 + 188) ;end)();local v130=(function() return;end)();while true do if (v129==(675 -(534 + 141))) then v130=(function() return 0;end)();while true do if (v130==(0 + 0)) then v109[ #"xnx"]=(function() return v22();end)();v109[ #"0313"]=(function() return v22();end)();break;end end break;end end elseif (v107== #"}") then v109[ #"19("]=(function() return v23();end)();elseif (v107==(2 + 0)) then v109[ #"-19"]=(function() return v23() -(2^16) ;end)();elseif (v107== #"xxx") then local v316=(function() return 0;end)();local v317=(function() return;end)();while true do if (v316==(0 + 0)) then v317=(function() return 0 -0 ;end)();while true do if (v317==(0 -0)) then v109[ #"xnx"]=(function() return v23() -(2^(44 -28)) ;end)();v109[ #"0836"]=(function() return v22();end)();break;end end break;end end end v122=(function() return 1 + 0 ;end)();end if (v122~=1) then else v106=(function() return 2;end)();break;end end break;end end end if (v106==(0 + 0)) then v107=(function() return v20(v71,2, #"91(");end)();v108=(function() return v20(v71, #"?id=",402 -(115 + 281) );end)();v106=(function() return 1;end)();end if (v106~=2) then else if (v20(v108, #"]", #",")== #">") then v109[2]=(function() return v59[v109[2]];end)();end if (v20(v108,2,4 -2 )~= #"/") then else v109[ #"19("]=(function() return v59[v109[ #"xxx"]];end)();end v106=(function() return 3;end)();end if ((3 + 0)~=v106) then else if (v20(v108, #"gha", #"-19")== #"|") then v109[ #".com"]=(function() return v59[v109[ #"?id="]];end)();end v54[v70]=(function() return v109;end)();break;end end end end for v72= #"|",v23() do v55,v72,v28=(function() return v53(v55,v72,v28);end)();end return v57;end local function v29(v61,v62,v63) local v64=v61[2 -1 ];local v65=v61[7 -5 ];local v66=v61[870 -(550 + 317) ];return function(...) local v73=v64;local v74=v65;local v75=v66;local v76=v27;local v77=1;local v78= -(1 -0);local v79={};local v80={...};local v81=v12("#",...) -(1 + 0) ;local v82={};local v83={};for v104=0 -0 ,v81 do if ((2570>2409) and (v104>=v75)) then v79[v104-v75 ]=v80[v104 + (286 -(134 + 151)) ];else v83[v104]=v80[v104 + 1 ];end end local v84=(v81-v75) + 1 ;local v85;local v86;while true do local v105=0;while true do if ((v105==((2507 -(497 + 345)) -(970 + 695))) or (2609>=3234)) then v85=v73[v77];v86=v85[1 -(0 + 0) ];v105=1991 -(99 + 483 + 1408) ;end if (1==v105) then if ((v86<=(225 -160)) or (3033>=4031)) then if (v86<=(39 -7)) then if (v86<=15) then if ((v86<=(26 -(1352 -(605 + 728)))) or (1401==4668)) then if (v86<=3) then if (v86<=1) then if ((2776>=1321) and (v86>(1824 -(1195 + 629)))) then local v133=0 -0 ;local v134;local v135;while true do if ((v133==(241 -(187 + 54))) or (487>2303)) then v134=v85[782 -(116 + 46 + 618) ];v135=v83[v134];v133=1 + 0 ;end if (v133==(1 + 0)) then for v447=v134 + (1 -0) ,v85[4 -1 ] do v7(v135,v83[v447]);end break;end end else v83[v85[2]]=v83[v85[1 + 2 ]] + v83[v85[(3646 -2006) -(1373 + 13 + 250) ]] ;end elseif ((v86>2) or (4503==3462)) then if (v83[v85[2]]~=v83[v85[4]]) then v77=v77 + ((3700 -2699) -(451 + 549)) ;else v77=v85[1 + 2 ];end elseif (v85[2 -0 ]<=v83[v85[6 -2 ]]) then v77=v77 + ((1249 + 136) -(746 + 638)) ;else v77=v85[(5 -3) + 1 ];end elseif (v86<=(7 -(2 + 0))) then if (v86==(493 -(457 + 32))) then if v83[v85[343 -(218 + 123) ]] then v77=v77 + ((672 + 910) -(1535 + 46)) ;else v77=v85[3];end else local v137=0 + 0 ;local v138;while true do if (v137==(0 + 0)) then v138=v83[v85[564 -(306 + 254) ]];if ((553<=1543) and  not v138) then v77=v77 + 1 + 0 ;else local v481=0;while true do if ((2015==2015) and (v481==(0 -0))) then v83[v85[1469 -(899 + 568) ]]=v138;v77=v85[2 + 1 ];break;end end end break;end end end elseif (v86==(14 -8)) then v83[v85[605 -((1670 -(832 + 570)) + 316 + 19) ]]=v83[v85[293 -(16 + 44 + 230) ]] * v83[v85[576 -(426 + 146) ]] ;else local v140=v85[2];v83[v140]=v83[v140](v83[v140 + 1 + 0 ]);end elseif (v86<=((5191 -3724) -(282 + 1174))) then if (v86<=(820 -(569 + 242))) then if (v86>8) then local v142=v85[3];local v143=v83[v142];for v318=v142 + ((1 + 1) -1) ,v85[1 + 3 ] do v143=v143   .. v83[v318] ;end v83[v85[1026 -((1502 -(588 + 208)) + 318) ]]=v143;else v83[v85[1253 -(721 + 530) ]]=v63[v85[3]];end elseif (v86==10) then local v147=1271 -(945 + 326) ;local v148;while true do if (v147==(0 -0)) then v148=v85[2 + 0 ];v83[v148]=v83[v148](v13(v83,v148 + (701 -((730 -459) + 429)) ,v85[3 + 0 ]));break;end end else local v149=1800 -(884 + 916) ;local v150;while true do if ((v149==(1500 -(1408 + 92))) or (4241<=2332)) then v150=v85[1088 -(461 + 625) ];do return v13(v83,v150,v78);end break;end end end elseif (v86<=(1301 -(993 + 295))) then if ((v86==(1 + 11)) or (2364<1157)) then local v151=v85[1173 -(418 + (1576 -823)) ];local v152={v83[v151](v13(v83,v151 + 1 + 0 ,v78))};local v153=0 + 0 ;for v319=v151,v85[2 + 2 + 0 ] do local v320=529 -(406 + 123) ;while true do if ((v320==(1769 -(1749 + 20))) or (1167>1278)) then v153=v153 + 1 + 0 ;v83[v319]=v152[v153];break;end end end else local v154=0;while true do if ((v154==((1975 -(232 + 421)) -(1249 + 73))) or (1145<=1082)) then v83[v85[1 + 1 ]]=v85[3]~=(1145 -((2355 -(1569 + 320)) + 679)) ;v77=v77 + ((1 + 1) -1) ;break;end end end elseif ((v86>((8 + 31) -(84 -59))) or (3105==4881)) then if (v85[607 -(316 + 289) ]<v83[v85[4]]) then v77=v85[1903 -(106 + 1794) ];else v77=v77 + 1 + 0 ;end else v83[v85[1 + 1 ]]=v83[v85[8 -5 ]] + v85[10 -6 ] ;end elseif (v86<=23) then if (v86<=(133 -(4 + 110))) then if ((v86<=(601 -(57 + (1379 -852)))) or (1887>4878)) then if (v86>(1443 -(41 + 1386))) then if (v83[v85[2]]==v85[107 -(17 + 86) ]) then v77=v77 + 1 + 0 ;else v77=v85[6 -3 ];end else v83[v85[5 -3 ]][v83[v85[169 -(6 + 116 + 44) ]]]=v83[v85[(1459 -(666 + 787)) -2 ]];end elseif (v86>(59 -41)) then local v158=v85[2 + 0 ];v83[v158]=v83[v158]();else local v160=0 + 0 ;local v161;while true do if (v160==(425 -(360 + 65))) then v161=v83[v85[4]];if  not v161 then v77=v77 + (1 -0) ;else local v482=0;while true do if ((v482==(65 -(30 + 35))) or (4087>4116)) then v83[v85[2 + 0 ]]=v161;v77=v85[1260 -(1043 + 214) ];break;end end end break;end end end elseif (v86<=(79 -58)) then if (v86==(1232 -(302 + 21 + (1143 -(79 + 175))))) then do return;end elseif (v85[2]<v83[v85[10 -6 ]]) then v77=v85[3];else v77=v77 + (581 -(361 + 219)) ;end elseif ((1106<=1266) and (v86>(342 -(53 + (420 -153))))) then local v162=v74[v85[1 + 0 + 2 ]];local v163;local v164={};v163=v10({},{__index=function(v321,v322) local v323=v164[v322];return v323[414 -(15 + 398) ][v323[2]];end,__newindex=function(v324,v325,v326) local v327=v164[v325];v327[983 -(18 + 964) ][v327[7 -5 ]]=v326;end});for v329=1 + (0 -0) ,v85[4] do v77=v77 + 1 + (899 -(503 + 396)) ;local v330=v73[v77];if (v330[(1032 -(92 + 89)) -(20 + 830) ]==22) then v164[v329-(1 + 0) ]={v83,v330[3]};else v164[v329-(1 + 0) ]={v62,v330[1 + 2 ]};end v82[ #v82 + 1 + 0 ]=v164;end v83[v85[1 + 0 + 1 ]]=v29(v162,v163,v63);else v83[v85[4 -2 ]]=v83[v85[3]];end elseif (v86<=(16 + 11)) then if (v86<=25) then if (v86>(61 -37)) then v83[v85[1553 -(1126 + 425) ]]=v83[v85[408 -((462 -344) + 287) ]][v85[15 -11 ]];else local v170=v85[(154 + 969) -((268 -150) + 1003) ];local v171={v83[v170](v13(v83,v170 + 1 ,v78))};local v172=0;for v332=v170,v85[(333 + 48) -(68 + 74 + 235) ] do v172=v172 + (4 -3) ;v83[v332]=v171[v172];end end elseif (v86==(6 + 20)) then local v173=v85[979 -(553 + 424) ];v83[v173]=v83[v173](v13(v83,v173 + (1 -0) ,v85[3 + 0 ]));else v83[v85[2 + 0 ]]=v83[v85[2 + 1 ]] * v85[2 + (5 -3) ] ;end elseif ((3155<4650) and (v86<=(17 + 12))) then if (v86==28) then v63[v85[6 -3 ]]=v83[v85[5 -3 ]];else v83[v85[1 + 1 ]][v85[6 -3 ]]=v85[2 + 2 ];end elseif ((3774>=1839) and (v86<=(144 -114))) then v83[v85[755 -(239 + 514) ]]= #v83[v85[2 + 1 ]];elseif (v86>(1360 -(797 + 532))) then if (v83[v85[2 + 0 ]]<=v83[v85[2 + 2 ]]) then v77=v77 + (2 -1) ;else v77=v85[3];end else local v373=v85[2];local v374=v85[1206 -(373 + 829) ];local v375=v373 + (733 -(476 + 255)) ;local v376={v83[v373](v83[v373 + 1 + 0 ],v83[v375])};for v420=1 -0 ,v374 do v83[v375 + v420 ]=v376[v420];end local v377=v376[1 -(0 -0) ];if v377 then local v451=238 -(64 + 174) ;while true do if (v451==((1244 -(485 + 759)) + 0)) then v83[v375]=v377;v77=v85[3];break;end end else v77=v77 + (1 -0) ;end end elseif (v86<=48) then if (v86<=(376 -(144 + 192))) then if (v86<=(252 -(42 + 174))) then if ((2811==2811) and (v86<=34)) then if (v86==(25 + 8)) then v62[v85[3]]=v83[v85[2 + (0 -0) ]];elseif ((2146>1122) and (v85[1 + 1 ]==v83[v85[1508 -(363 + (2330 -(442 + 747))) ]])) then v77=v77 + ((2716 -(832 + 303)) -((2129 -(88 + 858)) + 121 + 276)) ;else v77=v85[8 -5 ];end elseif (v86>35) then do return v83[v85[2 + 0 + 0 ]];end else v83[v85[2 + 0 ]]={};end elseif (v86<=38) then if (v86==(2012 -(79 + 1834 + 62))) then v83[v85[2 + 0 ]]=v62[v85[7 -4 ]];elseif (v83[v85[1935 -(565 + 1368) ]]~=v85[15 -11 ]) then v77=v77 + (1662 -(1477 + 184)) ;else v77=v85[792 -(766 + 23) ];end elseif (v86>(52 -13)) then v77=v85[3 + 0 ];else v83[v85[858 -(564 + 292) ]]=v62[v85[4 -1 ]];end elseif (v86<=(132 -88)) then if (v86<=(346 -((1204 -960) + 60))) then if (v86==((43 -11) + 9)) then v83[v85[478 -(41 + 435) ]]=v83[v85[1004 -(938 + 63) ]]/v85[10 -6 ] ;else local v190=v85[2 + 0 ];local v191={};for v335=1126 -(936 + 189) , #v82 do local v336=v82[v335];for v380=0, #v336 do local v381=0 + 0 ;local v382;local v383;local v384;while true do if ((1613 -(1565 + 48))==v381) then v382=v336[v380];v383=v382[1 + 0 ];v381=1139 -(782 + 356) ;end if (v381==(268 -(176 + 91))) then v384=v382[4 -2 ];if (((v383==v83) and (v384>=v190)) or (56==3616)) then local v501=0 -(0 -0) ;while true do if (((2165 -(1036 + 37)) -(975 + 117))==v501) then v191[v384]=v383[v384];v382[1]=v191;break;end end end break;end end end end end elseif (v86==43) then for v337=v85[2],v85[1878 -(157 + 1718) ] do v83[v337]=nil;end else local v192=0 + 0 + 0 ;local v193;while true do if ((0==v192) or (2421<622)) then v193=v85[6 -4 ];v83[v193](v13(v83,v193 + 1 ,v85[3]));break;end end end elseif (v86<=46) then if (v86==(153 -108)) then local v194=v85[1020 -(697 + 321) ];local v195=v83[v85[3]];v83[v194 + (2 -1) ]=v195;v83[v194]=v195[v85[4]];elseif (v85[(5 -2) -1 ]==v83[v85[8 -(4 + 0) ]]) then v77=v77 + 1 + 0 ;else v77=v85[5 -2 ];end elseif (v86==(125 -(1558 -(641 + 839)))) then if  not v83[v85[915 -(910 + 3) ]] then v77=v77 + ((3130 -1902) -(322 + 905)) ;else v77=v85[614 -((2286 -(1466 + 218)) + 9) ];end else v83[v85[2]]=v83[v85[1192 -(449 + 740) ]] -v83[v85[876 -(826 + 46) ]] ;end elseif ((1009<=1130) and (v86<=(1003 -(245 + 702)))) then if ((2758<2980) and (v86<=(164 -112))) then if ((v86<=(8 + 9 + 33)) or (86>=3626)) then if (v86>49) then local v200=1148 -(556 + 592) ;local v201;while true do if ((2395==2395) and (v200==(1898 -(260 + 583 + 1055)))) then v201=v85[(1250 -(329 + 479)) -(382 + (912 -(174 + 680))) ];v83[v201](v13(v83,v201 + ((10 -7) -2) ,v78));break;end end else v83[v85[3 -1 ]]=v83[v85[3]] * v83[v85[4 + 0 ]] ;end elseif (v86==(37 + 14)) then v83[v85[3 -1 ]]=v85[8 -5 ]^v83[v85[4]] ;else v83[v85[1207 -(902 + 303) ]]=v29(v74[v85[3]],nil,v63);end elseif (v86<=(118 -64)) then if (v86>53) then local v205=v85[4 -2 ];local v206=v83[v205];local v207=v85[1 + 2 ];for v339=(2430 -(396 + 343)) -(1121 + 569) ,v207 do v206[v339]=v83[v205 + v339 ];end elseif (v83[v85[2]]==v83[v85[218 -(22 + 192) ]]) then v77=v77 + (684 -(483 + 200)) ;else v77=v85[1466 -(125 + 1279 + 59) ];end elseif (v86>(150 -95)) then if (v83[v85[2 -(1477 -(29 + 1448)) ]]<v83[v85[769 -(468 + 297) ]]) then v77=v77 + (563 -(334 + 228)) ;else v77=v85[10 -7 ];end else do return;end end elseif (v86<=(139 -79)) then if (v86<=(105 -47)) then if (v86>(17 + 40)) then v83[v85[238 -(141 + 95) ]]=v85[3 + 0 ];else local v210=0 -0 ;local v211;while true do if (v210==0) then v211=v85[4 -2 ];do return v83[v211](v13(v83,v211 + 1 + 0 ,v85[8 -5 ]));end break;end end end elseif (v86>(42 + 17)) then v83[v85[2]]=v63[v85[2 + 1 ]];else v83[v85[2 -(1389 -(135 + 1254)) ]]=v83[v85[2 + (3 -2) ]][v85[167 -(92 + 71) ]];end elseif ((3780>2709) and (v86<=62)) then if (v86>(31 + 30)) then if ((v85[2 -0 ]<=v83[v85[769 -(574 + 191) ]]) or (237>=2273)) then v77=v77 + 1 + 0 ;else v77=v85[7 -4 ];end else v83[v85[2]]=v83[v85[3]][v83[v85[3 + 1 ]]];end elseif (v86<=63) then v83[v85[851 -(254 + 595) ]]();elseif ((v86==64) or (2040<=703)) then if ((3279<=3967) and (v83[v85[2]]<v83[v85[130 -((256 -201) + 71) ]])) then v77=v85[3];else v77=v77 + 1 + 0 ;end elseif (v83[v85[2 -0 ]]~=v83[v85[1794 -(573 + 1217) ]]) then v77=v77 + 1 ;else v77=v85[8 -5 ];end elseif (v86<=(8 + 90)) then if ((v86<=(130 -(1576 -(389 + 1138)))) or (1988==877)) then if (v86<=((1586 -(102 + 472)) -(714 + 225))) then if (v86<=((190 + 11) -(74 + 58))) then if ((4291>1912) and (v86<=67)) then if (v86>(91 -25)) then if ((2003<2339) and (v83[v85[1 + 1 ]]==v85[5 -(1 + 0) ])) then v77=v77 + ((2352 -(320 + 1225)) -(118 + 688)) ;else v77=v85[51 -(25 + (40 -17)) ];end else local v218=v85[1 + 0 + 1 ];local v219,v220=v76(v83[v218](v13(v83,v218 + 1 ,v85[1889 -(927 + 959) ])));v78=(v220 + v218) -(3 -(1466 -(157 + 1307))) ;local v221=732 -((1875 -(821 + 1038)) + 716) ;for v342=v218,v78 do v221=v221 + 1 ;v83[v342]=v219[v221];end end elseif (v86>(131 -63)) then local v222=v85[2];local v223={v83[v222](v13(v83,v222 + 1 ,v85[6 -3 ]))};local v224=285 -((436 -261) + 110) ;for v345=v222,v85[9 -5 ] do local v346=0;while true do if (v346==(0 -0)) then v224=v224 + (1797 -(503 + 1293)) ;v83[v345]=v223[v224];break;end end end else v83[v85[5 -3 ]]=v85[3 + 0 ]^v83[v85[1065 -(810 + 251) ]] ;end elseif (v86<=(50 + 21)) then if (v86>(22 + 48)) then v83[v85[2 + 0 ]]=v29(v74[v85[3]],nil,v63);else local v227=533 -(43 + 490) ;local v228;while true do if ((432==432) and (v227==0)) then v228=v85[2];do return v83[v228](v13(v83,v228 + (734 -(711 + 22)) ,v85[3]));end break;end end end elseif (v86==72) then v83[v85[7 -(1 + 4) ]][v83[v85[3]]]=v83[v85[(1532 -669) -(240 + 231 + 388) ]];else v83[v85[2]]={};end elseif ((v86<=77) or (1145>=1253)) then if (v86<=(19 + 56)) then if (v86==(117 -(106 -63))) then v83[v85[1 + 1 ]]=v83[v85[1747 -(1344 + (1426 -(834 + 192))) ]] -v83[v85[4]] ;else v83[v85[407 -(255 + 150) ]]= #v83[v85[3 + 0 + 0 ]];end elseif (v86>76) then local v234=0 + 0 ;local v235;local v236;while true do if (v234==(4 -3)) then v83[v235 + ((1 + 2) -2) ]=v236;v83[v235]=v236[v85[1743 -(404 + 1335) ]];break;end if (v234==(406 -(183 + 5 + 218))) then v235=v85[2 -0 ];v236=v83[v85[3]];v234=1 + 0 ;end end elseif (v83[v85[(1 -0) + 1 ]]<=v83[v85[(645 -(300 + 4)) -(10 + 327) ]]) then v77=v77 + 1 + 0 ;else v77=v85[(92 + 249) -((308 -190) + 220) ];end elseif (v86<=(27 + 52)) then if (v86>(527 -(108 + 341))) then v77=v85[2 + 1 ];else v83[v85[2]][v85[12 -9 ]]=v83[v85[1497 -(711 + 782) ]];end elseif (v86==(153 -73)) then local v240=469 -(270 + 199) ;local v241;while true do if (v240==(1 + 0)) then for v456=v241,v78 do local v457=v79[v456-v241 ];v83[v456]=v457;end break;end if (v240==(1819 -(580 + 1239))) then v241=v85[5 -3 ];v78=(v241 + v84) -1 ;v240=1 + 0 ;end end else local v242=0 + 0 ;local v243;local v244;local v245;while true do if ((3418>2118) and (v242==(0 + 0))) then v243=v74[v85[7 -4 ]];v244=nil;v242=1 + 0 ;end if (v242==(1169 -(645 + 522))) then for v459=1,v85[1794 -(1010 + 780) ] do v77=v77 + 1 + 0 ;local v460=v73[v77];if (v460[4 -3 ]==(64 -42)) then v245[v459-(1837 -(1045 + 791)) ]={v83,v460[4 -1 ]};else v245[v459-(506 -(351 + 154)) ]={v62,v460[6 -3 ]};end v82[ #v82 + (1560 -((3459 -2078) + 178)) ]=v245;end v83[v85[2 + 0 ]]=v29(v243,v244,v63);break;end if (v242==(1 + 0 + 0)) then v245={};v244=v10({},{__index=function(v462,v463) local v464=0;local v465;while true do if ((3066<=3890) and (v464==(0 + 0))) then v465=v245[v463];return v465[3 -2 ][v465[2]];end end end,__newindex=function(v466,v467,v468) local v469=v245[v467];v469[1][v469[2]]=v468;end});v242=2;end end end elseif ((v86<=(47 + 42)) or (2998>=3281)) then if (v86<=((288 + 267) -(381 + 89))) then if ((v86<=(74 + 9)) or (4649<=2632)) then if (v86>(56 + 26)) then local v246=v85[(2 + 0) -0 ];v83[v246](v83[v246 + (1157 -(1074 + 41 + 41)) ]);elseif ((v85[2]<v83[v85[8 -(3 + 1) ]]) or (3860>4872)) then v77=v77 + (1785 -(214 + 1570)) ;else v77=v85[3];end elseif ((v86==(1539 -(990 + 465))) or (3998==2298)) then do return v83[v85[2]];end else v83[v85[1 + 1 ]]=v85[2 + 1 ]~=((1414 -(1001 + 413)) + 0) ;v77=v77 + ((6 -3) -2) ;end elseif (v86<=87) then if (v86>(1812 -(1668 + 58))) then local v248=v85[628 -(512 + 114) ];local v249=v85[(892 -(244 + 638)) -6 ];local v250=v248 + (3 -1) ;local v251={v83[v248](v83[v248 + 1 + 0 ],v83[v250])};for v347=1 + 0 ,v249 do v83[v250 + v347 ]=v251[v347];end local v252=v251[1];if (v252 or (8>=2739)) then v83[v250]=v252;v77=v85[3 + 0 ];else v77=v77 + 1 ;end elseif (v85[6 -(11 -7) ]<v83[v85[4]]) then v77=v77 + (1995 -(109 + 1885)) ;else v77=v85[1472 -(1269 + (802 -(512 + 90))) ];end elseif ((2590==2590) and (v86==(168 -80))) then v83[v85[2]]=v85[(2724 -(1665 + 241)) -(98 + (1434 -(373 + 344))) ]~=(826 -(802 + 24)) ;else local v254=v85[2 -(0 + 0) ];v78=(v254 + v84) -(1 -0) ;for v350=v254,v78 do local v351=v79[v350-v254 ];v83[v350]=v351;end end elseif (v86<=(14 + 79)) then if (v86<=(70 + 21)) then if ((v86==90) or (82>=1870)) then local v255=v85[1 + 0 + 1 ];local v256=v83[v255];local v257=v85[1 + 2 ];for v353=(5 -3) -(1 -0) ,v257 do v256[v353]=v83[v255 + v353 ];end elseif (v83[v85[6 -4 ]]<v83[v85[2 + 2 ]]) then v77=v77 + 1 + (1099 -(35 + 1064)) ;else v77=v85[3 + 0 + (0 -0) ];end elseif (v86==92) then local v258=v85[1 + 1 + 0 ];local v259,v260=v76(v83[v258](v83[v258 + 1 + 0 ]));v78=(v260 + v258) -(1434 -(797 + 636)) ;local v261=0 -0 ;for v356=v258,v78 do v261=v261 + (1620 -(1427 + 192)) ;v83[v356]=v259[v261];end else local v262=(1236 -(298 + 938)) + 0 ;local v263;while true do if (v262==(0 -0)) then v263=v85[2 + 0 ];v83[v263]=v83[v263](v83[v263 + 1 + 0 ]);break;end end end elseif (v86<=95) then if ((2624<4557) and (v86==(420 -(192 + 134)))) then v83[v85[1278 -(316 + 960) ]]=v83[v85[2 + 1 ]][v83[v85[4 + 0 ]]];elseif ((v83[v85[2 + 0 ]]==v83[v85[4]]) or (3131>3542)) then v77=v77 + 1 ;else v77=v85[11 -8 ];end elseif ((2577>=1578) and (v86<=96)) then v83[v85[553 -(83 + 468) ]]();elseif (v86>(1903 -(1202 + 604))) then local v398=v85[9 -7 ];v83[v398](v13(v83,v398 + (1 -0) ,v78));else local v399=v85[2];do return v13(v83,v399,v399 + v85[3] );end end elseif ((4103<=4571) and (v86<=114)) then if (v86<=(293 -187)) then if (v86<=(427 -(45 + 280))) then if (v86<=100) then if (v86==99) then v83[v85[1261 -(233 + 1026) ]]=v83[v85[3 + 0 ]];else local v268=v85[(1668 -(636 + 1030)) + 0 + 0 ];local v269={v83[v268](v83[v268 + 1 + 0 ])};local v270=0 + 0 ;for v359=v268,v85[6 -2 ] do v270=v270 + (1912 -(340 + 1571)) ;v83[v359]=v269[v270];end end elseif ((v86==(40 + 61)) or (1495==4787)) then do return v83[v85[1774 -(1733 + 39) ]]();end else local v271=v85[5 -3 ];v83[v271](v83[v271 + (1035 -(125 + 909)) ]);end elseif ((v86<=(2052 -(1071 + 25 + 852))) or (310>4434)) then if ((2168<=4360) and (v86>(14 + 33 + 56))) then v83[v85[2 -0 ]]=v83[v85[3 + 0 ]] + v85[516 -(409 + 103) ] ;elseif v83[v85[238 -(46 + 190) ]] then v77=v77 + 1 + 0 ;else v77=v85[98 -(51 + 44) ];end elseif ((994==994) and (v86==(30 + (296 -(55 + 166))))) then local v273=(256 + 1061) -(1114 + 21 + 182) ;local v274;local v275;while true do if (v273==(727 -(228 + 498))) then for v471=1, #v82 do local v472=v82[v471];for v486=0, #v472 do local v487=0;local v488;local v489;local v490;while true do if ((1655>401) and (v487==((0 -0) + 0))) then v488=v472[v486];v489=v488[1 + 0 ];v487=664 -(174 + (786 -(36 + 261))) ;end if (v487==(2 -1)) then v490=v488[2];if ((v489==v83) and (v490>=v274)) then local v513=1905 -(830 + 1075) ;while true do if (v513==(524 -(303 + 221))) then v275[v490]=v489[v490];v488[1]=v275;break;end end end break;end end end end break;end if (v273==0) then v274=v85[2];v275={};v273=(2221 -951) -(231 + 1038) ;end end else v83[v85[2 + 0 ]]=v85[1165 -(171 + 991) ];end elseif (v86<=((1821 -(34 + 1334)) -343)) then if (v86<=108) then if ((3063<=3426) and (v86>(287 -180))) then v62[v85[7 -4 ]]=v83[v85[2 + 0 ]];else local v280=v85[10 -7 ];local v281=v83[v280];for v362=v280 + 1 + 0 ,v85[4] do v281=v281   .. v83[v362] ;end v83[v85[5 -3 ]]=v281;end elseif (v86>(175 -66)) then v83[v85[2 + 0 ]][v85[9 -(1289 -(1035 + 248)) ]]=v83[v85[1252 -(111 + 1137) ]];elseif (v83[v85[(181 -(20 + 1)) -(91 + 67) ]]<v83[v85[11 -7 ]]) then v77=v85[1 + 2 ];else v77=v77 + (524 -(423 + 100)) ;end elseif ((1459>764) and (v86<=(1 + 111))) then if (v86>(307 -196)) then v83[v85[2 + 0 ]][v85[774 -(326 + 232 + 213) ]]=v85[4];else local v287=0 -0 ;local v288;local v289;local v290;while true do if (v287==(2 -1)) then v290=0;for v473=v288,v85[9 -5 ] do v290=v290 + (712 -((849 -(134 + 185)) + 181)) ;v83[v473]=v289[v290];end break;end if ((881 -(614 + (1400 -(549 + 584))))==v287) then v288=v85[2];v289={v83[v288](v83[v288 + 1 ])};v287=1;end end end elseif ((v86==(183 -70)) or (641>4334)) then local v291=0 -0 ;local v292;while true do if ((3399>=2260) and (v291==0)) then v292=v85[5 -3 ];do return v13(v83,v292,v78);end break;end end else v83[v85[1 + (686 -(314 + 371)) ]]=v83[v85[4 -1 ]] * v85[(24 -17) -3 ] ;end elseif (v86<=((2902 -(478 + 490)) -(1293 + 519))) then if (v86<=(240 -122)) then if (v86<=116) then if (v86==(300 -(99 + 86))) then v83[v85[2]]=v83[v85[(1177 -(786 + 386)) -2 ]]/v85[17 -13 ] ;else v63[v85[6 -(9 -6) ]]=v83[v85[2 + 0 ]];end elseif (v86>(24 + 93)) then if ((v83[v85[4 -2 ]]~=v85[1 + 3 ]) or (393>=4242)) then v77=v77 + 1 + 0 ;else v77=v85[2 + (1380 -(1055 + 324)) ];end else local v297=v85[(2438 -(1093 + 247)) -(631 + 78 + 387) ];do return v83[v297](v13(v83,v297 + (1859 -(673 + 1185)) ,v78));end end elseif (v86<=(348 -228)) then if (v86>(381 -262)) then local v298=0;local v299;local v300;local v301;local v302;while true do if (v298==((1 + 0) -0)) then v78=(v301 + v299) -1 ;v302=0 + 0 ;v298=2 + (0 -0) ;end if ((989<4859) and (v298==(2 -0))) then for v476=v299,v78 do v302=v302 + 1 + 0 ;v83[v476]=v300[v302];end break;end if ((v298==0) or (4795<949)) then v299=v85[3 -1 ];v300,v301=v76(v83[v299](v83[v299 + ((3 -2) -0) ]));v298=1881 -(446 + 1434) ;end end else local v303=v85[2];local v304={v83[v303](v13(v83,v303 + (1284 -(1040 + 243)) ,v85[8 -5 ]))};local v305=1847 -(559 + 1288) ;for v363=v303,v85[1935 -(609 + 1322) ] do local v364=454 -(13 + (1254 -813)) ;while true do if ((3842==3842) and (v364==(0 -0))) then v305=v305 + 1 ;v83[v363]=v304[v305];break;end end end end elseif (v86==121) then for v365=v85[5 -3 ],v85[7 -4 ] do v83[v365]=nil;end else local v306=0 -0 ;local v307;while true do if (v306==(0 + 0)) then v307=v85[7 -5 ];v83[v307]=v83[v307]();break;end end end elseif ((1747<=3601) and (v86<=(45 + 81))) then if (v86<=(55 + 69)) then if ((v86==123) or (804>4359)) then local v308=0 -0 ;local v309;while true do if (v308==(0 + 0)) then v309=v85[2 + 0 ];v83[v309]=v83[v309](v13(v83,v309 + (1 -0) ,v78));break;end end else local v310=v85[2];do return v83[v310](v13(v83,v310 + 1 + (0 -0) ,v78));end end elseif (v86>(70 + 55)) then v83[v85[2 + 0 ]]=v83[v85[3 + 0 ]] + v83[v85[4]] ;else v83[v85[2]]=v85[3 + 0 ]~=0 ;end elseif (v86<=128) then if (v86==(560 -(153 + 280))) then local v313=v85[5 -3 ];v83[v313](v13(v83,v313 + 1 + 0 ,v85[2 + 1 ]));else do return v83[v85[2 + 0 ]]();end end elseif (v86<=129) then if  not v83[v85[2 + 0 ]] then v77=v77 + 1 ;else v77=v85[3];end elseif (v86>(95 + (120 -85))) then local v404=v85[2 -0 ];local v405,v406=v76(v83[v404](v13(v83,v404 + 1 + 0 ,v85[670 -(89 + 578) ])));v78=(v406 + v404) -(1 + 0) ;local v407=0;for v445=v404,v78 do local v446=0 -0 ;while true do if ((4670>=3623) and ((1049 -(572 + 477))==v446)) then v407=v407 + 1 + 0 ;v83[v445]=v405[v407];break;end end end else local v408=0 + 0 + 0 ;local v409;while true do if (v408==(0 + 0)) then v409=v85[(224 -136) -(84 + 2) ];v83[v409]=v83[v409](v13(v83,v409 + 1 ,v78));break;end end end v77=v77 + (1 -0) ;break;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
